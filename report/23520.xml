<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20190121 12:57:13.875" generator="Robot 3.0.2 (Python 3.5.3 on linux)">
<suite id="s1" name="Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094">
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/update-nad.robot" id="s1-s1" name="Update-Nad">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190121 12:57:19.395">Connecting to tnt-server localhost...</msg>
<status endtime="20190121 12:57:19.397" status="PASS" starttime="20190121 12:57:19.390"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 12:57:19.408">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190121 12:57:19.410">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190121 12:57:21.472">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190121 12:57:21.474" status="PASS" starttime="20190121 12:57:19.400"></status>
</kw>
<status endtime="20190121 12:57:21.477" status="PASS" starttime="20190121 12:57:19.384"></status>
</kw>
<test id="s1-s1-t1" name="SKTB-13351 FBUS test">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 12:57:21.560" status="PASS" starttime="20190121 12:57:21.499"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 12:57:21.610" status="PASS" starttime="20190121 12:57:21.563"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 12:57:21.661" status="PASS" starttime="20190121 12:57:21.613"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 12:57:23.669">Slept 2 seconds</msg>
<status endtime="20190121 12:57:23.672" status="PASS" starttime="20190121 12:57:21.664"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 12:57:23.721" status="PASS" starttime="20190121 12:57:23.674"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 12:57:23.771" status="PASS" starttime="20190121 12:57:23.724"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>45s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 12:58:08.779">Slept 45 seconds</msg>
<status endtime="20190121 12:58:08.781" status="PASS" starttime="20190121 12:57:23.775"></status>
</kw>
<status endtime="20190121 12:58:08.783" status="PASS" starttime="20190121 12:57:21.488"></status>
</kw>
<kw name="Step_1">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get update'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 12:58:08.797">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get update'</msg>
<msg level="INFO" timestamp="20190121 12:58:08.822">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 12:58:14.261">Process completed.</msg>
<msg level="INFO" timestamp="20190121 12:58:14.265">${info} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 12:58:14.266" status="PASS" starttime="20190121 12:58:08.792"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status endtime="20190121 12:58:14.280" status="PASS" starttime="20190121 12:58:14.270"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get upgrade -y'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 12:58:14.288">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get upgrade -y'</msg>
<msg level="INFO" timestamp="20190121 12:58:14.314">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 12:58:15.255">Process completed.</msg>
<msg level="INFO" timestamp="20190121 12:58:15.258">${info} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 12:58:15.259" status="PASS" starttime="20190121 12:58:14.284"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status endtime="20190121 12:58:15.271" status="PASS" starttime="20190121 12:58:15.263"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get install -y can-utils'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 12:58:15.278">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get install -y can-utils'</msg>
<msg level="INFO" timestamp="20190121 12:58:15.303">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 12:58:16.112">Process completed.</msg>
<msg level="INFO" timestamp="20190121 12:58:16.115">${info} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 12:58:16.116" status="PASS" starttime="20190121 12:58:15.274"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status endtime="20190121 12:58:16.127" status="PASS" starttime="20190121 12:58:16.120"></status>
</kw>
<status endtime="20190121 12:58:16.130" status="PASS" starttime="20190121 12:58:08.786"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 12:58:16.191" status="PASS" starttime="20190121 12:58:16.141"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 12:58:16.343" status="PASS" starttime="20190121 12:58:16.197"></status>
</kw>
<status endtime="20190121 12:58:16.345" status="PASS" starttime="20190121 12:58:16.134"></status>
</kw>
<doc>Implements Test Task SKTB-update-nad</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status endtime="20190121 12:58:16.347" critical="yes" status="PASS" starttime="20190121 12:57:21.479"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg level="INFO" timestamp="20190121 12:58:18.092">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190121 12:58:18.124">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190121 12:58:18.125" status="PASS" starttime="20190121 12:58:16.634"></status>
</kw>
<status endtime="20190121 12:58:18.147" status="PASS" starttime="20190121 12:58:16.479"></status>
</kw>
<status endtime="20190121 12:58:18.150" status="PASS" starttime="20190121 12:58:16.432"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190121 12:58:18.150" status="PASS" starttime="20190121 12:57:14.365"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/CI_update_chorus.robot" id="s1-s2" name="CI update chorus">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190121 12:58:18.642">Connecting to tnt-server localhost...</msg>
<status endtime="20190121 12:58:18.653" status="PASS" starttime="20190121 12:58:18.627"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 12:58:18.670">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190121 12:58:18.680">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190121 12:58:20.539">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190121 12:58:20.548" status="PASS" starttime="20190121 12:58:18.656"></status>
</kw>
<status endtime="20190121 12:58:20.551" status="PASS" starttime="20190121 12:58:18.622"></status>
</kw>
<test id="s1-s2-t1" name="Ci_update_chorus Chorus SW Flashing">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 12:58:20.671" status="PASS" starttime="20190121 12:58:20.588"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 12:58:20.753" status="PASS" starttime="20190121 12:58:20.674"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 12:58:20.859" status="PASS" starttime="20190121 12:58:20.756"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 12:58:22.878">Slept 2 seconds</msg>
<status endtime="20190121 12:58:22.880" status="PASS" starttime="20190121 12:58:20.862"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 12:58:22.950" status="PASS" starttime="20190121 12:58:22.883"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${250000}</arg>
</arguments>
<status endtime="20190121 12:58:22.999" status="PASS" starttime="20190121 12:58:22.953"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190121 12:58:23.049" status="PASS" starttime="20190121 12:58:23.003"></status>
</kw>
<status endtime="20190121 12:58:23.052" status="PASS" starttime="20190121 12:58:20.580"></status>
</kw>
<kw name="Step_1">
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 12:58:25.066">Slept 2 seconds</msg>
<status endtime="20190121 12:58:25.068" status="PASS" starttime="20190121 12:58:23.061"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190121 12:59:53.134">${RESULT} = Flashing sucessfully finished.</msg>
<status endtime="20190121 12:59:53.135" status="PASS" starttime="20190121 12:58:25.071"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 12:59:53.142">Flashing sucessfully finished.</msg>
<status endtime="20190121 12:59:53.144" status="PASS" starttime="20190121 12:59:53.138"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 12:59:53.152" status="PASS" starttime="20190121 12:59:53.147"></status>
</kw>
<status endtime="20190121 12:59:53.154" status="PASS" starttime="20190121 12:58:23.055"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190121 12:59:53.211" status="PASS" starttime="20190121 12:59:53.164"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 12:59:53.261" status="PASS" starttime="20190121 12:59:53.215"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 12:59:53.311" status="PASS" starttime="20190121 12:59:53.264"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 12:59:53.375" status="PASS" starttime="20190121 12:59:53.314"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 12:59:53.459" status="PASS" starttime="20190121 12:59:53.383"></status>
</kw>
<status endtime="20190121 12:59:53.462" status="PASS" starttime="20190121 12:59:53.158"></status>
</kw>
<doc>Implements Test Task Ci_update_chorus</doc>
<tags>
<tag>Flashing</tag>
</tags>
<status endtime="20190121 12:59:53.463" critical="yes" status="PASS" starttime="20190121 12:58:20.557"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg level="INFO" timestamp="20190121 12:59:55.022">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190121 12:59:55.079">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190121 12:59:55.080" status="PASS" starttime="20190121 12:59:53.519"></status>
</kw>
<status endtime="20190121 12:59:55.082" status="PASS" starttime="20190121 12:59:53.497"></status>
</kw>
<status endtime="20190121 12:59:55.084" status="PASS" starttime="20190121 12:59:53.491"></status>
</kw>
<doc>Serial flashing test fof CI</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190121 12:59:55.084" status="PASS" starttime="20190121 12:58:18.256"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-31405.robot" id="s1-s3" name="SKTB-31405">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190121 12:59:55.679">Connecting to tnt-server localhost...</msg>
<status endtime="20190121 12:59:55.688" status="PASS" starttime="20190121 12:59:55.673"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 12:59:55.716">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190121 12:59:55.718">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190121 12:59:57.913">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190121 12:59:57.919" status="PASS" starttime="20190121 12:59:55.690"></status>
</kw>
<status endtime="20190121 12:59:57.922" status="PASS" starttime="20190121 12:59:55.659"></status>
</kw>
<test id="s1-s3-t1" name="SKTB-31405 GpioAdc testroutine">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 12:59:58.062" status="PASS" starttime="20190121 12:59:57.985"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 12:59:58.147" status="PASS" starttime="20190121 12:59:58.065"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 12:59:58.275" status="PASS" starttime="20190121 12:59:58.154"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:00.301">Slept 2 seconds</msg>
<status endtime="20190121 13:00:00.303" status="PASS" starttime="20190121 12:59:58.282"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:00:00.353" status="PASS" starttime="20190121 13:00:00.306"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:01.361">Slept 1 second</msg>
<status endtime="20190121 13:00:01.363" status="PASS" starttime="20190121 13:00:00.357"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:00:01.413" status="PASS" starttime="20190121 13:00:01.366"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:03.421">Slept 2 seconds</msg>
<status endtime="20190121 13:00:03.423" status="PASS" starttime="20190121 13:00:01.417"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:00:03.471" status="PASS" starttime="20190121 13:00:03.426"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190121 13:00:03.526" status="PASS" starttime="20190121 13:00:03.475"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190121 13:00:03.582" status="PASS" starttime="20190121 13:00:03.532"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190121 13:00:03.633" status="PASS" starttime="20190121 13:00:03.586"></status>
</kw>
<status endtime="20190121 13:00:03.635" status="PASS" starttime="20190121 12:59:57.963"></status>
</kw>
<kw name="Step_alive">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:03.726">${res_dict} = {'data': '', 'result': '4153', 'status': True, 'request': '41'}</msg>
<status endtime="20190121 13:00:03.726" status="PASS" starttime="20190121 13:00:03.645"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:03.782">${value} = True</msg>
<status endtime="20190121 13:00:03.784" status="PASS" starttime="20190121 13:00:03.734"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190121 13:00:03.798" status="PASS" starttime="20190121 13:00:03.792"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:04.805">Slept 1 second</msg>
<status endtime="20190121 13:00:04.807" status="PASS" starttime="20190121 13:00:03.801"></status>
</kw>
<status endtime="20190121 13:00:04.810" status="PASS" starttime="20190121 13:00:03.639"></status>
</kw>
<kw name="Step_alive_retry">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:04.879">${res_dict} = {'data': '', 'result': '4153', 'status': True, 'request': '41'}</msg>
<status endtime="20190121 13:00:04.881" status="PASS" starttime="20190121 13:00:04.818"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:04.908">${value} = True</msg>
<status endtime="20190121 13:00:04.909" status="PASS" starttime="20190121 13:00:04.884"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:00:04.916" status="PASS" starttime="20190121 13:00:04.911"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:05.923">Slept 1 second</msg>
<status endtime="20190121 13:00:05.925" status="PASS" starttime="20190121 13:00:04.918"></status>
</kw>
<status endtime="20190121 13:00:05.928" status="PASS" starttime="20190121 13:00:04.812"></status>
</kw>
<kw name="Step_load">
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${ADC_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:05.949">Starting process:
find /home/debian/chorus_version/TestRoutineGpioAdc_OLU_*.bin</msg>
<msg level="INFO" timestamp="20190121 13:00:05.974">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:00:05.989">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:00:05.992">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:00:05.993" status="PASS" starttime="20190121 13:00:05.943"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:06.003">${stdout_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status endtime="20190121 13:00:06.003" status="PASS" starttime="20190121 13:00:05.997"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:06.012">1 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:00:06.014">${temp} = ['/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin']</msg>
<status endtime="20190121 13:00:06.015" status="PASS" starttime="20190121 13:00:06.007"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:06.023">${path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status endtime="20190121 13:00:06.024" status="PASS" starttime="20190121 13:00:06.018"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status endtime="20190121 13:00:06.032" status="PASS" starttime="20190121 13:00:06.026"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:06.039" html="yes">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status endtime="20190121 13:00:06.041" status="PASS" starttime="20190121 13:00:06.034"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:00:06.045">${matched_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status endtime="20190121 13:00:06.046" status="PASS" starttime="20190121 13:00:05.935"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:06.200">${res_dict} = {'result': '5453', 'flowctrl': '', 'data': '0468781f', 'status': True, 'response': 'TS', 'request': ''}</msg>
<status endtime="20190121 13:00:06.201" status="PASS" starttime="20190121 13:00:06.049"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:06.210">{'result': '5453', 'flowctrl': '', 'data': '0468781f', 'status': True, 'response': 'TS', 'request': ''}</msg>
<status endtime="20190121 13:00:06.213" status="PASS" starttime="20190121 13:00:06.206"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:08.220">Slept 2 seconds</msg>
<status endtime="20190121 13:00:08.223" status="PASS" starttime="20190121 13:00:06.216"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:08.251">${value} = 5453</msg>
<status endtime="20190121 13:00:08.251" status="PASS" starttime="20190121 13:00:08.226"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:00:08.260" status="PASS" starttime="20190121 13:00:08.254"></status>
</kw>
<status endtime="20190121 13:00:08.262" status="PASS" starttime="20190121 13:00:05.930"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:08.333">${res_dict} = {'data': '', 'result': '4953', 'status': True, 'request': '49'}</msg>
<status endtime="20190121 13:00:08.334" status="PASS" starttime="20190121 13:00:08.271"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:08.360">${value} = True</msg>
<status endtime="20190121 13:00:08.361" status="PASS" starttime="20190121 13:00:08.337"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:00:08.368" status="PASS" starttime="20190121 13:00:08.364"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:09.375">Slept 1 second</msg>
<status endtime="20190121 13:00:09.377" status="PASS" starttime="20190121 13:00:08.371"></status>
</kw>
<status endtime="20190121 13:00:09.380" status="PASS" starttime="20190121 13:00:08.265"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:09.454">${res_dict} = {'data': '0201', 'result': '475653', 'status': True, 'request': '4756'}</msg>
<status endtime="20190121 13:00:09.455" status="PASS" starttime="20190121 13:00:09.388"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:10.463">Slept 1 second</msg>
<status endtime="20190121 13:00:10.465" status="PASS" starttime="20190121 13:00:09.459"></status>
</kw>
<status endtime="20190121 13:00:10.468" status="PASS" starttime="20190121 13:00:09.382"></status>
</kw>
<kw name="Step_gpio_select">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${VCC3V3_SWITCH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:10.538">${res_dict} = {'data': '', 'result': '534653', 'status': True, 'request': '53460000006d'}</msg>
<status endtime="20190121 13:00:10.539" status="PASS" starttime="20190121 13:00:10.476"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:10.568">${value} = True</msg>
<status endtime="20190121 13:00:10.569" status="PASS" starttime="20190121 13:00:10.542"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:00:10.576" status="PASS" starttime="20190121 13:00:10.572"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${GpioSelect}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:10.639">${res_dict} = {'data': '', 'result': '520153', 'status': True, 'request': '5201'}</msg>
<status endtime="20190121 13:00:10.641" status="PASS" starttime="20190121 13:00:10.579"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:10.667">${value} = True</msg>
<status endtime="20190121 13:00:10.668" status="PASS" starttime="20190121 13:00:10.644"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:00:10.677" status="PASS" starttime="20190121 13:00:10.671"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:11.684">Slept 1 second</msg>
<status endtime="20190121 13:00:11.686" status="PASS" starttime="20190121 13:00:10.680"></status>
</kw>
<status endtime="20190121 13:00:11.689" status="PASS" starttime="20190121 13:00:10.470"></status>
</kw>
<kw name="Step_gpio_write">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${HIGH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:11.758">${res_dict} = {'data': '', 'result': '534653', 'status': True, 'request': '534600000001'}</msg>
<status endtime="20190121 13:00:11.758" status="PASS" starttime="20190121 13:00:11.697"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:11.785">${value} = True</msg>
<status endtime="20190121 13:00:11.786" status="PASS" starttime="20190121 13:00:11.761"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:00:11.793" status="PASS" starttime="20190121 13:00:11.789"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${GpioWrite}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:11.856">${res_dict} = {'data': '', 'result': '520453', 'status': True, 'request': '5204'}</msg>
<status endtime="20190121 13:00:11.858" status="PASS" starttime="20190121 13:00:11.796"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:11.884">${value} = True</msg>
<status endtime="20190121 13:00:11.885" status="PASS" starttime="20190121 13:00:11.860"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:00:11.892" status="PASS" starttime="20190121 13:00:11.888"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:12.899">Slept 1 second</msg>
<status endtime="20190121 13:00:12.901" status="PASS" starttime="20190121 13:00:11.895"></status>
</kw>
<status endtime="20190121 13:00:12.904" status="PASS" starttime="20190121 13:00:11.691"></status>
</kw>
<kw name="Step_adc_read_channel">
<kw name="check_analog_channel">
<arguments>
<arg>${CARBAT_V_SENSE}</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:12.995">${res_dict} = {'data': '', 'result': '1efd54', 'status': False, 'request': '53460000004d'}</msg>
<status endtime="20190121 13:00:12.996" status="PASS" starttime="20190121 13:00:12.918"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:13.024">${value} = False</msg>
<status endtime="20190121 13:00:13.025" status="PASS" starttime="20190121 13:00:12.999"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:00:13.033">'False' should be true.</msg>
<status endtime="20190121 13:00:13.035" status="FAIL" starttime="20190121 13:00:13.027"></status>
</kw>
<status endtime="20190121 13:00:13.037" status="FAIL" starttime="20190121 13:00:12.911"></status>
</kw>
<status endtime="20190121 13:00:13.040" status="FAIL" starttime="20190121 13:00:12.906"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:00:13.097" status="PASS" starttime="20190121 13:00:13.051"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:00:13.147" status="PASS" starttime="20190121 13:00:13.100"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:00:13.210" status="PASS" starttime="20190121 13:00:13.150"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:15.241">Slept 2 seconds</msg>
<status endtime="20190121 13:00:15.243" status="PASS" starttime="20190121 13:00:13.218"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:00:15.311" status="PASS" starttime="20190121 13:00:15.248"></status>
</kw>
<status endtime="20190121 13:00:15.314" status="PASS" starttime="20190121 13:00:13.044"></status>
</kw>
<doc>Implements Test Task SKTB-31405</doc>
<tags>
<tag>GpioAdc testroutine</tag>
</tags>
<status endtime="20190121 13:00:15.315" critical="yes" status="FAIL" starttime="20190121 12:59:57.935">'False' should be true.</status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg level="INFO" timestamp="20190121 13:00:16.842">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190121 13:00:16.955">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190121 13:00:16.957" status="PASS" starttime="20190121 13:00:15.358"></status>
</kw>
<status endtime="20190121 13:00:16.958" status="PASS" starttime="20190121 13:00:15.333"></status>
</kw>
<status endtime="20190121 13:00:16.961" status="PASS" starttime="20190121 13:00:15.327"></status>
</kw>
<doc>Chorus GpioAdc testing with testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190121 13:00:16.988" status="FAIL" starttime="20190121 12:59:55.243"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-33244.robot" id="s1-s4" name="SKTB-33244">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:17.630">Connecting to tnt-server localhost...</msg>
<status endtime="20190121 13:00:17.633" status="PASS" starttime="20190121 13:00:17.571"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:17.649">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190121 13:00:17.651">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190121 13:00:19.813">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190121 13:00:19.815" status="PASS" starttime="20190121 13:00:17.636"></status>
</kw>
<status endtime="20190121 13:00:19.817" status="PASS" starttime="20190121 13:00:17.562"></status>
</kw>
<test id="s1-s4-t1" name="SKTB-33244 Test ADC channels">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:00:19.994" status="PASS" starttime="20190121 13:00:19.885"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:00:20.082" status="PASS" starttime="20190121 13:00:19.997"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:00:20.227" status="PASS" starttime="20190121 13:00:20.085"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:22.249">Slept 2 seconds</msg>
<status endtime="20190121 13:00:22.251" status="PASS" starttime="20190121 13:00:20.230"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:00:22.301" status="PASS" starttime="20190121 13:00:22.254"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:23.308">Slept 1 second</msg>
<status endtime="20190121 13:00:23.310" status="PASS" starttime="20190121 13:00:22.304"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:00:23.360" status="PASS" starttime="20190121 13:00:23.313"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:25.368">Slept 2 seconds</msg>
<status endtime="20190121 13:00:25.370" status="PASS" starttime="20190121 13:00:23.363"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:00:25.417" status="PASS" starttime="20190121 13:00:25.373"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190121 13:00:25.467" status="PASS" starttime="20190121 13:00:25.421"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190121 13:00:25.516" status="PASS" starttime="20190121 13:00:25.470"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190121 13:00:25.566" status="PASS" starttime="20190121 13:00:25.519"></status>
</kw>
<status endtime="20190121 13:00:25.568" status="PASS" starttime="20190121 13:00:19.863"></status>
</kw>
<kw name="Step_alive">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:25.646">${res_dict} = {'data': '', 'result': '4153', 'status': True, 'request': '41'}</msg>
<status endtime="20190121 13:00:25.647" status="PASS" starttime="20190121 13:00:25.578"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:25.722">${value} = True</msg>
<status endtime="20190121 13:00:25.723" status="PASS" starttime="20190121 13:00:25.657"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190121 13:00:25.734" status="PASS" starttime="20190121 13:00:25.728"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:26.741">Slept 1 second</msg>
<status endtime="20190121 13:00:26.743" status="PASS" starttime="20190121 13:00:25.736"></status>
</kw>
<status endtime="20190121 13:00:26.745" status="PASS" starttime="20190121 13:00:25.571"></status>
</kw>
<kw name="Step_alive_retry">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:26.814">${res_dict} = {'data': '', 'result': '4153', 'status': True, 'request': '41'}</msg>
<status endtime="20190121 13:00:26.815" status="PASS" starttime="20190121 13:00:26.754"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:26.848">${value} = True</msg>
<status endtime="20190121 13:00:26.849" status="PASS" starttime="20190121 13:00:26.818"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:00:26.857" status="PASS" starttime="20190121 13:00:26.852"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:27.864">Slept 1 second</msg>
<status endtime="20190121 13:00:27.866" status="PASS" starttime="20190121 13:00:26.859"></status>
</kw>
<status endtime="20190121 13:00:27.868" status="PASS" starttime="20190121 13:00:26.748"></status>
</kw>
<kw name="Step_load">
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${ADC_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:27.889">Starting process:
find /home/debian/chorus_version/TestRoutineGpioAdc_OLU_*.bin</msg>
<msg level="INFO" timestamp="20190121 13:00:27.914">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:00:27.929">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:00:27.932">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:00:27.933" status="PASS" starttime="20190121 13:00:27.883"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:27.942">${stdout_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status endtime="20190121 13:00:27.943" status="PASS" starttime="20190121 13:00:27.937"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:27.950">1 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:00:28.269">${temp} = ['/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin']</msg>
<status endtime="20190121 13:00:28.270" status="PASS" starttime="20190121 13:00:27.946"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:28.297">${path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status endtime="20190121 13:00:28.298" status="PASS" starttime="20190121 13:00:28.274"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status endtime="20190121 13:00:28.316" status="PASS" starttime="20190121 13:00:28.303"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:28.328" html="yes">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status endtime="20190121 13:00:28.330" status="PASS" starttime="20190121 13:00:28.319"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:00:28.334">${matched_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status endtime="20190121 13:00:28.334" status="PASS" starttime="20190121 13:00:27.875"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:28.479">${res_dict} = {'result': '5453', 'flowctrl': '', 'data': '0468781f', 'status': True, 'response': 'TS', 'request': ''}</msg>
<status endtime="20190121 13:00:28.480" status="PASS" starttime="20190121 13:00:28.337"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:30.493">Slept 2 seconds</msg>
<status endtime="20190121 13:00:30.495" status="PASS" starttime="20190121 13:00:28.488"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:30.528">${value} = 5453</msg>
<status endtime="20190121 13:00:30.529" status="PASS" starttime="20190121 13:00:30.498"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:00:30.538" status="PASS" starttime="20190121 13:00:30.532"></status>
</kw>
<status endtime="20190121 13:00:30.540" status="PASS" starttime="20190121 13:00:27.870"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:30.609">${res_dict} = {'data': '', 'result': '4953', 'status': True, 'request': '49'}</msg>
<status endtime="20190121 13:00:30.610" status="PASS" starttime="20190121 13:00:30.548"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:30.642">${value} = True</msg>
<status endtime="20190121 13:00:30.642" status="PASS" starttime="20190121 13:00:30.612"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:00:30.650" status="PASS" starttime="20190121 13:00:30.645"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:31.657">Slept 1 second</msg>
<status endtime="20190121 13:00:31.659" status="PASS" starttime="20190121 13:00:30.653"></status>
</kw>
<status endtime="20190121 13:00:31.661" status="PASS" starttime="20190121 13:00:30.542"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:31.734">${res_dict} = {'data': '0201', 'result': '475653', 'status': True, 'request': '4756'}</msg>
<status endtime="20190121 13:00:31.735" status="PASS" starttime="20190121 13:00:31.669"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:32.743">Slept 1 second</msg>
<status endtime="20190121 13:00:32.745" status="PASS" starttime="20190121 13:00:31.738"></status>
</kw>
<status endtime="20190121 13:00:32.747" status="PASS" starttime="20190121 13:00:31.663"></status>
</kw>
<kw name="Step_gpio_select">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${VCC3V3_SWITCH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:32.816">${res_dict} = {'data': '', 'result': '534653', 'status': True, 'request': '53460000006d'}</msg>
<status endtime="20190121 13:00:32.817" status="PASS" starttime="20190121 13:00:32.755"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:32.850">${value} = True</msg>
<status endtime="20190121 13:00:32.850" status="PASS" starttime="20190121 13:00:32.820"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:00:32.858" status="PASS" starttime="20190121 13:00:32.853"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${GpioSelect}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:32.921">${res_dict} = {'data': '', 'result': '520153', 'status': True, 'request': '5201'}</msg>
<status endtime="20190121 13:00:32.922" status="PASS" starttime="20190121 13:00:32.861"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:32.957">${value} = True</msg>
<status endtime="20190121 13:00:32.958" status="PASS" starttime="20190121 13:00:32.926"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:00:32.965" status="PASS" starttime="20190121 13:00:32.961"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:33.972">Slept 1 second</msg>
<status endtime="20190121 13:00:33.974" status="PASS" starttime="20190121 13:00:32.968"></status>
</kw>
<status endtime="20190121 13:00:33.977" status="PASS" starttime="20190121 13:00:32.749"></status>
</kw>
<kw name="Step_gpio_write">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${HIGH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:34.048">${res_dict} = {'data': '', 'result': '534653', 'status': True, 'request': '534600000001'}</msg>
<status endtime="20190121 13:00:34.049" status="PASS" starttime="20190121 13:00:33.986"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:34.082">${value} = True</msg>
<status endtime="20190121 13:00:34.082" status="PASS" starttime="20190121 13:00:34.052"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:00:34.089" status="PASS" starttime="20190121 13:00:34.085"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${GpioWrite}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:34.153">${res_dict} = {'data': '', 'result': '520453', 'status': True, 'request': '5204'}</msg>
<status endtime="20190121 13:00:34.154" status="PASS" starttime="20190121 13:00:34.092"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:34.186">${value} = True</msg>
<status endtime="20190121 13:00:34.187" status="PASS" starttime="20190121 13:00:34.157"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:00:34.194" status="PASS" starttime="20190121 13:00:34.190"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:35.201">Slept 1 second</msg>
<status endtime="20190121 13:00:35.203" status="PASS" starttime="20190121 13:00:34.197"></status>
</kw>
<status endtime="20190121 13:00:35.206" status="PASS" starttime="20190121 13:00:33.979"></status>
</kw>
<kw name="Step_adc_read_channel">
<kw name="check_analog_channel">
<arguments>
<arg>${CARBAT_V_SENSE}</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:35.298">${res_dict} = {'data': '', 'result': '1efd54', 'status': False, 'request': '53460000004d'}</msg>
<status endtime="20190121 13:00:35.299" status="PASS" starttime="20190121 13:00:35.220"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:35.332">${value} = False</msg>
<status endtime="20190121 13:00:35.333" status="PASS" starttime="20190121 13:00:35.302"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:00:35.341">'False' should be true.</msg>
<status endtime="20190121 13:00:35.342" status="FAIL" starttime="20190121 13:00:35.335"></status>
</kw>
<status endtime="20190121 13:00:35.345" status="FAIL" starttime="20190121 13:00:35.213"></status>
</kw>
<status endtime="20190121 13:00:35.348" status="FAIL" starttime="20190121 13:00:35.208"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:00:35.405" status="PASS" starttime="20190121 13:00:35.358"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:00:35.455" status="PASS" starttime="20190121 13:00:35.408"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:00:35.525" status="PASS" starttime="20190121 13:00:35.459"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:37.541">Slept 2 seconds</msg>
<status endtime="20190121 13:00:37.543" status="PASS" starttime="20190121 13:00:35.532"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:00:37.591" status="PASS" starttime="20190121 13:00:37.546"></status>
</kw>
<status endtime="20190121 13:00:37.594" status="PASS" starttime="20190121 13:00:35.352"></status>
</kw>
<doc>Implements Test Task SKTB-33244</doc>
<tags>
<tag>GpioAdc testroutine</tag>
</tags>
<status endtime="20190121 13:00:37.595" critical="yes" status="FAIL" starttime="20190121 13:00:19.819">'False' should be true.</status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg level="INFO" timestamp="20190121 13:00:39.094">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190121 13:00:39.115">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190121 13:00:39.131" status="PASS" starttime="20190121 13:00:37.643"></status>
</kw>
<status endtime="20190121 13:00:39.133" status="PASS" starttime="20190121 13:00:37.611"></status>
</kw>
<status endtime="20190121 13:00:39.135" status="PASS" starttime="20190121 13:00:37.606"></status>
</kw>
<doc>Chorus GpioAdc's test with testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190121 13:00:39.136" status="FAIL" starttime="20190121 13:00:17.089"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-13351.robot" id="s1-s5" name="SKTB-13351">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:39.736">Connecting to tnt-server localhost...</msg>
<status endtime="20190121 13:00:39.746" status="PASS" starttime="20190121 13:00:39.731"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:39.755">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190121 13:00:39.767">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190121 13:00:41.993">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190121 13:00:42.009" status="PASS" starttime="20190121 13:00:39.749"></status>
</kw>
<status endtime="20190121 13:00:42.011" status="PASS" starttime="20190121 13:00:39.712"></status>
</kw>
<test id="s1-s5-t1" name="SKTB-13351 FBUS test">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:00:42.175" status="PASS" starttime="20190121 13:00:42.067"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:00:42.280" status="PASS" starttime="20190121 13:00:42.199"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:00:42.437" status="PASS" starttime="20190121 13:00:42.283"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:44.451">Slept 2 seconds</msg>
<status endtime="20190121 13:00:44.454" status="PASS" starttime="20190121 13:00:42.440"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:00:44.505" status="PASS" starttime="20190121 13:00:44.456"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:00:44.555" status="PASS" starttime="20190121 13:00:44.509"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:00:44.603" status="PASS" starttime="20190121 13:00:44.558"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190121 13:00:44.655" status="PASS" starttime="20190121 13:00:44.608"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190121 13:00:44.708" status="PASS" starttime="20190121 13:00:44.659"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Set State">
<arguments>
<arg>timeout</arg>
<arg>${10000}</arg>
</arguments>
<status endtime="20190121 13:00:44.798" status="PASS" starttime="20190121 13:00:44.713"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:46.817">Slept 2 seconds</msg>
<status endtime="20190121 13:00:46.819" status="PASS" starttime="20190121 13:00:44.806"></status>
</kw>
<status endtime="20190121 13:00:46.822" status="PASS" starttime="20190121 13:00:42.061"></status>
</kw>
<kw name="Step_1">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${PN_POWER_APP}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:47.031">${info} = 1E 14 54 8D 00 08 00 0C 01 01 00 00 01 43 4A DF</msg>
<status endtime="20190121 13:00:47.032" status="PASS" starttime="20190121 13:00:46.830"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:47.040">1E 14 54 8D 00 08 00 0C 01 01 00 00 01 43 4A DF</msg>
<status endtime="20190121 13:00:47.042" status="PASS" starttime="20190121 13:00:47.035"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${PN_POWER_APP_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:00:47.051" status="PASS" starttime="20190121 13:00:47.045"></status>
</kw>
<status endtime="20190121 13:00:47.053" status="PASS" starttime="20190121 13:00:46.824"></status>
</kw>
<kw name="Step_2">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${PN_DIAG_APP}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:00:47.313">${info} = 1E 14 54 8F 00 0A 00 0A 01 01 00 00 00 00 01 44 4A DE</msg>
<status endtime="20190121 13:00:47.314" status="PASS" starttime="20190121 13:00:47.061"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:47.327">1E 14 54 8F 00 0A 00 0A 01 01 00 00 00 00 01 44 4A DE</msg>
<status endtime="20190121 13:00:47.330" status="PASS" starttime="20190121 13:00:47.323"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${PN_DIAG_APP_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:00:47.339" status="PASS" starttime="20190121 13:00:47.333"></status>
</kw>
<status endtime="20190121 13:00:47.341" status="PASS" starttime="20190121 13:00:47.055"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:00:47.429" status="PASS" starttime="20190121 13:00:47.351"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:00:47.485" status="PASS" starttime="20190121 13:00:47.437"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:00:47.543" status="PASS" starttime="20190121 13:00:47.488"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:49.572">Slept 2 seconds</msg>
<status endtime="20190121 13:00:49.574" status="PASS" starttime="20190121 13:00:47.551"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190121 13:00:49.625" status="PASS" starttime="20190121 13:00:49.577"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:00:49.673" status="PASS" starttime="20190121 13:00:49.628"></status>
</kw>
<status endtime="20190121 13:00:49.675" status="PASS" starttime="20190121 13:00:47.344"></status>
</kw>
<doc>Implements Test Task SKTB-13351</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status endtime="20190121 13:00:49.677" critical="yes" status="PASS" starttime="20190121 13:00:42.038"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg level="INFO" timestamp="20190121 13:00:51.142">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190121 13:00:51.186">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190121 13:00:51.187" status="PASS" starttime="20190121 13:00:49.716"></status>
</kw>
<status endtime="20190121 13:00:51.189" status="PASS" starttime="20190121 13:00:49.693"></status>
</kw>
<status endtime="20190121 13:00:51.191" status="PASS" starttime="20190121 13:00:49.687"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190121 13:00:51.192" status="PASS" starttime="20190121 13:00:39.287"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-34994.robot" id="s1-s6" name="SKTB-34994">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:51.838">Connecting to tnt-server localhost...</msg>
<status endtime="20190121 13:00:51.877" status="PASS" starttime="20190121 13:00:51.818"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:51.893">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190121 13:00:51.895">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190121 13:00:54.046">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190121 13:00:54.048" status="PASS" starttime="20190121 13:00:51.880"></status>
</kw>
<status endtime="20190121 13:00:54.050" status="PASS" starttime="20190121 13:00:51.813"></status>
</kw>
<test id="s1-s6-t1" name="SKTB-34994 CAN 3 testing">
<kw type="setup" name="Test_precondition">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_precondition"</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:54.162">"Test_precondition"</msg>
<status endtime="20190121 13:00:54.174" status="PASS" starttime="20190121 13:00:54.148"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:00:54.286" status="PASS" starttime="20190121 13:00:54.178"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:00:54.397" status="PASS" starttime="20190121 13:00:54.289"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:56.419">Slept 2 seconds</msg>
<status endtime="20190121 13:00:56.421" status="PASS" starttime="20190121 13:00:54.400"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:00:56.504" status="PASS" starttime="20190121 13:00:56.423"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:00:57.523">Slept 1 second</msg>
<status endtime="20190121 13:00:57.525" status="PASS" starttime="20190121 13:00:56.507"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:00:57.575" status="PASS" starttime="20190121 13:00:57.528"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:00.582">Slept 3 seconds</msg>
<status endtime="20190121 13:01:00.585" status="PASS" starttime="20190121 13:00:57.578"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>ping ${HOST_IP}</arg>
<arg>shell=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:00.593">Starting process:
ping 192.168.1.101</msg>
<status endtime="20190121 13:01:00.620" status="PASS" starttime="20190121 13:01:00.587"></status>
</kw>
<kw name="WAIT_UNTIL_DEVICE_IS_READY">
<doc>Waiting for device to be ready, up to 90 seconds</doc>
<assign>
<var>${status}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Waiting for device to be ready, up to 90 seconds\n</arg>
<arg>console=true</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:00.647">Waiting for device to be ready, up to 90 seconds
</msg>
<status endtime="20190121 13:01:00.650" status="PASS" starttime="20190121 13:01:00.640"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Return Status">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Wait until keyword succeeds</arg>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:00.680">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:00.707">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:00.727">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:00.730">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:00.731" status="PASS" starttime="20190121 13:01:00.673"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:00.744">${resp} = </msg>
<status endtime="20190121 13:01:00.745" status="PASS" starttime="20190121 13:01:00.735"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:00.756">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:00.757" status="FAIL" starttime="20190121 13:01:00.748"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:00.760" status="FAIL" starttime="20190121 13:01:00.665"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:00.898">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:00.924">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:00.944">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:00.947">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:00.948" status="PASS" starttime="20190121 13:01:00.891"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:00.961">${resp} = </msg>
<status endtime="20190121 13:01:00.962" status="PASS" starttime="20190121 13:01:00.952"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:00.973">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:00.978" status="FAIL" starttime="20190121 13:01:00.965"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:00.981" status="FAIL" starttime="20190121 13:01:00.883"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:01.119">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:01.146">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:01.166">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:01.169">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:01.171" status="PASS" starttime="20190121 13:01:01.113"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:01.184">${resp} = </msg>
<status endtime="20190121 13:01:01.185" status="PASS" starttime="20190121 13:01:01.175"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:01.196">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:01.197" status="FAIL" starttime="20190121 13:01:01.188"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:01.200" status="FAIL" starttime="20190121 13:01:01.104"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:01.338">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:01.364">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:01.384">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:01.387">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:01.388" status="PASS" starttime="20190121 13:01:01.331"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:01.401">${resp} = </msg>
<status endtime="20190121 13:01:01.402" status="PASS" starttime="20190121 13:01:01.392"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:01.413">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:01.414" status="FAIL" starttime="20190121 13:01:01.405"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:01.417" status="FAIL" starttime="20190121 13:01:01.323"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:01.558">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:01.584">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:01.605">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:01.608">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:01.609" status="PASS" starttime="20190121 13:01:01.550"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:01.622">${resp} = </msg>
<status endtime="20190121 13:01:01.623" status="PASS" starttime="20190121 13:01:01.613"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:01.635">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:01.637" status="FAIL" starttime="20190121 13:01:01.627"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:01.641" status="FAIL" starttime="20190121 13:01:01.540"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:01.779">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:01.805">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:01.825">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:01.829">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:01.830" status="PASS" starttime="20190121 13:01:01.772"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:01.846">${resp} = </msg>
<status endtime="20190121 13:01:01.847" status="PASS" starttime="20190121 13:01:01.833"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:01.857">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:01.859" status="FAIL" starttime="20190121 13:01:01.849"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:01.871" status="FAIL" starttime="20190121 13:01:01.764"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:02.010">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:02.037">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:02.057">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:02.060">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:02.061" status="PASS" starttime="20190121 13:01:02.002"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:02.076">${resp} = </msg>
<status endtime="20190121 13:01:02.076" status="PASS" starttime="20190121 13:01:02.065"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:02.089">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:02.090" status="FAIL" starttime="20190121 13:01:02.081"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:02.093" status="FAIL" starttime="20190121 13:01:01.995"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:02.231">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:02.258">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:02.282">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:02.286">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:02.287" status="PASS" starttime="20190121 13:01:02.225"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:02.309">${resp} = </msg>
<status endtime="20190121 13:01:02.310" status="PASS" starttime="20190121 13:01:02.290"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:02.321">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:02.323" status="FAIL" starttime="20190121 13:01:02.313"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:02.326" status="FAIL" starttime="20190121 13:01:02.217"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:02.464">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:02.490">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:02.510">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:02.513">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:02.514" status="PASS" starttime="20190121 13:01:02.457"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:02.527">${resp} = </msg>
<status endtime="20190121 13:01:02.528" status="PASS" starttime="20190121 13:01:02.518"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:02.539">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:02.540" status="FAIL" starttime="20190121 13:01:02.531"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:02.543" status="FAIL" starttime="20190121 13:01:02.449"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:02.682">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:02.708">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:02.729">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:02.732">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:02.733" status="PASS" starttime="20190121 13:01:02.675"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:02.749">${resp} = </msg>
<status endtime="20190121 13:01:02.750" status="PASS" starttime="20190121 13:01:02.736"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:02.761">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:02.763" status="FAIL" starttime="20190121 13:01:02.753"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:02.766" status="FAIL" starttime="20190121 13:01:02.667"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:02.903">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:02.930">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:02.951">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:02.954">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:02.955" status="PASS" starttime="20190121 13:01:02.897"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:02.969">${resp} = </msg>
<status endtime="20190121 13:01:02.969" status="PASS" starttime="20190121 13:01:02.959"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:02.980">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:02.981" status="FAIL" starttime="20190121 13:01:02.972"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:02.984" status="FAIL" starttime="20190121 13:01:02.889"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:03.123">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:03.149">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:03.169">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:03.172">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:03.173" status="PASS" starttime="20190121 13:01:03.116"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:03.186">${resp} = </msg>
<status endtime="20190121 13:01:03.187" status="PASS" starttime="20190121 13:01:03.177"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:03.198">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:03.199" status="FAIL" starttime="20190121 13:01:03.190"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:03.202" status="FAIL" starttime="20190121 13:01:03.108"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:03.341">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:03.367">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:03.387">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:03.390">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:03.391" status="PASS" starttime="20190121 13:01:03.334"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:03.405">${resp} = </msg>
<status endtime="20190121 13:01:03.406" status="PASS" starttime="20190121 13:01:03.395"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:03.417">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:03.418" status="FAIL" starttime="20190121 13:01:03.409"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:03.421" status="FAIL" starttime="20190121 13:01:03.325"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:03.563">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:03.588">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:03.610">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:03.614">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:03.614" status="PASS" starttime="20190121 13:01:03.556"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:03.633">${resp} = </msg>
<status endtime="20190121 13:01:03.633" status="PASS" starttime="20190121 13:01:03.618"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:03.644">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:03.645" status="FAIL" starttime="20190121 13:01:03.636"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:03.648" status="FAIL" starttime="20190121 13:01:03.545"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:03.786">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:03.812">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:03.832">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:03.835">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:03.836" status="PASS" starttime="20190121 13:01:03.779"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:03.849">${resp} = </msg>
<status endtime="20190121 13:01:03.850" status="PASS" starttime="20190121 13:01:03.840"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:03.861">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:03.862" status="FAIL" starttime="20190121 13:01:03.853"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:03.866" status="FAIL" starttime="20190121 13:01:03.771"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:04.004">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:04.030">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:04.052">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:04.055">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:04.056" status="PASS" starttime="20190121 13:01:03.997"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:04.069">${resp} = </msg>
<status endtime="20190121 13:01:04.070" status="PASS" starttime="20190121 13:01:04.060"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:04.080">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:04.082" status="FAIL" starttime="20190121 13:01:04.073"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:04.085" status="FAIL" starttime="20190121 13:01:03.989"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:04.223">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:04.250">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:04.271">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:04.274">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:04.275" status="PASS" starttime="20190121 13:01:04.216"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:04.289">${resp} = </msg>
<status endtime="20190121 13:01:04.290" status="PASS" starttime="20190121 13:01:04.280"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:04.301">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:04.302" status="FAIL" starttime="20190121 13:01:04.293"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:04.306" status="FAIL" starttime="20190121 13:01:04.208"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:04.446">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:04.473">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:04.493">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:04.497">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:04.498" status="PASS" starttime="20190121 13:01:04.438"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:04.514">${resp} = </msg>
<status endtime="20190121 13:01:04.515" status="PASS" starttime="20190121 13:01:04.502"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:04.527">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:04.529" status="FAIL" starttime="20190121 13:01:04.519"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:04.532" status="FAIL" starttime="20190121 13:01:04.429"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:04.669">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:04.695">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:04.716">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:04.719">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:04.720" status="PASS" starttime="20190121 13:01:04.662"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:04.734">${resp} = </msg>
<status endtime="20190121 13:01:04.735" status="PASS" starttime="20190121 13:01:04.724"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:04.746">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:04.747" status="FAIL" starttime="20190121 13:01:04.738"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:04.750" status="FAIL" starttime="20190121 13:01:04.655"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:04.889">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:04.915">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:04.935">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:04.938">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:04.939" status="PASS" starttime="20190121 13:01:04.882"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:04.952">${resp} = </msg>
<status endtime="20190121 13:01:04.953" status="PASS" starttime="20190121 13:01:04.943"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:04.963">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:04.965" status="FAIL" starttime="20190121 13:01:04.956"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:04.968" status="FAIL" starttime="20190121 13:01:04.873"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:05.107">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:05.134">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:05.154">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:05.157">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:05.158" status="PASS" starttime="20190121 13:01:05.100"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:05.171">${resp} = </msg>
<status endtime="20190121 13:01:05.172" status="PASS" starttime="20190121 13:01:05.162"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:05.183">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:05.184" status="FAIL" starttime="20190121 13:01:05.175"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:05.187" status="FAIL" starttime="20190121 13:01:05.091"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:05.325">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:05.352">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:05.372">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:05.375">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:05.376" status="PASS" starttime="20190121 13:01:05.318"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:05.393">${resp} = </msg>
<status endtime="20190121 13:01:05.394" status="PASS" starttime="20190121 13:01:05.380"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:05.404">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:05.406" status="FAIL" starttime="20190121 13:01:05.397"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:05.409" status="FAIL" starttime="20190121 13:01:05.311"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:05.546">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:05.572">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:05.592">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:05.595">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:05.596" status="PASS" starttime="20190121 13:01:05.539"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:05.609">${resp} = </msg>
<status endtime="20190121 13:01:05.610" status="PASS" starttime="20190121 13:01:05.600"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:05.622">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:05.623" status="FAIL" starttime="20190121 13:01:05.613"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:05.627" status="FAIL" starttime="20190121 13:01:05.532"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:05.818">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:05.883">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:05.915">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:05.918">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:05.919" status="PASS" starttime="20190121 13:01:05.787"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:05.967">${resp} = </msg>
<status endtime="20190121 13:01:05.968" status="PASS" starttime="20190121 13:01:05.937"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:05.991">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:05.993" status="FAIL" starttime="20190121 13:01:05.971"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:05.996" status="FAIL" starttime="20190121 13:01:05.754"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:06.135">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:06.161">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:06.181">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:06.185">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:06.186" status="PASS" starttime="20190121 13:01:06.128"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:06.198">${resp} = </msg>
<status endtime="20190121 13:01:06.199" status="PASS" starttime="20190121 13:01:06.189"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:06.210">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:06.211" status="FAIL" starttime="20190121 13:01:06.202"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:06.214" status="FAIL" starttime="20190121 13:01:06.119"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:06.352">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:06.379">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:06.399">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:06.402">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:06.403" status="PASS" starttime="20190121 13:01:06.346"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:06.420">${resp} = </msg>
<status endtime="20190121 13:01:06.421" status="PASS" starttime="20190121 13:01:06.407"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:06.432">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:06.433" status="FAIL" starttime="20190121 13:01:06.423"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:06.436" status="FAIL" starttime="20190121 13:01:06.338"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:06.574">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:06.601">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:06.621">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:06.624">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:06.625" status="PASS" starttime="20190121 13:01:06.567"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:06.638">${resp} = </msg>
<status endtime="20190121 13:01:06.639" status="PASS" starttime="20190121 13:01:06.629"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:06.650">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:06.651" status="FAIL" starttime="20190121 13:01:06.642"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:06.654" status="FAIL" starttime="20190121 13:01:06.559"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:06.835">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:06.902">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:06.954">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:06.958">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:06.959" status="PASS" starttime="20190121 13:01:06.810"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:06.994">${resp} = </msg>
<status endtime="20190121 13:01:06.994" status="PASS" starttime="20190121 13:01:06.975"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:07.018">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:07.042" status="FAIL" starttime="20190121 13:01:06.998"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:07.047" status="FAIL" starttime="20190121 13:01:06.784"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:07.230">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:07.282">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:07.324">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:07.327">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:07.328" status="PASS" starttime="20190121 13:01:07.195"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:07.353">${resp} = </msg>
<status endtime="20190121 13:01:07.366" status="PASS" starttime="20190121 13:01:07.344"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:07.392">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:07.394" status="FAIL" starttime="20190121 13:01:07.369"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:07.397" status="FAIL" starttime="20190121 13:01:07.172"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:07.536">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:07.562">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:07.629">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:07.635">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:07.663" status="PASS" starttime="20190121 13:01:07.529"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:07.702">${resp} = </msg>
<status endtime="20190121 13:01:07.703" status="PASS" starttime="20190121 13:01:07.671"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:07.809">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:07.810" status="FAIL" starttime="20190121 13:01:07.742"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:07.818" status="FAIL" starttime="20190121 13:01:07.521"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:08.047">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:08.105">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:08.149">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:08.153">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:08.154" status="PASS" starttime="20190121 13:01:08.009"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:08.215">${resp} = </msg>
<status endtime="20190121 13:01:08.216" status="PASS" starttime="20190121 13:01:08.158"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:08.267">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:08.269" status="FAIL" starttime="20190121 13:01:08.219"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:08.307" status="FAIL" starttime="20190121 13:01:07.946"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:08.524">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:08.611">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:08.670">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:08.674">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:08.675" status="PASS" starttime="20190121 13:01:08.475"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:08.747">${resp} = </msg>
<status endtime="20190121 13:01:08.748" status="PASS" starttime="20190121 13:01:08.699"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:08.767">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:08.768" status="FAIL" starttime="20190121 13:01:08.751"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:08.789" status="FAIL" starttime="20190121 13:01:08.439"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:08.962">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:09.049">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:09.075">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:09.079">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:09.080" status="PASS" starttime="20190121 13:01:08.945"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:09.115">${resp} = </msg>
<status endtime="20190121 13:01:09.116" status="PASS" starttime="20190121 13:01:09.092"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:09.139">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:09.156" status="FAIL" starttime="20190121 13:01:09.130"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:09.159" status="FAIL" starttime="20190121 13:01:08.915"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:09.336">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:09.406">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:09.444">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:09.447">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:09.448" status="PASS" starttime="20190121 13:01:09.309"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:09.479">${resp} = </msg>
<status endtime="20190121 13:01:09.480" status="PASS" starttime="20190121 13:01:09.463"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:09.508">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:09.509" status="FAIL" starttime="20190121 13:01:09.483"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:09.520" status="FAIL" starttime="20190121 13:01:09.293"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:09.685">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:09.762">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:09.788">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:09.791">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:09.792" status="PASS" starttime="20190121 13:01:09.662"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:09.821">${resp} = </msg>
<status endtime="20190121 13:01:09.830" status="PASS" starttime="20190121 13:01:09.796"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:09.848">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:09.850" status="FAIL" starttime="20190121 13:01:09.833"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:09.853" status="FAIL" starttime="20190121 13:01:09.648"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:10.034">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:10.084">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:10.123">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:10.126">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:10.127" status="PASS" starttime="20190121 13:01:10.019"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:10.155">${resp} = </msg>
<status endtime="20190121 13:01:10.156" status="PASS" starttime="20190121 13:01:10.139"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:10.185">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:10.186" status="FAIL" starttime="20190121 13:01:10.159"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:10.191" status="FAIL" starttime="20190121 13:01:09.994"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:10.329">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:10.355">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:10.375">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:10.378">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:10.379" status="PASS" starttime="20190121 13:01:10.322"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:10.392">${resp} = </msg>
<status endtime="20190121 13:01:10.393" status="PASS" starttime="20190121 13:01:10.383"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:10.404">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:10.405" status="FAIL" starttime="20190121 13:01:10.396"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:10.408" status="FAIL" starttime="20190121 13:01:10.314"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:10.550">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:10.576">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:10.597">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:10.601">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:10.602" status="PASS" starttime="20190121 13:01:10.539"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:10.614">${resp} = </msg>
<status endtime="20190121 13:01:10.615" status="PASS" starttime="20190121 13:01:10.606"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:10.626">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:10.628" status="FAIL" starttime="20190121 13:01:10.618"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:10.631" status="FAIL" starttime="20190121 13:01:10.531"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:10.770">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:10.796">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:10.816">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:10.819">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:10.821" status="PASS" starttime="20190121 13:01:10.763"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:10.833">${resp} = </msg>
<status endtime="20190121 13:01:10.834" status="PASS" starttime="20190121 13:01:10.824"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:10.848">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:10.849" status="FAIL" starttime="20190121 13:01:10.837"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:10.852" status="FAIL" starttime="20190121 13:01:10.754"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:10.990">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:11.015">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:11.036">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:11.039">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:11.040" status="PASS" starttime="20190121 13:01:10.983"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:11.053">${resp} = </msg>
<status endtime="20190121 13:01:11.053" status="PASS" starttime="20190121 13:01:11.044"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:11.064">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:11.066" status="FAIL" starttime="20190121 13:01:11.056"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:11.069" status="FAIL" starttime="20190121 13:01:10.975"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:11.207">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:11.233">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:11.254">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:11.258">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:11.259" status="PASS" starttime="20190121 13:01:11.201"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:11.271">${resp} = </msg>
<status endtime="20190121 13:01:11.272" status="PASS" starttime="20190121 13:01:11.262"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:11.283">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:11.284" status="FAIL" starttime="20190121 13:01:11.275"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:11.288" status="FAIL" starttime="20190121 13:01:11.192"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:11.429">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:11.455">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:11.475">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:11.478">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:11.479" status="PASS" starttime="20190121 13:01:11.419"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:11.492">${resp} = </msg>
<status endtime="20190121 13:01:11.493" status="PASS" starttime="20190121 13:01:11.483"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:11.504">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:11.505" status="FAIL" starttime="20190121 13:01:11.496"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:11.508" status="FAIL" starttime="20190121 13:01:11.411"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:11.646">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:11.672">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:11.692">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:11.695">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:11.696" status="PASS" starttime="20190121 13:01:11.639"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:11.709">${resp} = </msg>
<status endtime="20190121 13:01:11.710" status="PASS" starttime="20190121 13:01:11.700"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:11.721">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:11.722" status="FAIL" starttime="20190121 13:01:11.713"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:11.725" status="FAIL" starttime="20190121 13:01:11.631"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:11.864">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:11.889">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:11.910">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:11.913">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:11.914" status="PASS" starttime="20190121 13:01:11.856"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:11.927">${resp} = </msg>
<status endtime="20190121 13:01:11.927" status="PASS" starttime="20190121 13:01:11.918"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:11.938">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:11.940" status="FAIL" starttime="20190121 13:01:11.930"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:11.943" status="FAIL" starttime="20190121 13:01:11.848"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:12.081">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:12.107">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:12.127">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:12.130">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:12.131" status="PASS" starttime="20190121 13:01:12.074"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:12.144">${resp} = </msg>
<status endtime="20190121 13:01:12.144" status="PASS" starttime="20190121 13:01:12.135"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:12.155">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:12.157" status="FAIL" starttime="20190121 13:01:12.148"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:12.160" status="FAIL" starttime="20190121 13:01:12.066"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:12.310">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:12.337">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:12.357">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:12.361">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:12.362" status="PASS" starttime="20190121 13:01:12.291"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:12.374">${resp} = </msg>
<status endtime="20190121 13:01:12.375" status="PASS" starttime="20190121 13:01:12.365"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:12.386">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:12.387" status="FAIL" starttime="20190121 13:01:12.378"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:12.390" status="FAIL" starttime="20190121 13:01:12.283"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:12.528">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:12.554">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:12.574">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:12.577">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:12.578" status="PASS" starttime="20190121 13:01:12.521"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:12.591">${resp} = </msg>
<status endtime="20190121 13:01:12.592" status="PASS" starttime="20190121 13:01:12.582"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:12.602">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:12.604" status="FAIL" starttime="20190121 13:01:12.594"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:12.607" status="FAIL" starttime="20190121 13:01:12.513"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:12.745">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:12.771">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:12.791">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:12.794">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:12.795" status="PASS" starttime="20190121 13:01:12.738"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:12.808">${resp} = </msg>
<status endtime="20190121 13:01:12.809" status="PASS" starttime="20190121 13:01:12.799"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:12.820">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:12.821" status="FAIL" starttime="20190121 13:01:12.812"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:12.824" status="FAIL" starttime="20190121 13:01:12.730"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:12.963">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:12.989">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:13.010">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:13.013">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:13.014" status="PASS" starttime="20190121 13:01:12.956"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:13.027">${resp} = </msg>
<status endtime="20190121 13:01:13.028" status="PASS" starttime="20190121 13:01:13.018"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:13.038">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:13.040" status="FAIL" starttime="20190121 13:01:13.031"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:13.043" status="FAIL" starttime="20190121 13:01:12.948"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:13.181">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:13.206">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:13.226">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:13.229">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:13.230" status="PASS" starttime="20190121 13:01:13.174"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:13.247">${resp} = </msg>
<status endtime="20190121 13:01:13.248" status="PASS" starttime="20190121 13:01:13.234"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:13.258">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:13.260" status="FAIL" starttime="20190121 13:01:13.251"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:13.263" status="FAIL" starttime="20190121 13:01:13.166"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:13.400">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:13.425">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:13.446">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:13.449">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:13.450" status="PASS" starttime="20190121 13:01:13.394"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:13.465">${resp} = </msg>
<status endtime="20190121 13:01:13.466" status="PASS" starttime="20190121 13:01:13.454"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:13.478">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:13.479" status="FAIL" starttime="20190121 13:01:13.470"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:13.483" status="FAIL" starttime="20190121 13:01:13.386"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:13.620">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:13.648">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:13.668">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:13.671">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:13.673" status="PASS" starttime="20190121 13:01:13.614"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:13.686">${resp} = </msg>
<status endtime="20190121 13:01:13.687" status="PASS" starttime="20190121 13:01:13.676"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:13.698">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:13.699" status="FAIL" starttime="20190121 13:01:13.690"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:13.703" status="FAIL" starttime="20190121 13:01:13.606"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:13.840">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:13.867">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:13.887">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:13.890">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:13.891" status="PASS" starttime="20190121 13:01:13.834"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:13.903">${resp} = </msg>
<status endtime="20190121 13:01:13.904" status="PASS" starttime="20190121 13:01:13.894"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:13.915">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:13.916" status="FAIL" starttime="20190121 13:01:13.907"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:13.919" status="FAIL" starttime="20190121 13:01:13.826"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:14.059">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:14.085">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:14.105">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:14.109">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:14.110" status="PASS" starttime="20190121 13:01:14.052"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:14.123">${resp} = </msg>
<status endtime="20190121 13:01:14.124" status="PASS" starttime="20190121 13:01:14.114"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:14.138">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:14.140" status="FAIL" starttime="20190121 13:01:14.127"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:14.143" status="FAIL" starttime="20190121 13:01:14.043"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:14.282">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:14.309">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:14.329">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:14.332">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:14.333" status="PASS" starttime="20190121 13:01:14.275"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:14.346">${resp} = </msg>
<status endtime="20190121 13:01:14.347" status="PASS" starttime="20190121 13:01:14.337"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:14.358">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:14.359" status="FAIL" starttime="20190121 13:01:14.350"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:14.362" status="FAIL" starttime="20190121 13:01:14.266"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:14.500">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:14.527">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:14.547">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:14.550">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:14.551" status="PASS" starttime="20190121 13:01:14.494"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:14.565">${resp} = </msg>
<status endtime="20190121 13:01:14.565" status="PASS" starttime="20190121 13:01:14.556"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:14.576">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:14.578" status="FAIL" starttime="20190121 13:01:14.568"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:14.581" status="FAIL" starttime="20190121 13:01:14.486"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:14.719">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:14.745">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:14.765">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:14.768">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:14.769" status="PASS" starttime="20190121 13:01:14.712"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:14.782">${resp} = </msg>
<status endtime="20190121 13:01:14.783" status="PASS" starttime="20190121 13:01:14.773"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:14.794">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:14.795" status="FAIL" starttime="20190121 13:01:14.786"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:14.798" status="FAIL" starttime="20190121 13:01:14.704"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:14.936">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:14.962">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:14.983">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:14.986">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:14.987" status="PASS" starttime="20190121 13:01:14.929"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:15.000">${resp} = </msg>
<status endtime="20190121 13:01:15.001" status="PASS" starttime="20190121 13:01:14.991"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:15.018">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:15.019" status="FAIL" starttime="20190121 13:01:15.005"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:15.023" status="FAIL" starttime="20190121 13:01:14.921"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:15.161">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:15.187">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:15.207">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:15.210">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:15.211" status="PASS" starttime="20190121 13:01:15.155"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:15.225">${resp} = </msg>
<status endtime="20190121 13:01:15.226" status="PASS" starttime="20190121 13:01:15.216"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:15.237">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:15.238" status="FAIL" starttime="20190121 13:01:15.229"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:15.241" status="FAIL" starttime="20190121 13:01:15.147"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:15.379">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:15.405">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:15.425">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:15.428">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:15.429" status="PASS" starttime="20190121 13:01:15.372"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:15.442">${resp} = </msg>
<status endtime="20190121 13:01:15.442" status="PASS" starttime="20190121 13:01:15.433"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:15.453">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:15.455" status="FAIL" starttime="20190121 13:01:15.445"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:15.459" status="FAIL" starttime="20190121 13:01:15.364"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:15.596">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:15.623">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:15.643">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:15.646">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:15.647" status="PASS" starttime="20190121 13:01:15.590"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:15.660">${resp} = </msg>
<status endtime="20190121 13:01:15.661" status="PASS" starttime="20190121 13:01:15.651"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:15.672">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:15.673" status="FAIL" starttime="20190121 13:01:15.664"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:15.676" status="FAIL" starttime="20190121 13:01:15.582"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:15.814">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:15.840">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:15.860">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:15.863">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:15.865" status="PASS" starttime="20190121 13:01:15.808"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:15.877">${resp} = </msg>
<status endtime="20190121 13:01:15.878" status="PASS" starttime="20190121 13:01:15.868"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:15.889">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:15.890" status="FAIL" starttime="20190121 13:01:15.881"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:15.893" status="FAIL" starttime="20190121 13:01:15.800"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:16.035">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:16.061">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:16.081">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:16.085">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:16.086" status="PASS" starttime="20190121 13:01:16.029"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:16.098">${resp} = </msg>
<status endtime="20190121 13:01:16.099" status="PASS" starttime="20190121 13:01:16.089"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:16.110">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:16.111" status="FAIL" starttime="20190121 13:01:16.102"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:16.114" status="FAIL" starttime="20190121 13:01:16.016"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:16.252">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:16.279">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:16.299">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:16.302">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:16.303" status="PASS" starttime="20190121 13:01:16.245"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:16.317">${resp} = </msg>
<status endtime="20190121 13:01:16.317" status="PASS" starttime="20190121 13:01:16.307"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:16.328">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:16.330" status="FAIL" starttime="20190121 13:01:16.320"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:16.333" status="FAIL" starttime="20190121 13:01:16.237"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:16.470">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:16.497">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:16.517">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:16.520">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:16.521" status="PASS" starttime="20190121 13:01:16.464"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:16.533">${resp} = </msg>
<status endtime="20190121 13:01:16.534" status="PASS" starttime="20190121 13:01:16.525"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:16.545">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:16.547" status="FAIL" starttime="20190121 13:01:16.537"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:16.550" status="FAIL" starttime="20190121 13:01:16.456"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:16.687">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:16.714">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:16.735">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:16.738">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:16.739" status="PASS" starttime="20190121 13:01:16.681"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:16.752">${resp} = </msg>
<status endtime="20190121 13:01:16.753" status="PASS" starttime="20190121 13:01:16.743"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:16.764">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:16.765" status="FAIL" starttime="20190121 13:01:16.756"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:16.768" status="FAIL" starttime="20190121 13:01:16.673"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:16.910">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:16.936">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:16.956">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:16.959">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:16.960" status="PASS" starttime="20190121 13:01:16.903"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:16.973">${resp} = </msg>
<status endtime="20190121 13:01:16.974" status="PASS" starttime="20190121 13:01:16.964"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:16.985">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:16.986" status="FAIL" starttime="20190121 13:01:16.977"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:16.989" status="FAIL" starttime="20190121 13:01:16.891"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:17.128">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:17.155">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:17.176">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:17.179">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:17.180" status="PASS" starttime="20190121 13:01:17.121"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:17.193">${resp} = </msg>
<status endtime="20190121 13:01:17.194" status="PASS" starttime="20190121 13:01:17.184"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:17.205">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:17.207" status="FAIL" starttime="20190121 13:01:17.197"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:17.210" status="FAIL" starttime="20190121 13:01:17.113"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:17.348">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:17.374">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:17.394">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:17.397">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:17.398" status="PASS" starttime="20190121 13:01:17.341"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:17.411">${resp} = </msg>
<status endtime="20190121 13:01:17.413" status="PASS" starttime="20190121 13:01:17.402"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:17.424">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:17.425" status="FAIL" starttime="20190121 13:01:17.416"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:17.428" status="FAIL" starttime="20190121 13:01:17.333"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:17.566">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:17.592">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:17.612">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:17.615">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:17.617" status="PASS" starttime="20190121 13:01:17.560"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:17.630">${resp} = </msg>
<status endtime="20190121 13:01:17.631" status="PASS" starttime="20190121 13:01:17.620"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:17.641">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:17.643" status="FAIL" starttime="20190121 13:01:17.633"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:17.646" status="FAIL" starttime="20190121 13:01:17.552"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:17.787">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:17.813">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:17.834">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:17.837">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:17.838" status="PASS" starttime="20190121 13:01:17.777"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:17.852">${resp} = </msg>
<status endtime="20190121 13:01:17.853" status="PASS" starttime="20190121 13:01:17.842"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:17.864">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:17.865" status="FAIL" starttime="20190121 13:01:17.856"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:17.869" status="FAIL" starttime="20190121 13:01:17.769"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:18.007">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:18.033">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:18.054">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:18.057">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:18.058" status="PASS" starttime="20190121 13:01:18.000"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:18.071">${resp} = </msg>
<status endtime="20190121 13:01:18.072" status="PASS" starttime="20190121 13:01:18.062"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:18.082">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:18.084" status="FAIL" starttime="20190121 13:01:18.074"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:18.087" status="FAIL" starttime="20190121 13:01:17.992"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:18.225">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:18.251">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:18.271">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:18.274">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:18.275" status="PASS" starttime="20190121 13:01:18.218"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:18.288">${resp} = </msg>
<status endtime="20190121 13:01:18.289" status="PASS" starttime="20190121 13:01:18.279"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:18.300">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:18.302" status="FAIL" starttime="20190121 13:01:18.292"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:18.305" status="FAIL" starttime="20190121 13:01:18.210"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:18.443">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:18.469">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:18.490">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:18.493">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:18.494" status="PASS" starttime="20190121 13:01:18.436"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:18.507">${resp} = </msg>
<status endtime="20190121 13:01:18.508" status="PASS" starttime="20190121 13:01:18.498"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:18.524">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:18.525" status="FAIL" starttime="20190121 13:01:18.511"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:18.529" status="FAIL" starttime="20190121 13:01:18.428"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:18.667">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:18.692">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:18.713">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:18.717">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:18.718" status="PASS" starttime="20190121 13:01:18.660"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:18.734">${resp} = </msg>
<status endtime="20190121 13:01:18.735" status="PASS" starttime="20190121 13:01:18.721"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:18.745">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:18.747" status="FAIL" starttime="20190121 13:01:18.738"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:18.750" status="FAIL" starttime="20190121 13:01:18.652"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:18.887">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:18.914">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:18.934">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:18.937">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:18.938" status="PASS" starttime="20190121 13:01:18.881"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:18.951">${resp} = </msg>
<status endtime="20190121 13:01:18.952" status="PASS" starttime="20190121 13:01:18.942"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:18.963">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:18.964" status="FAIL" starttime="20190121 13:01:18.955"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:18.967" status="FAIL" starttime="20190121 13:01:18.873"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:19.105">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:19.205">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:19.245">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:19.248">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:19.249" status="PASS" starttime="20190121 13:01:19.099"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:19.274">${resp} = </msg>
<status endtime="20190121 13:01:19.275" status="PASS" starttime="20190121 13:01:19.253"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:19.298">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:19.300" status="FAIL" starttime="20190121 13:01:19.290"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:19.315" status="FAIL" starttime="20190121 13:01:19.091"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:19.453">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:19.479">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:19.499">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:19.502">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:19.503" status="PASS" starttime="20190121 13:01:19.446"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:19.516">${resp} = </msg>
<status endtime="20190121 13:01:19.517" status="PASS" starttime="20190121 13:01:19.507"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:19.528">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:19.529" status="FAIL" starttime="20190121 13:01:19.520"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:19.532" status="FAIL" starttime="20190121 13:01:19.438"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:19.670">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:19.697">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:19.717">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:19.720">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:19.721" status="PASS" starttime="20190121 13:01:19.664"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:19.737">${resp} = </msg>
<status endtime="20190121 13:01:19.738" status="PASS" starttime="20190121 13:01:19.725"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:19.750">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:19.751" status="FAIL" starttime="20190121 13:01:19.741"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:19.754" status="FAIL" starttime="20190121 13:01:19.655"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:19.892">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:19.918">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:19.938">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:19.941">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:19.942" status="PASS" starttime="20190121 13:01:19.885"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:19.954">${resp} = </msg>
<status endtime="20190121 13:01:19.955" status="PASS" starttime="20190121 13:01:19.946"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:19.966">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:19.968" status="FAIL" starttime="20190121 13:01:19.958"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:19.971" status="FAIL" starttime="20190121 13:01:19.877"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:20.109">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:20.135">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:20.155">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:20.158">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:20.159" status="PASS" starttime="20190121 13:01:20.102"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:20.173">${resp} = </msg>
<status endtime="20190121 13:01:20.173" status="PASS" starttime="20190121 13:01:20.163"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:20.184">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:20.185" status="FAIL" starttime="20190121 13:01:20.176"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:20.189" status="FAIL" starttime="20190121 13:01:20.094"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:20.326">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:20.352">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:20.373">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:20.376">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:20.377" status="PASS" starttime="20190121 13:01:20.320"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:20.390">${resp} = </msg>
<status endtime="20190121 13:01:20.391" status="PASS" starttime="20190121 13:01:20.381"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:20.401">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:20.403" status="FAIL" starttime="20190121 13:01:20.393"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:20.406" status="FAIL" starttime="20190121 13:01:20.312"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:20.543">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:20.570">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:20.590">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:20.593">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:20.594" status="PASS" starttime="20190121 13:01:20.537"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:20.611">${resp} = </msg>
<status endtime="20190121 13:01:20.612" status="PASS" starttime="20190121 13:01:20.598"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:20.622">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:20.624" status="FAIL" starttime="20190121 13:01:20.614"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:20.627" status="FAIL" starttime="20190121 13:01:20.529"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:20.764">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:20.791">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:20.812">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:20.815">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:20.816" status="PASS" starttime="20190121 13:01:20.758"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:20.829">${resp} = </msg>
<status endtime="20190121 13:01:20.830" status="PASS" starttime="20190121 13:01:20.820"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:20.841">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:20.842" status="FAIL" starttime="20190121 13:01:20.833"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:20.847" status="FAIL" starttime="20190121 13:01:20.750"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:20.985">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:21.011">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:21.032">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:21.035">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:21.036" status="PASS" starttime="20190121 13:01:20.978"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:21.049">${resp} = </msg>
<status endtime="20190121 13:01:21.050" status="PASS" starttime="20190121 13:01:21.040"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:21.061">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:21.062" status="FAIL" starttime="20190121 13:01:21.053"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:21.065" status="FAIL" starttime="20190121 13:01:20.970"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:21.203">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:21.229">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:21.250">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:21.253">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:21.254" status="PASS" starttime="20190121 13:01:21.196"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:21.267">${resp} = </msg>
<status endtime="20190121 13:01:21.268" status="PASS" starttime="20190121 13:01:21.258"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:21.279">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:21.280" status="FAIL" starttime="20190121 13:01:21.271"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:21.283" status="FAIL" starttime="20190121 13:01:21.189"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:21.421">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:21.447">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:21.467">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:21.470">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:21.471" status="PASS" starttime="20190121 13:01:21.414"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:21.488">${resp} = </msg>
<status endtime="20190121 13:01:21.489" status="PASS" starttime="20190121 13:01:21.475"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:21.499">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:21.501" status="FAIL" starttime="20190121 13:01:21.492"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:21.504" status="FAIL" starttime="20190121 13:01:21.406"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:21.641">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:21.667">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:21.688">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:21.691">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:21.692" status="PASS" starttime="20190121 13:01:21.635"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:21.705">${resp} = </msg>
<status endtime="20190121 13:01:21.705" status="PASS" starttime="20190121 13:01:21.696"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:21.716">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:21.718" status="FAIL" starttime="20190121 13:01:21.708"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:21.721" status="FAIL" starttime="20190121 13:01:21.627"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:21.859">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:21.885">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:21.905">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:21.909">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:21.910" status="PASS" starttime="20190121 13:01:21.852"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:21.922">${resp} = </msg>
<status endtime="20190121 13:01:21.923" status="PASS" starttime="20190121 13:01:21.913"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:21.934">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:21.935" status="FAIL" starttime="20190121 13:01:21.926"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:21.939" status="FAIL" starttime="20190121 13:01:21.844"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:22.078">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:22.104">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:22.124">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:22.127">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:22.129" status="PASS" starttime="20190121 13:01:22.071"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:22.142">${resp} = </msg>
<status endtime="20190121 13:01:22.143" status="PASS" starttime="20190121 13:01:22.132"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:22.153">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:22.155" status="FAIL" starttime="20190121 13:01:22.145"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:22.158" status="FAIL" starttime="20190121 13:01:22.063"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:22.295">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:22.322">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:22.342">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:22.345">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:22.346" status="PASS" starttime="20190121 13:01:22.289"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:22.362">${resp} = </msg>
<status endtime="20190121 13:01:22.363" status="PASS" starttime="20190121 13:01:22.350"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:22.374">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:22.376" status="FAIL" starttime="20190121 13:01:22.366"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:22.379" status="FAIL" starttime="20190121 13:01:22.281"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:22.516">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:22.542">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:22.563">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:22.566">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:22.567" status="PASS" starttime="20190121 13:01:22.509"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:22.580">${resp} = </msg>
<status endtime="20190121 13:01:22.581" status="PASS" starttime="20190121 13:01:22.571"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:22.592">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:22.593" status="FAIL" starttime="20190121 13:01:22.584"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:22.596" status="FAIL" starttime="20190121 13:01:22.502"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:22.734">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:22.761">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:22.781">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:22.784">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:22.785" status="PASS" starttime="20190121 13:01:22.728"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:22.799">${resp} = </msg>
<status endtime="20190121 13:01:22.800" status="PASS" starttime="20190121 13:01:22.789"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:22.811">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:22.812" status="FAIL" starttime="20190121 13:01:22.803"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:22.815" status="FAIL" starttime="20190121 13:01:22.719"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:22.953">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:22.979">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:23.000">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:23.003">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:23.004" status="PASS" starttime="20190121 13:01:22.946"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:23.017">${resp} = </msg>
<status endtime="20190121 13:01:23.018" status="PASS" starttime="20190121 13:01:23.008"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:23.028">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:23.030" status="FAIL" starttime="20190121 13:01:23.020"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:23.033" status="FAIL" starttime="20190121 13:01:22.938"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:23.172">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:23.198">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:23.219">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:23.222">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:23.223" status="PASS" starttime="20190121 13:01:23.164"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:23.249">${resp} = </msg>
<status endtime="20190121 13:01:23.250" status="PASS" starttime="20190121 13:01:23.226"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:23.261">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:23.262" status="FAIL" starttime="20190121 13:01:23.253"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:23.265" status="FAIL" starttime="20190121 13:01:23.156"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:23.402">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:23.429">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:23.449">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:23.452">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:23.453" status="PASS" starttime="20190121 13:01:23.396"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:23.466">${resp} = </msg>
<status endtime="20190121 13:01:23.467" status="PASS" starttime="20190121 13:01:23.457"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:23.478">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:23.479" status="FAIL" starttime="20190121 13:01:23.470"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:23.482" status="FAIL" starttime="20190121 13:01:23.388"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:23.620">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:23.649">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:23.670">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:23.673">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:23.674" status="PASS" starttime="20190121 13:01:23.614"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:23.688">${resp} = </msg>
<status endtime="20190121 13:01:23.689" status="PASS" starttime="20190121 13:01:23.678"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:23.699">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:23.701" status="FAIL" starttime="20190121 13:01:23.692"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:23.704" status="FAIL" starttime="20190121 13:01:23.605"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:23.842">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:23.869">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:23.890">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:23.893">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:23.894" status="PASS" starttime="20190121 13:01:23.835"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:23.907">${resp} = </msg>
<status endtime="20190121 13:01:23.908" status="PASS" starttime="20190121 13:01:23.898"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:23.918">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:23.920" status="FAIL" starttime="20190121 13:01:23.911"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:23.923" status="FAIL" starttime="20190121 13:01:23.827"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:24.062">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:24.088">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:24.108">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:24.111">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:24.112" status="PASS" starttime="20190121 13:01:24.055"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:24.125">${resp} = </msg>
<status endtime="20190121 13:01:24.126" status="PASS" starttime="20190121 13:01:24.116"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:24.140">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:24.142" status="FAIL" starttime="20190121 13:01:24.129"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:24.145" status="FAIL" starttime="20190121 13:01:24.046"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:24.284">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:24.313">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:24.333">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:24.337">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:24.338" status="PASS" starttime="20190121 13:01:24.277"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:24.351">${resp} = </msg>
<status endtime="20190121 13:01:24.352" status="PASS" starttime="20190121 13:01:24.342"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:24.363">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:24.365" status="FAIL" starttime="20190121 13:01:24.355"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:24.368" status="FAIL" starttime="20190121 13:01:24.268"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:24.506">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:24.557">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:24.584">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:24.587">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:24.588" status="PASS" starttime="20190121 13:01:24.499"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:24.613">${resp} = </msg>
<status endtime="20190121 13:01:24.613" status="PASS" starttime="20190121 13:01:24.592"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:24.624">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:24.626" status="FAIL" starttime="20190121 13:01:24.616"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:24.629" status="FAIL" starttime="20190121 13:01:24.491"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:24.767">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:24.794">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:24.815">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:24.818">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:24.819" status="PASS" starttime="20190121 13:01:24.760"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:24.832">${resp} = </msg>
<status endtime="20190121 13:01:24.832" status="PASS" starttime="20190121 13:01:24.823"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:24.843">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:24.845" status="FAIL" starttime="20190121 13:01:24.835"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:24.848" status="FAIL" starttime="20190121 13:01:24.752"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:24.986">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:25.013">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:25.036">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:25.039">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:25.041" status="PASS" starttime="20190121 13:01:24.979"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:25.054">${resp} = </msg>
<status endtime="20190121 13:01:25.055" status="PASS" starttime="20190121 13:01:25.045"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:25.070">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:25.071" status="FAIL" starttime="20190121 13:01:25.058"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:25.075" status="FAIL" starttime="20190121 13:01:24.971"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:25.213">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:25.239">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:25.260">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:25.263">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:25.264" status="PASS" starttime="20190121 13:01:25.206"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:25.277">${resp} = </msg>
<status endtime="20190121 13:01:25.278" status="PASS" starttime="20190121 13:01:25.268"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:25.289">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:25.291" status="FAIL" starttime="20190121 13:01:25.281"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:25.294" status="FAIL" starttime="20190121 13:01:25.198"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:25.432">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:25.458">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:25.481">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:25.484">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:01:25.486" status="PASS" starttime="20190121 13:01:25.425"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:25.516">${resp} = </msg>
<status endtime="20190121 13:01:25.529" status="PASS" starttime="20190121 13:01:25.507"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:01:25.569">'' does not contain 'usb_max'</msg>
<status endtime="20190121 13:01:25.571" status="FAIL" starttime="20190121 13:01:25.537"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:25.586" status="FAIL" starttime="20190121 13:01:25.417"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:25.782">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190121 13:01:25.841">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:25.894">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:25.897">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:25.898" status="PASS" starttime="20190121 13:01:25.753"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:25.944">${resp} = 284: usb_max: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000</msg>
<status endtime="20190121 13:01:25.975" status="PASS" starttime="20190121 13:01:25.902"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<status endtime="20190121 13:01:26.054" status="PASS" starttime="20190121 13:01:26.011"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:26.069" status="PASS" starttime="20190121 13:01:25.709"></status>
</kw>
<status endtime="20190121 13:01:26.071" status="PASS" starttime="20190121 13:01:00.659"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:01:26.083">${STATUS} = True</msg>
<status endtime="20190121 13:01:26.087" status="PASS" starttime="20190121 13:01:00.653"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DUT ready status: ${STATUS}</arg>
</arguments>
<status endtime="20190121 13:01:26.137" status="PASS" starttime="20190121 13:01:26.090"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3 seconds</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:29.162">Slept 3 seconds</msg>
<status endtime="20190121 13:01:29.164" status="PASS" starttime="20190121 13:01:26.148"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:01:29.168">${status} = True</msg>
<status endtime="20190121 13:01:29.169" status="PASS" starttime="20190121 13:01:00.624"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Device does not exist</arg>
</arguments>
<status endtime="20190121 13:01:29.177" status="PASS" starttime="20190121 13:01:29.172"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh"</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:29.183">"Setup ssh"</msg>
<status endtime="20190121 13:01:29.185" status="PASS" starttime="20190121 13:01:29.179"></status>
</kw>
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>2x</arg>
<arg>open_ssh_connection</arg>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Open Ssh Connection">
<doc>Connect to DUT</doc>
<arguments>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:29.203">Creating None ssh connection to root:toor@192.168.1.101:22</msg>
<status endtime="20190121 13:01:31.047" status="PASS" starttime="20190121 13:01:29.196"></status>
</kw>
<status endtime="20190121 13:01:31.048" status="PASS" starttime="20190121 13:01:29.189"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh done!"</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:31.058">"Setup ssh done!"</msg>
<status endtime="20190121 13:01:31.061" status="PASS" starttime="20190121 13:01:31.051"></status>
</kw>
<status endtime="20190121 13:01:31.063" status="PASS" starttime="20190121 13:00:54.141"></status>
</kw>
<kw name="cansend_500k">
<doc>Can 3 send message test with baudrate 500k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${500000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:31.090">Start test with can2 and bitrate: 500000</msg>
<status endtime="20190121 13:01:31.093" status="PASS" starttime="20190121 13:01:31.084"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190121 13:01:31.112" status="PASS" starttime="20190121 13:01:31.105"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:31.122">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:01:31.151">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:31.226">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:31.229">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:31.230" status="PASS" starttime="20190121 13:01:31.115"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:31.243" status="PASS" starttime="20190121 13:01:31.234"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:31.255">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg level="INFO" timestamp="20190121 13:01:31.284">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:31.342">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:31.345">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:31.347" status="PASS" starttime="20190121 13:01:31.247"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:31.360" status="PASS" starttime="20190121 13:01:31.351"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:31.370">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:01:31.399">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:31.540">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:31.543">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:31.544" status="PASS" starttime="20190121 13:01:31.364"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:31.557" status="PASS" starttime="20190121 13:01:31.548"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190121 13:01:31.559" status="PASS" starttime="20190121 13:01:31.095"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status endtime="20190121 13:01:31.578" status="PASS" starttime="20190121 13:01:31.572"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:31.588">Sending command to DUT ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:01:31.664">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:31.666">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:31.667" status="PASS" starttime="20190121 13:01:31.581"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:32.182">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:32.185" status="PASS" starttime="20190121 13:01:31.670"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:32.194">Sending command to DUT ip link set can2 type can bitrate 500000</msg>
<msg level="INFO" timestamp="20190121 13:01:32.247">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:32.249">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:32.250" status="PASS" starttime="20190121 13:01:32.188"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:32.763">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:32.765" status="PASS" starttime="20190121 13:01:32.253"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:32.774">Sending command to DUT ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:01:32.840">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:32.842">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:32.843" status="PASS" starttime="20190121 13:01:32.768"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:33.359">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:33.361" status="PASS" starttime="20190121 13:01:32.846"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:33.363" status="PASS" starttime="20190121 13:01:31.562"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status endtime="20190121 13:01:33.586" status="PASS" starttime="20190121 13:01:33.366"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190121 13:01:33.646" status="PASS" starttime="20190121 13:01:33.589"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status endtime="20190121 13:01:33.670" status="PASS" starttime="20190121 13:01:33.656"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190121 13:01:33.763" status="PASS" starttime="20190121 13:01:33.679"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status endtime="20190121 13:01:33.795" status="PASS" starttime="20190121 13:01:33.775"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:34.320">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:34.322" status="PASS" starttime="20190121 13:01:33.807"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status endtime="20190121 13:01:34.345" status="PASS" starttime="20190121 13:01:34.329"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:34.359">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190121 13:01:34.429">Returning data (, )</msg>
<status endtime="20190121 13:01:34.431" status="PASS" starttime="20190121 13:01:34.348"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:34.466">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190121 13:01:34.558">Returning data (, )</msg>
<status endtime="20190121 13:01:34.560" status="PASS" starttime="20190121 13:01:34.442"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:34.594">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190121 13:01:34.695">Returning data (, )</msg>
<status endtime="20190121 13:01:34.702" status="PASS" starttime="20190121 13:01:34.567"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:35.234">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:35.236" status="PASS" starttime="20190121 13:01:34.725"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:35.299">${res_list} = [{'timestamp': '21-01-2019 - 13:01:34.437199', 'id': '0x1a', 'payload': '11223344556677BB'}, {'timestamp': '21-01-2019 - 13:01:34.572747', 'id': '0x1a', 'payload': '11223344556677BB'}, {'timestamp': '...</msg>
<status endtime="20190121 13:01:35.300" status="PASS" starttime="20190121 13:01:35.244"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:35.309">[{'timestamp': '21-01-2019 - 13:01:34.437199', 'id': '0x1a', 'payload': '11223344556677BB'}, {'timestamp': '21-01-2019 - 13:01:34.572747', 'id': '0x1a', 'payload': '11223344556677BB'}, {'timestamp': '21-01-2019 - 13:01:34.705120', 'id': '0x1a', 'payload': '11223344556677BB'}]</msg>
<status endtime="20190121 13:01:35.312" status="PASS" starttime="20190121 13:01:35.303"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:35.320">Length is 3</msg>
<msg level="INFO" timestamp="20190121 13:01:35.322">${MSG_LENGTH} = 3</msg>
<status endtime="20190121 13:01:35.323" status="PASS" starttime="20190121 13:01:35.315"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:01:35.341" status="PASS" starttime="20190121 13:01:35.335"></status>
</kw>
<status endtime="20190121 13:01:35.343" status="PASS" starttime="20190121 13:01:35.326"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:35.367">Length is 3</msg>
<msg level="INFO" timestamp="20190121 13:01:35.370">${count} = 3</msg>
<status endtime="20190121 13:01:35.371" status="PASS" starttime="20190121 13:01:35.362"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:01:35.380" status="PASS" starttime="20190121 13:01:35.373"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:35.389">${msgcount} = 0</msg>
<status endtime="20190121 13:01:35.390" status="PASS" starttime="20190121 13:01:35.383"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:01:34.437199', 'id': '0x1a', 'payload': '11223344556677BB'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:35.404">${payload} = 11223344556677BB</msg>
<status endtime="20190121 13:01:35.405" status="PASS" starttime="20190121 13:01:35.398"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:35.416">${count} = 1</msg>
<status endtime="20190121 13:01:35.417" status="PASS" starttime="20190121 13:01:35.408"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:35.427">${msgcount} = 1</msg>
<status endtime="20190121 13:01:35.428" status="PASS" starttime="20190121 13:01:35.420"></status>
</kw>
<status endtime="20190121 13:01:35.429" status="PASS" starttime="20190121 13:01:35.395"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:01:34.572747', 'id': '0x1a', 'payload': '11223344556677BB'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:35.440">${payload} = 11223344556677BB</msg>
<status endtime="20190121 13:01:35.441" status="PASS" starttime="20190121 13:01:35.434"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:35.452">${count} = 1</msg>
<status endtime="20190121 13:01:35.453" status="PASS" starttime="20190121 13:01:35.444"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:35.463">${msgcount} = 2</msg>
<status endtime="20190121 13:01:35.464" status="PASS" starttime="20190121 13:01:35.455"></status>
</kw>
<status endtime="20190121 13:01:35.464" status="PASS" starttime="20190121 13:01:35.430"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:01:34.705120', 'id': '0x1a', 'payload': '11223344556677BB'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:35.479">${payload} = 11223344556677BB</msg>
<status endtime="20190121 13:01:35.480" status="PASS" starttime="20190121 13:01:35.469"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:35.490">${count} = 1</msg>
<status endtime="20190121 13:01:35.491" status="PASS" starttime="20190121 13:01:35.483"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:35.502">${msgcount} = 3</msg>
<status endtime="20190121 13:01:35.503" status="PASS" starttime="20190121 13:01:35.494"></status>
</kw>
<status endtime="20190121 13:01:35.504" status="PASS" starttime="20190121 13:01:35.466"></status>
</kw>
<status endtime="20190121 13:01:35.505" status="PASS" starttime="20190121 13:01:35.391"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:01:35.515" status="PASS" starttime="20190121 13:01:35.508"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status endtime="20190121 13:01:35.525" status="PASS" starttime="20190121 13:01:35.518"></status>
</kw>
<status endtime="20190121 13:01:35.529" status="PASS" starttime="20190121 13:01:35.353"></status>
</kw>
<status endtime="20190121 13:01:35.531" status="PASS" starttime="20190121 13:01:35.346"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status endtime="20190121 13:01:35.534" status="PASS" starttime="20190121 13:01:31.074"></status>
</kw>
<status endtime="20190121 13:01:35.537" status="PASS" starttime="20190121 13:01:31.068"></status>
</kw>
<kw name="can_loopback_500k">
<doc>Can 3 loopback test with baudrate 500k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${500000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:35.587">Can channel loopback: can2 with bitrate: 500000</msg>
<status endtime="20190121 13:01:35.595" status="PASS" starttime="20190121 13:01:35.577"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190121 13:01:35.614" status="PASS" starttime="20190121 13:01:35.607"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:35.624">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:01:35.654">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:35.765">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:35.768">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:35.769" status="PASS" starttime="20190121 13:01:35.618"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:35.781" status="PASS" starttime="20190121 13:01:35.773"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:35.792">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg level="INFO" timestamp="20190121 13:01:35.821">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:35.879">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:35.882">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:35.883" status="PASS" starttime="20190121 13:01:35.784"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:35.896" status="PASS" starttime="20190121 13:01:35.887"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:35.906">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:01:35.954">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:36.087">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:36.091">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:36.092" status="PASS" starttime="20190121 13:01:35.899"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:36.105" status="PASS" starttime="20190121 13:01:36.096"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190121 13:01:36.107" status="PASS" starttime="20190121 13:01:35.597"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status endtime="20190121 13:01:36.125" status="PASS" starttime="20190121 13:01:36.120"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:36.135">Sending command to DUT ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:01:36.187">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:36.189">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:36.190" status="PASS" starttime="20190121 13:01:36.129"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:36.707">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:36.709" status="PASS" starttime="20190121 13:01:36.193"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:36.718">Sending command to DUT ip link set can2 type can bitrate 500000</msg>
<msg level="INFO" timestamp="20190121 13:01:36.771">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:36.774">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:36.774" status="PASS" starttime="20190121 13:01:36.711"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:37.285">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:37.288" status="PASS" starttime="20190121 13:01:36.777"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:37.297">Sending command to DUT ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:01:37.347">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:37.350">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:37.351" status="PASS" starttime="20190121 13:01:37.291"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:37.865">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:37.868" status="PASS" starttime="20190121 13:01:37.354"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:37.871" status="PASS" starttime="20190121 13:01:36.110"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:37.879">Starting process:
ip -details link show can2</msg>
<msg level="INFO" timestamp="20190121 13:01:37.908">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:37.921">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:37.923">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:37.925" status="PASS" starttime="20190121 13:01:37.874"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status endtime="20190121 13:01:37.937" status="PASS" starttime="20190121 13:01:37.929"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:37.947">Sending command to DUT ip -details link show can2</msg>
<msg level="INFO" timestamp="20190121 13:01:38.029">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 500000 sample-point 0.875  	  tq 125 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg level="INFO" timestamp="20190121 13:01:38.033">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 500000 sample-poi...</msg>
<status endtime="20190121 13:01:38.034" status="PASS" starttime="20190121 13:01:37.940"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status endtime="20190121 13:01:38.050" status="PASS" starttime="20190121 13:01:38.037"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:38.057">Sending command to DUT pkill candump</msg>
<msg level="INFO" timestamp="20190121 13:01:38.152">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:38.154">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:38.155" status="PASS" starttime="20190121 13:01:38.053"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status endtime="20190121 13:01:38.169" status="PASS" starttime="20190121 13:01:38.158"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:39.176">Slept 1 second</msg>
<status endtime="20190121 13:01:39.178" status="PASS" starttime="20190121 13:01:38.172"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:39.191">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg level="INFO" timestamp="20190121 13:01:39.234">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:39.236">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:39.237" status="PASS" starttime="20190121 13:01:39.181"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status endtime="20190121 13:01:39.253" status="PASS" starttime="20190121 13:01:39.240"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:39.760">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:39.762" status="PASS" starttime="20190121 13:01:39.257"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:39.769">Sending command to DUT ps aux | grep candump</msg>
<msg level="INFO" timestamp="20190121 13:01:39.842">Returning data (497 root      0:00 candump -t a -D -B can2 can2   498 root      0:00 sh -c ps aux | grep candump   500 root      0:00 grep candump, )</msg>
<msg level="INFO" timestamp="20190121 13:01:39.845">${ret} = ('497 root      0:00 candump -t a -D -B can2 can2   498 root      0:00 sh -c ps aux | grep candump   500 root      0:00 grep candump', '')</msg>
<status endtime="20190121 13:01:39.846" status="PASS" starttime="20190121 13:01:39.765"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status endtime="20190121 13:01:39.884" status="PASS" starttime="20190121 13:01:39.862"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status endtime="20190121 13:01:40.181" status="PASS" starttime="20190121 13:01:39.887"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190121 13:01:40.257" status="PASS" starttime="20190121 13:01:40.184"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190121 13:01:40.341" status="PASS" starttime="20190121 13:01:40.266"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:40.876">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:40.878" status="PASS" starttime="20190121 13:01:40.344"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:40.905">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg level="INFO" timestamp="20190121 13:01:40.980">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:41.009">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:41.024">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:41.025" status="PASS" starttime="20190121 13:01:40.885"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:41.069" status="PASS" starttime="20190121 13:01:41.042"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:41.101">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190121 13:01:41.182">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:41.209">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:41.220">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:41.222" status="PASS" starttime="20190121 13:01:41.077"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:41.267" status="PASS" starttime="20190121 13:01:41.242"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:41.301">Sending command to DUT cat /root/candump.txt</msg>
<msg level="INFO" timestamp="20190121 13:01:41.382">Returning data ((1548070014.804192)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548070015.003604)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg level="INFO" timestamp="20190121 13:01:41.393">${ret} = ('(1548070014.804192)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548070015.003604)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status endtime="20190121 13:01:41.394" status="PASS" starttime="20190121 13:01:41.278"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status endtime="20190121 13:01:41.437" status="PASS" starttime="20190121 13:01:41.414"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:41.948">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:41.950" status="PASS" starttime="20190121 13:01:41.444"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.030">${res_list} = [{'timestamp': '21-01-2019 - 13:01:41.021474', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}, {'timestamp': '21-01-2019 - 13:01:41.037139', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}, {'t...</msg>
<status endtime="20190121 13:01:42.031" status="PASS" starttime="20190121 13:01:41.958"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:42.048">[{'timestamp': '21-01-2019 - 13:01:41.021474', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}, {'timestamp': '21-01-2019 - 13:01:41.037139', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}, {'timestamp': '21-01-2019 - 13:01:41.225109', 'id': '0x1a', 'payload': '11223344556677BB'}, {'timestamp': '21-01-2019 - 13:01:41.237138', 'id': '0x1a', 'payload': '11223344556677BB'}]</msg>
<status endtime="20190121 13:01:42.055" status="PASS" starttime="20190121 13:01:42.039"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.070">Length is 4</msg>
<msg level="INFO" timestamp="20190121 13:01:42.072">${MSG_LENGTH} = 4</msg>
<status endtime="20190121 13:01:42.077" status="PASS" starttime="20190121 13:01:42.058"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:01:42.103" status="PASS" starttime="20190121 13:01:42.094"></status>
</kw>
<status endtime="20190121 13:01:42.109" status="PASS" starttime="20190121 13:01:42.080"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.159">Length is 4</msg>
<msg level="INFO" timestamp="20190121 13:01:42.165">${count} = 4</msg>
<status endtime="20190121 13:01:42.166" status="PASS" starttime="20190121 13:01:42.150"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:01:42.182" status="PASS" starttime="20190121 13:01:42.173"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.198">${msgcount} = 0</msg>
<status endtime="20190121 13:01:42.199" status="PASS" starttime="20190121 13:01:42.189"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:01:41.021474', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.227">${payload} = FFEEEEDDFFAA1122</msg>
<status endtime="20190121 13:01:42.228" status="PASS" starttime="20190121 13:01:42.214"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.250">${count} = 1</msg>
<status endtime="20190121 13:01:42.251" status="PASS" starttime="20190121 13:01:42.235"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.279">${msgcount} = 1</msg>
<status endtime="20190121 13:01:42.280" status="PASS" starttime="20190121 13:01:42.258"></status>
</kw>
<status endtime="20190121 13:01:42.285" status="PASS" starttime="20190121 13:01:42.210"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:01:41.037139', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.314">${payload} = FFEEEEDDFFAA1122</msg>
<status endtime="20190121 13:01:42.316" status="PASS" starttime="20190121 13:01:42.298"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.350">${count} = 1</msg>
<status endtime="20190121 13:01:42.351" status="PASS" starttime="20190121 13:01:42.327"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.373">${msgcount} = 2</msg>
<status endtime="20190121 13:01:42.374" status="PASS" starttime="20190121 13:01:42.358"></status>
</kw>
<status endtime="20190121 13:01:42.375" status="PASS" starttime="20190121 13:01:42.286"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:01:41.225109', 'id': '0x1a', 'payload': '11223344556677BB'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.414">${payload} = 11223344556677BB</msg>
<status endtime="20190121 13:01:42.415" status="PASS" starttime="20190121 13:01:42.385"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.470">${count} = 0</msg>
<status endtime="20190121 13:01:42.471" status="PASS" starttime="20190121 13:01:42.422"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.488">${msgcount} = 2</msg>
<status endtime="20190121 13:01:42.493" status="PASS" starttime="20190121 13:01:42.478"></status>
</kw>
<status endtime="20190121 13:01:42.494" status="PASS" starttime="20190121 13:01:42.380"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:01:41.237138', 'id': '0x1a', 'payload': '11223344556677BB'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.514">${payload} = 11223344556677BB</msg>
<status endtime="20190121 13:01:42.516" status="PASS" starttime="20190121 13:01:42.503"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.526">${count} = 0</msg>
<status endtime="20190121 13:01:42.527" status="PASS" starttime="20190121 13:01:42.519"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.539">${msgcount} = 2</msg>
<status endtime="20190121 13:01:42.541" status="PASS" starttime="20190121 13:01:42.530"></status>
</kw>
<status endtime="20190121 13:01:42.541" status="PASS" starttime="20190121 13:01:42.495"></status>
</kw>
<status endtime="20190121 13:01:42.542" status="PASS" starttime="20190121 13:01:42.202"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:01:42.550" status="PASS" starttime="20190121 13:01:42.545"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status endtime="20190121 13:01:42.559" status="PASS" starttime="20190121 13:01:42.553"></status>
</kw>
<status endtime="20190121 13:01:42.563" status="PASS" starttime="20190121 13:01:42.129"></status>
</kw>
<status endtime="20190121 13:01:42.564" status="PASS" starttime="20190121 13:01:42.118"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.577">Sending command to DUT ps aux | grep candump</msg>
<msg level="INFO" timestamp="20190121 13:01:42.678">Returning data (497 root      0:00 candump -t a -D -B can2 can2   512 root      0:00 sh -c ps aux | grep candump   514 root      0:00 grep candump, )</msg>
<msg level="INFO" timestamp="20190121 13:01:42.685">${ret} = ('497 root      0:00 candump -t a -D -B can2 can2   512 root      0:00 sh -c ps aux | grep candump   514 root      0:00 grep candump', '')</msg>
<status endtime="20190121 13:01:42.686" status="PASS" starttime="20190121 13:01:42.567"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status endtime="20190121 13:01:42.718" status="PASS" starttime="20190121 13:01:42.701"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:42.733">Sending command to DUT pkill candump</msg>
<msg level="INFO" timestamp="20190121 13:01:42.822">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:42.824">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:42.825" status="PASS" starttime="20190121 13:01:42.721"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:43.839">Slept 1 second</msg>
<status endtime="20190121 13:01:43.841" status="PASS" starttime="20190121 13:01:42.828"></status>
</kw>
<status endtime="20190121 13:01:43.844" status="PASS" starttime="20190121 13:01:35.554"></status>
</kw>
<status endtime="20190121 13:01:43.850" status="PASS" starttime="20190121 13:01:35.539"></status>
</kw>
<kw name="cansend_250k">
<doc>Can 3 send message test with baudrate 250k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:43.898">Start test with can2 and bitrate: 250000</msg>
<status endtime="20190121 13:01:43.905" status="PASS" starttime="20190121 13:01:43.884"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190121 13:01:43.946" status="PASS" starttime="20190121 13:01:43.929"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:43.970">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:01:44.019">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:44.135">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:44.139">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:44.140" status="PASS" starttime="20190121 13:01:43.951"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:44.169" status="PASS" starttime="20190121 13:01:44.148"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:44.188">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190121 13:01:44.227">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:44.324">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:44.327">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:44.332" status="PASS" starttime="20190121 13:01:44.176"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:44.357" status="PASS" starttime="20190121 13:01:44.341"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:44.374">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:01:44.427">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:44.586">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:44.589">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:44.590" status="PASS" starttime="20190121 13:01:44.361"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:44.616" status="PASS" starttime="20190121 13:01:44.598"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190121 13:01:44.619" status="PASS" starttime="20190121 13:01:43.907"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status endtime="20190121 13:01:44.637" status="PASS" starttime="20190121 13:01:44.631"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:44.648">Sending command to DUT ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:01:44.701">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:44.704">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:44.705" status="PASS" starttime="20190121 13:01:44.641"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:45.221">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:45.224" status="PASS" starttime="20190121 13:01:44.708"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:45.313">Sending command to DUT ip link set can2 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190121 13:01:45.407">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:45.409">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:45.410" status="PASS" starttime="20190121 13:01:45.235"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:45.931">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:45.933" status="PASS" starttime="20190121 13:01:45.413"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:45.942">Sending command to DUT ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:01:45.992">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:45.995">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:45.996" status="PASS" starttime="20190121 13:01:45.936"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:46.511">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:46.513" status="PASS" starttime="20190121 13:01:46.005"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:46.516" status="PASS" starttime="20190121 13:01:44.621"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status endtime="20190121 13:01:46.719" status="PASS" starttime="20190121 13:01:46.519"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190121 13:01:46.822" status="PASS" starttime="20190121 13:01:46.722"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status endtime="20190121 13:01:46.844" status="PASS" starttime="20190121 13:01:46.827"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190121 13:01:46.946" status="PASS" starttime="20190121 13:01:46.847"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status endtime="20190121 13:01:46.995" status="PASS" starttime="20190121 13:01:46.954"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:47.536">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:47.542" status="PASS" starttime="20190121 13:01:47.002"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status endtime="20190121 13:01:47.617" status="PASS" starttime="20190121 13:01:47.565"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:47.659">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190121 13:01:47.765">Returning data (, )</msg>
<status endtime="20190121 13:01:47.784" status="PASS" starttime="20190121 13:01:47.625"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:47.827">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190121 13:01:47.938">Returning data (, )</msg>
<status endtime="20190121 13:01:47.944" status="PASS" starttime="20190121 13:01:47.817"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:48.022">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190121 13:01:48.142">Returning data (, )</msg>
<status endtime="20190121 13:01:48.146" status="PASS" starttime="20190121 13:01:47.947"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:48.698">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:48.700" status="PASS" starttime="20190121 13:01:48.149"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:48.762">${res_list} = [{'timestamp': '21-01-2019 - 13:01:47.752958', 'id': '0x1a', 'payload': '11223344556677BB'}, {'timestamp': '21-01-2019 - 13:01:47.941123', 'id': '0x1a', 'payload': '11223344556677BB'}, {'timestamp': '...</msg>
<status endtime="20190121 13:01:48.763" status="PASS" starttime="20190121 13:01:48.703"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:48.772">[{'timestamp': '21-01-2019 - 13:01:47.752958', 'id': '0x1a', 'payload': '11223344556677BB'}, {'timestamp': '21-01-2019 - 13:01:47.941123', 'id': '0x1a', 'payload': '11223344556677BB'}, {'timestamp': '21-01-2019 - 13:01:48.136785', 'id': '0x1a', 'payload': '11223344556677BB'}]</msg>
<status endtime="20190121 13:01:48.775" status="PASS" starttime="20190121 13:01:48.766"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:48.783">Length is 3</msg>
<msg level="INFO" timestamp="20190121 13:01:48.785">${MSG_LENGTH} = 3</msg>
<status endtime="20190121 13:01:48.786" status="PASS" starttime="20190121 13:01:48.778"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:01:48.801" status="PASS" starttime="20190121 13:01:48.795"></status>
</kw>
<status endtime="20190121 13:01:48.803" status="PASS" starttime="20190121 13:01:48.789"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:48.827">Length is 3</msg>
<msg level="INFO" timestamp="20190121 13:01:48.829">${count} = 3</msg>
<status endtime="20190121 13:01:48.830" status="PASS" starttime="20190121 13:01:48.822"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:01:48.840" status="PASS" starttime="20190121 13:01:48.833"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:48.849">${msgcount} = 0</msg>
<status endtime="20190121 13:01:48.850" status="PASS" starttime="20190121 13:01:48.843"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:01:47.752958', 'id': '0x1a', 'payload': '11223344556677BB'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:48.864">${payload} = 11223344556677BB</msg>
<status endtime="20190121 13:01:48.865" status="PASS" starttime="20190121 13:01:48.858"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:48.876">${count} = 1</msg>
<status endtime="20190121 13:01:48.877" status="PASS" starttime="20190121 13:01:48.868"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:48.887">${msgcount} = 1</msg>
<status endtime="20190121 13:01:48.888" status="PASS" starttime="20190121 13:01:48.880"></status>
</kw>
<status endtime="20190121 13:01:48.889" status="PASS" starttime="20190121 13:01:48.854"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:01:47.941123', 'id': '0x1a', 'payload': '11223344556677BB'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:48.900">${payload} = 11223344556677BB</msg>
<status endtime="20190121 13:01:48.902" status="PASS" starttime="20190121 13:01:48.893"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:48.916">${count} = 1</msg>
<status endtime="20190121 13:01:48.917" status="PASS" starttime="20190121 13:01:48.905"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:48.927">${msgcount} = 2</msg>
<status endtime="20190121 13:01:48.928" status="PASS" starttime="20190121 13:01:48.920"></status>
</kw>
<status endtime="20190121 13:01:48.929" status="PASS" starttime="20190121 13:01:48.890"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:01:48.136785', 'id': '0x1a', 'payload': '11223344556677BB'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:48.941">${payload} = 11223344556677BB</msg>
<status endtime="20190121 13:01:48.942" status="PASS" starttime="20190121 13:01:48.934"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:48.952">${count} = 1</msg>
<status endtime="20190121 13:01:48.953" status="PASS" starttime="20190121 13:01:48.945"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:48.963">${msgcount} = 3</msg>
<status endtime="20190121 13:01:48.965" status="PASS" starttime="20190121 13:01:48.956"></status>
</kw>
<status endtime="20190121 13:01:48.965" status="PASS" starttime="20190121 13:01:48.931"></status>
</kw>
<status endtime="20190121 13:01:48.966" status="PASS" starttime="20190121 13:01:48.851"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:01:48.975" status="PASS" starttime="20190121 13:01:48.969"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status endtime="20190121 13:01:48.985" status="PASS" starttime="20190121 13:01:48.978"></status>
</kw>
<status endtime="20190121 13:01:48.989" status="PASS" starttime="20190121 13:01:48.813"></status>
</kw>
<status endtime="20190121 13:01:48.990" status="PASS" starttime="20190121 13:01:48.806"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status endtime="20190121 13:01:48.993" status="PASS" starttime="20190121 13:01:43.866"></status>
</kw>
<status endtime="20190121 13:01:48.995" status="PASS" starttime="20190121 13:01:43.856"></status>
</kw>
<kw name="can_loopback_250k">
<doc>Can 3 loopback test with baudrate 250k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:49.017">Can channel loopback: can2 with bitrate: 250000</msg>
<status endtime="20190121 13:01:49.020" status="PASS" starttime="20190121 13:01:49.012"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190121 13:01:49.039" status="PASS" starttime="20190121 13:01:49.032"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:49.063">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:01:49.098">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:49.177">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:49.180">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:49.181" status="PASS" starttime="20190121 13:01:49.050"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:49.193" status="PASS" starttime="20190121 13:01:49.185"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:49.203">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190121 13:01:49.234">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:49.293">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:49.296">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:49.297" status="PASS" starttime="20190121 13:01:49.196"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:49.310" status="PASS" starttime="20190121 13:01:49.301"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:49.320">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:01:49.349">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:49.454">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:49.457">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:49.458" status="PASS" starttime="20190121 13:01:49.314"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:49.470" status="PASS" starttime="20190121 13:01:49.462"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190121 13:01:49.473" status="PASS" starttime="20190121 13:01:49.022"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status endtime="20190121 13:01:49.492" status="PASS" starttime="20190121 13:01:49.487"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:49.501">Sending command to DUT ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:01:49.540">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:49.542">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:49.543" status="PASS" starttime="20190121 13:01:49.495"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:50.059">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:50.061" status="PASS" starttime="20190121 13:01:49.546"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:50.071">Sending command to DUT ip link set can2 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190121 13:01:50.118">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:50.120">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:50.121" status="PASS" starttime="20190121 13:01:50.064"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:50.631">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:50.634" status="PASS" starttime="20190121 13:01:50.124"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:50.647">Sending command to DUT ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:01:50.719">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:50.722">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:50.723" status="PASS" starttime="20190121 13:01:50.637"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:51.254">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:51.256" status="PASS" starttime="20190121 13:01:50.748"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:51.258" status="PASS" starttime="20190121 13:01:49.476"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:51.267">Starting process:
ip -details link show can2</msg>
<msg level="INFO" timestamp="20190121 13:01:51.309">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:51.331">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:51.335">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:51.336" status="PASS" starttime="20190121 13:01:51.262"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status endtime="20190121 13:01:51.353" status="PASS" starttime="20190121 13:01:51.339"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:51.361">Sending command to DUT ip -details link show can2</msg>
<msg level="INFO" timestamp="20190121 13:01:51.413">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 250000 sample-point 0.875  	  tq 250 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg level="INFO" timestamp="20190121 13:01:51.416">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 250000 sample-poi...</msg>
<status endtime="20190121 13:01:51.417" status="PASS" starttime="20190121 13:01:51.355"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status endtime="20190121 13:01:51.433" status="PASS" starttime="20190121 13:01:51.420"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:51.440">Sending command to DUT pkill candump</msg>
<msg level="INFO" timestamp="20190121 13:01:51.544">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:51.546">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:51.547" status="PASS" starttime="20190121 13:01:51.437"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status endtime="20190121 13:01:51.574" status="PASS" starttime="20190121 13:01:51.551"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:52.581">Slept 1 second</msg>
<status endtime="20190121 13:01:52.583" status="PASS" starttime="20190121 13:01:51.577"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:52.605">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg level="INFO" timestamp="20190121 13:01:52.669">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:52.672">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:52.673" status="PASS" starttime="20190121 13:01:52.588"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status endtime="20190121 13:01:52.707" status="PASS" starttime="20190121 13:01:52.676"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:53.214">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:53.216" status="PASS" starttime="20190121 13:01:52.710"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:53.222">Sending command to DUT ps aux | grep candump</msg>
<msg level="INFO" timestamp="20190121 13:01:53.309">Returning data (540 root      0:00 candump -t a -D -B can2 can2   541 root      0:00 sh -c ps aux | grep candump   543 root      0:00 grep candump, )</msg>
<msg level="INFO" timestamp="20190121 13:01:53.312">${ret} = ('540 root      0:00 candump -t a -D -B can2 can2   541 root      0:00 sh -c ps aux | grep candump   543 root      0:00 grep candump', '')</msg>
<status endtime="20190121 13:01:53.313" status="PASS" starttime="20190121 13:01:53.219"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status endtime="20190121 13:01:53.329" status="PASS" starttime="20190121 13:01:53.316"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status endtime="20190121 13:01:53.551" status="PASS" starttime="20190121 13:01:53.335"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190121 13:01:53.613" status="PASS" starttime="20190121 13:01:53.563"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190121 13:01:53.688" status="PASS" starttime="20190121 13:01:53.616"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:54.208">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:54.210" status="PASS" starttime="20190121 13:01:53.696"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:54.228">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg level="INFO" timestamp="20190121 13:01:54.288">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:54.309">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:54.313">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:54.314" status="PASS" starttime="20190121 13:01:54.217"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:54.353" status="PASS" starttime="20190121 13:01:54.335"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:54.376">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190121 13:01:54.434">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:54.451">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:54.455">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:54.456" status="PASS" starttime="20190121 13:01:54.361"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:54.493" status="PASS" starttime="20190121 13:01:54.472"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:54.510">Sending command to DUT cat /root/candump.txt</msg>
<msg level="INFO" timestamp="20190121 13:01:54.574">Returning data ((1548075714.297820)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548075714.440071)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg level="INFO" timestamp="20190121 13:01:54.581">${ret} = ('(1548075714.297820)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548075714.440071)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status endtime="20190121 13:01:54.582" status="PASS" starttime="20190121 13:01:54.500"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status endtime="20190121 13:01:54.620" status="PASS" starttime="20190121 13:01:54.598"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:55.132">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:55.134" status="PASS" starttime="20190121 13:01:54.623"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.202">${res_list} = [{'timestamp': '21-01-2019 - 13:01:54.324121', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}, {'timestamp': '21-01-2019 - 13:01:54.342011', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}, {'t...</msg>
<status endtime="20190121 13:01:55.203" status="PASS" starttime="20190121 13:01:55.144"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:55.211">[{'timestamp': '21-01-2019 - 13:01:54.324121', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}, {'timestamp': '21-01-2019 - 13:01:54.342011', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}, {'timestamp': '21-01-2019 - 13:01:54.461863', 'id': '0x1a', 'payload': '11223344556677BB'}, {'timestamp': '21-01-2019 - 13:01:54.473184', 'id': '0x1a', 'payload': '11223344556677BB'}]</msg>
<status endtime="20190121 13:01:55.214" status="PASS" starttime="20190121 13:01:55.206"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.221">Length is 4</msg>
<msg level="INFO" timestamp="20190121 13:01:55.223">${MSG_LENGTH} = 4</msg>
<status endtime="20190121 13:01:55.224" status="PASS" starttime="20190121 13:01:55.217"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:01:55.238" status="PASS" starttime="20190121 13:01:55.233"></status>
</kw>
<status endtime="20190121 13:01:55.240" status="PASS" starttime="20190121 13:01:55.227"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.264">Length is 4</msg>
<msg level="INFO" timestamp="20190121 13:01:55.266">${count} = 4</msg>
<status endtime="20190121 13:01:55.266" status="PASS" starttime="20190121 13:01:55.259"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:01:55.275" status="PASS" starttime="20190121 13:01:55.269"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.284">${msgcount} = 0</msg>
<status endtime="20190121 13:01:55.285" status="PASS" starttime="20190121 13:01:55.278"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:01:54.324121', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.301">${payload} = FFEEEEDDFFAA1122</msg>
<status endtime="20190121 13:01:55.302" status="PASS" starttime="20190121 13:01:55.293"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.314">${count} = 1</msg>
<status endtime="20190121 13:01:55.314" status="PASS" starttime="20190121 13:01:55.306"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.323">${msgcount} = 1</msg>
<status endtime="20190121 13:01:55.324" status="PASS" starttime="20190121 13:01:55.317"></status>
</kw>
<status endtime="20190121 13:01:55.325" status="PASS" starttime="20190121 13:01:55.289"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:01:54.342011', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.335">${payload} = FFEEEEDDFFAA1122</msg>
<status endtime="20190121 13:01:55.336" status="PASS" starttime="20190121 13:01:55.330"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.347">${count} = 1</msg>
<status endtime="20190121 13:01:55.348" status="PASS" starttime="20190121 13:01:55.339"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.357">${msgcount} = 2</msg>
<status endtime="20190121 13:01:55.358" status="PASS" starttime="20190121 13:01:55.351"></status>
</kw>
<status endtime="20190121 13:01:55.359" status="PASS" starttime="20190121 13:01:55.327"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:01:54.461863', 'id': '0x1a', 'payload': '11223344556677BB'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.368">${payload} = 11223344556677BB</msg>
<status endtime="20190121 13:01:55.369" status="PASS" starttime="20190121 13:01:55.363"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.379">${count} = 0</msg>
<status endtime="20190121 13:01:55.380" status="PASS" starttime="20190121 13:01:55.372"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.389">${msgcount} = 2</msg>
<status endtime="20190121 13:01:55.390" status="PASS" starttime="20190121 13:01:55.383"></status>
</kw>
<status endtime="20190121 13:01:55.391" status="PASS" starttime="20190121 13:01:55.360"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:01:54.473184', 'id': '0x1a', 'payload': '11223344556677BB'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.401">${payload} = 11223344556677BB</msg>
<status endtime="20190121 13:01:55.402" status="PASS" starttime="20190121 13:01:55.395"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.412">${count} = 0</msg>
<status endtime="20190121 13:01:55.413" status="PASS" starttime="20190121 13:01:55.405"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.422">${msgcount} = 2</msg>
<status endtime="20190121 13:01:55.423" status="PASS" starttime="20190121 13:01:55.416"></status>
</kw>
<status endtime="20190121 13:01:55.424" status="PASS" starttime="20190121 13:01:55.392"></status>
</kw>
<status endtime="20190121 13:01:55.425" status="PASS" starttime="20190121 13:01:55.286"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:01:55.433" status="PASS" starttime="20190121 13:01:55.427"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status endtime="20190121 13:01:55.442" status="PASS" starttime="20190121 13:01:55.436"></status>
</kw>
<status endtime="20190121 13:01:55.446" status="PASS" starttime="20190121 13:01:55.251"></status>
</kw>
<status endtime="20190121 13:01:55.447" status="PASS" starttime="20190121 13:01:55.243"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.454">Sending command to DUT ps aux | grep candump</msg>
<msg level="INFO" timestamp="20190121 13:01:55.536">Returning data (540 root      0:00 candump -t a -D -B can2 can2   547 root      0:00 sh -c ps aux | grep candump   549 root      0:00 grep candump, )</msg>
<msg level="INFO" timestamp="20190121 13:01:55.538">${ret} = ('540 root      0:00 candump -t a -D -B can2 can2   547 root      0:00 sh -c ps aux | grep candump   549 root      0:00 grep candump', '')</msg>
<status endtime="20190121 13:01:55.539" status="PASS" starttime="20190121 13:01:55.450"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status endtime="20190121 13:01:55.575" status="PASS" starttime="20190121 13:01:55.558"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:55.582">Sending command to DUT pkill candump</msg>
<msg level="INFO" timestamp="20190121 13:01:55.688">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:55.691">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:55.691" status="PASS" starttime="20190121 13:01:55.578"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:56.705">Slept 1 second</msg>
<status endtime="20190121 13:01:56.707" status="PASS" starttime="20190121 13:01:55.694"></status>
</kw>
<status endtime="20190121 13:01:56.711" status="PASS" starttime="20190121 13:01:49.003"></status>
</kw>
<status endtime="20190121 13:01:56.713" status="PASS" starttime="20190121 13:01:48.997"></status>
</kw>
<kw name="cansend_125k">
<doc>Can 3 send message test with baudrate 125k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${125000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:56.737">Start test with can2 and bitrate: 125000</msg>
<status endtime="20190121 13:01:56.739" status="PASS" starttime="20190121 13:01:56.730"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190121 13:01:56.760" status="PASS" starttime="20190121 13:01:56.752"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:56.769">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:01:56.798">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:56.875">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:56.879">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:56.880" status="PASS" starttime="20190121 13:01:56.763"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:56.894" status="PASS" starttime="20190121 13:01:56.885"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:56.904">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg level="INFO" timestamp="20190121 13:01:56.933">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:56.991">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:56.994">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:56.995" status="PASS" starttime="20190121 13:01:56.897"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:57.008" status="PASS" starttime="20190121 13:01:56.999"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:57.018">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:01:57.047">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:01:57.153">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:01:57.156">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:01:57.157" status="PASS" starttime="20190121 13:01:57.011"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:01:57.169" status="PASS" starttime="20190121 13:01:57.161"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190121 13:01:57.172" status="PASS" starttime="20190121 13:01:56.742"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status endtime="20190121 13:01:57.195" status="PASS" starttime="20190121 13:01:57.185"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:57.205">Sending command to DUT ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:01:57.255">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:57.258">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:57.259" status="PASS" starttime="20190121 13:01:57.198"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:57.778">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:57.780" status="PASS" starttime="20190121 13:01:57.263"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:57.799">Sending command to DUT ip link set can2 type can bitrate 125000</msg>
<msg level="INFO" timestamp="20190121 13:01:57.859">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:57.862">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:57.863" status="PASS" starttime="20190121 13:01:57.783"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:58.383">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:58.385" status="PASS" starttime="20190121 13:01:57.877"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:01:58.395">Sending command to DUT ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:01:58.436">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:01:58.439">${ret} = ('', '')</msg>
<status endtime="20190121 13:01:58.440" status="PASS" starttime="20190121 13:01:58.388"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:58.953">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:58.955" status="PASS" starttime="20190121 13:01:58.443"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:01:58.959" status="PASS" starttime="20190121 13:01:57.175"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status endtime="20190121 13:01:59.123" status="PASS" starttime="20190121 13:01:58.963"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190121 13:01:59.175" status="PASS" starttime="20190121 13:01:59.126"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status endtime="20190121 13:01:59.185" status="PASS" starttime="20190121 13:01:59.179"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190121 13:01:59.253" status="PASS" starttime="20190121 13:01:59.189"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status endtime="20190121 13:01:59.278" status="PASS" starttime="20190121 13:01:59.260"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:59.805">Slept 500 milliseconds</msg>
<status endtime="20190121 13:01:59.807" status="PASS" starttime="20190121 13:01:59.286"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status endtime="20190121 13:01:59.839" status="PASS" starttime="20190121 13:01:59.814"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:59.860">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190121 13:01:59.906">Returning data (, )</msg>
<status endtime="20190121 13:01:59.917" status="PASS" starttime="20190121 13:01:59.842"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:01:59.950">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190121 13:02:00.010">Returning data (, )</msg>
<status endtime="20190121 13:02:00.019" status="PASS" starttime="20190121 13:01:59.933"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:00.050">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190121 13:02:00.139">Returning data (, )</msg>
<status endtime="20190121 13:02:00.150" status="PASS" starttime="20190121 13:02:00.022"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:00.672">Slept 500 milliseconds</msg>
<status endtime="20190121 13:02:00.674" status="PASS" starttime="20190121 13:02:00.153"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:00.735">${res_list} = [{'timestamp': '21-01-2019 - 13:01:59.913367', 'id': '0x1a', 'payload': '11223344556677BB'}, {'timestamp': '21-01-2019 - 13:02:00.024689', 'id': '0x1a', 'payload': '11223344556677BB'}, {'timestamp': '...</msg>
<status endtime="20190121 13:02:00.736" status="PASS" starttime="20190121 13:02:00.681"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:00.745">[{'timestamp': '21-01-2019 - 13:01:59.913367', 'id': '0x1a', 'payload': '11223344556677BB'}, {'timestamp': '21-01-2019 - 13:02:00.024689', 'id': '0x1a', 'payload': '11223344556677BB'}, {'timestamp': '21-01-2019 - 13:02:00.144975', 'id': '0x1a', 'payload': '11223344556677BB'}]</msg>
<status endtime="20190121 13:02:00.748" status="PASS" starttime="20190121 13:02:00.739"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:00.756">Length is 3</msg>
<msg level="INFO" timestamp="20190121 13:02:00.758">${MSG_LENGTH} = 3</msg>
<status endtime="20190121 13:02:00.759" status="PASS" starttime="20190121 13:02:00.751"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:02:00.777" status="PASS" starttime="20190121 13:02:00.770"></status>
</kw>
<status endtime="20190121 13:02:00.778" status="PASS" starttime="20190121 13:02:00.763"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:00.803">Length is 3</msg>
<msg level="INFO" timestamp="20190121 13:02:00.805">${count} = 3</msg>
<status endtime="20190121 13:02:00.806" status="PASS" starttime="20190121 13:02:00.798"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:02:00.815" status="PASS" starttime="20190121 13:02:00.809"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:00.824">${msgcount} = 0</msg>
<status endtime="20190121 13:02:00.825" status="PASS" starttime="20190121 13:02:00.818"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:01:59.913367', 'id': '0x1a', 'payload': '11223344556677BB'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:00.839">${payload} = 11223344556677BB</msg>
<status endtime="20190121 13:02:00.840" status="PASS" starttime="20190121 13:02:00.833"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:00.850">${count} = 1</msg>
<status endtime="20190121 13:02:00.851" status="PASS" starttime="20190121 13:02:00.843"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:00.861">${msgcount} = 1</msg>
<status endtime="20190121 13:02:00.862" status="PASS" starttime="20190121 13:02:00.854"></status>
</kw>
<status endtime="20190121 13:02:00.863" status="PASS" starttime="20190121 13:02:00.829"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:02:00.024689', 'id': '0x1a', 'payload': '11223344556677BB'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:00.878">${payload} = 11223344556677BB</msg>
<status endtime="20190121 13:02:00.879" status="PASS" starttime="20190121 13:02:00.869"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:00.890">${count} = 1</msg>
<status endtime="20190121 13:02:00.891" status="PASS" starttime="20190121 13:02:00.882"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:00.902">${msgcount} = 2</msg>
<status endtime="20190121 13:02:00.903" status="PASS" starttime="20190121 13:02:00.894"></status>
</kw>
<status endtime="20190121 13:02:00.903" status="PASS" starttime="20190121 13:02:00.865"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:02:00.144975', 'id': '0x1a', 'payload': '11223344556677BB'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:00.914">${payload} = 11223344556677BB</msg>
<status endtime="20190121 13:02:00.915" status="PASS" starttime="20190121 13:02:00.908"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:00.926">${count} = 1</msg>
<status endtime="20190121 13:02:00.926" status="PASS" starttime="20190121 13:02:00.918"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:00.937">${msgcount} = 3</msg>
<status endtime="20190121 13:02:00.938" status="PASS" starttime="20190121 13:02:00.929"></status>
</kw>
<status endtime="20190121 13:02:00.938" status="PASS" starttime="20190121 13:02:00.905"></status>
</kw>
<status endtime="20190121 13:02:00.939" status="PASS" starttime="20190121 13:02:00.826"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:02:00.949" status="PASS" starttime="20190121 13:02:00.942"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status endtime="20190121 13:02:00.959" status="PASS" starttime="20190121 13:02:00.951"></status>
</kw>
<status endtime="20190121 13:02:00.962" status="PASS" starttime="20190121 13:02:00.789"></status>
</kw>
<status endtime="20190121 13:02:00.963" status="PASS" starttime="20190121 13:02:00.781"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status endtime="20190121 13:02:00.966" status="PASS" starttime="20190121 13:01:56.721"></status>
</kw>
<status endtime="20190121 13:02:00.968" status="PASS" starttime="20190121 13:01:56.716"></status>
</kw>
<kw name="can_loopback_125k">
<doc>Can 3 loopback test with baudrate 125k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${125000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:00.989">Can channel loopback: can2 with bitrate: 125000</msg>
<status endtime="20190121 13:02:00.991" status="PASS" starttime="20190121 13:02:00.984"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190121 13:02:01.011" status="PASS" starttime="20190121 13:02:01.003"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:01.021">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:02:01.057">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:01.143">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:01.146">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:02:01.147" status="PASS" starttime="20190121 13:02:01.014"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:02:01.160" status="PASS" starttime="20190121 13:02:01.151"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:01.170">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg level="INFO" timestamp="20190121 13:02:01.199">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:01.257">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:01.260">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:02:01.261" status="PASS" starttime="20190121 13:02:01.163"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:02:01.274" status="PASS" starttime="20190121 13:02:01.265"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:01.283">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:02:01.314">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:01.416">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:01.419">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:02:01.420" status="PASS" starttime="20190121 13:02:01.277"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:02:01.433" status="PASS" starttime="20190121 13:02:01.424"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190121 13:02:01.435" status="PASS" starttime="20190121 13:02:00.994"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status endtime="20190121 13:02:01.455" status="PASS" starttime="20190121 13:02:01.448"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:01.464">Sending command to DUT ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:02:01.517">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:02:01.520">${ret} = ('', '')</msg>
<status endtime="20190121 13:02:01.521" status="PASS" starttime="20190121 13:02:01.458"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:02.036">Slept 500 milliseconds</msg>
<status endtime="20190121 13:02:02.038" status="PASS" starttime="20190121 13:02:01.524"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:02.047">Sending command to DUT ip link set can2 type can bitrate 125000</msg>
<msg level="INFO" timestamp="20190121 13:02:02.096">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:02:02.099">${ret} = ('', '')</msg>
<status endtime="20190121 13:02:02.100" status="PASS" starttime="20190121 13:02:02.041"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:02.615">Slept 500 milliseconds</msg>
<status endtime="20190121 13:02:02.617" status="PASS" starttime="20190121 13:02:02.103"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:02.625">Sending command to DUT ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:02:02.673">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:02:02.677">${ret} = ('', '')</msg>
<status endtime="20190121 13:02:02.678" status="PASS" starttime="20190121 13:02:02.620"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:03.193">Slept 500 milliseconds</msg>
<status endtime="20190121 13:02:03.195" status="PASS" starttime="20190121 13:02:02.681"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190121 13:02:03.197" status="PASS" starttime="20190121 13:02:01.438"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:03.206">Starting process:
ip -details link show can2</msg>
<msg level="INFO" timestamp="20190121 13:02:03.236">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:03.250">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:03.253">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:02:03.254" status="PASS" starttime="20190121 13:02:03.200"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status endtime="20190121 13:02:03.267" status="PASS" starttime="20190121 13:02:03.258"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:03.275">Sending command to DUT ip -details link show can2</msg>
<msg level="INFO" timestamp="20190121 13:02:03.328">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 125000 sample-point 0.875  	  tq 500 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg level="INFO" timestamp="20190121 13:02:03.330">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 125000 sample-poi...</msg>
<status endtime="20190121 13:02:03.331" status="PASS" starttime="20190121 13:02:03.270"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status endtime="20190121 13:02:03.348" status="PASS" starttime="20190121 13:02:03.334"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:03.355">Sending command to DUT pkill candump</msg>
<msg level="INFO" timestamp="20190121 13:02:03.463">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:02:03.466">${ret} = ('', '')</msg>
<status endtime="20190121 13:02:03.466" status="PASS" starttime="20190121 13:02:03.351"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status endtime="20190121 13:02:03.476" status="PASS" starttime="20190121 13:02:03.469"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:04.483">Slept 1 second</msg>
<status endtime="20190121 13:02:04.486" status="PASS" starttime="20190121 13:02:03.479"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:04.495">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg level="INFO" timestamp="20190121 13:02:04.538">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:02:04.540">${ret} = ('', '')</msg>
<status endtime="20190121 13:02:04.541" status="PASS" starttime="20190121 13:02:04.489"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status endtime="20190121 13:02:04.555" status="PASS" starttime="20190121 13:02:04.544"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:05.062">Slept 500 milliseconds</msg>
<status endtime="20190121 13:02:05.064" status="PASS" starttime="20190121 13:02:04.558"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:05.071">Sending command to DUT ps aux | grep candump</msg>
<msg level="INFO" timestamp="20190121 13:02:05.157">Returning data (563 root      0:00 candump -t a -D -B can2 can2   564 root      0:00 sh -c ps aux | grep candump   566 root      0:00 grep candump, )</msg>
<msg level="INFO" timestamp="20190121 13:02:05.167">${ret} = ('563 root      0:00 candump -t a -D -B can2 can2   564 root      0:00 sh -c ps aux | grep candump   566 root      0:00 grep candump', '')</msg>
<status endtime="20190121 13:02:05.168" status="PASS" starttime="20190121 13:02:05.067"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status endtime="20190121 13:02:05.181" status="PASS" starttime="20190121 13:02:05.172"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status endtime="20190121 13:02:05.345" status="PASS" starttime="20190121 13:02:05.184"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190121 13:02:05.394" status="PASS" starttime="20190121 13:02:05.349"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190121 13:02:05.445" status="PASS" starttime="20190121 13:02:05.398"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:05.956">Slept 500 milliseconds</msg>
<status endtime="20190121 13:02:05.958" status="PASS" starttime="20190121 13:02:05.453"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:05.989">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg level="INFO" timestamp="20190121 13:02:06.044">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:06.067">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:06.071">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:02:06.072" status="PASS" starttime="20190121 13:02:05.968"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status endtime="20190121 13:02:06.106" status="PASS" starttime="20190121 13:02:06.088"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:06.128">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190121 13:02:06.187">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:06.207">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:06.210">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:02:06.211" status="PASS" starttime="20190121 13:02:06.110"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status endtime="20190121 13:02:06.249" status="PASS" starttime="20190121 13:02:06.224"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:06.266">Sending command to DUT cat /root/candump.txt</msg>
<msg level="INFO" timestamp="20190121 13:02:06.330">Returning data ((1548075726.027224)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548075726.171621)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg level="INFO" timestamp="20190121 13:02:06.333">${ret} = ('(1548075726.027224)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548075726.171621)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status endtime="20190121 13:02:06.334" status="PASS" starttime="20190121 13:02:06.256"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status endtime="20190121 13:02:06.368" status="PASS" starttime="20190121 13:02:06.357"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:06.882">Slept 500 milliseconds</msg>
<status endtime="20190121 13:02:06.884" status="PASS" starttime="20190121 13:02:06.379"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:06.944">${res_list} = [{'timestamp': '21-01-2019 - 13:02:06.074315', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}, {'timestamp': '21-01-2019 - 13:02:06.085107', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}, {'t...</msg>
<status endtime="20190121 13:02:06.945" status="PASS" starttime="20190121 13:02:06.887"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:06.953">[{'timestamp': '21-01-2019 - 13:02:06.074315', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}, {'timestamp': '21-01-2019 - 13:02:06.085107', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}, {'timestamp': '21-01-2019 - 13:02:06.217914', 'id': '0x1a', 'payload': '11223344556677BB'}, {'timestamp': '21-01-2019 - 13:02:06.233193', 'id': '0x1a', 'payload': '11223344556677BB'}]</msg>
<status endtime="20190121 13:02:06.956" status="PASS" starttime="20190121 13:02:06.948"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:06.963">Length is 4</msg>
<msg level="INFO" timestamp="20190121 13:02:06.965">${MSG_LENGTH} = 4</msg>
<status endtime="20190121 13:02:06.966" status="PASS" starttime="20190121 13:02:06.959"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:02:06.981" status="PASS" starttime="20190121 13:02:06.975"></status>
</kw>
<status endtime="20190121 13:02:06.982" status="PASS" starttime="20190121 13:02:06.969"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:07.006">Length is 4</msg>
<msg level="INFO" timestamp="20190121 13:02:07.009">${count} = 4</msg>
<status endtime="20190121 13:02:07.009" status="PASS" starttime="20190121 13:02:07.002"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:02:07.019" status="PASS" starttime="20190121 13:02:07.013"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:07.027">${msgcount} = 0</msg>
<status endtime="20190121 13:02:07.028" status="PASS" starttime="20190121 13:02:07.022"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:02:06.074315', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:07.043">${payload} = FFEEEEDDFFAA1122</msg>
<status endtime="20190121 13:02:07.044" status="PASS" starttime="20190121 13:02:07.035"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:07.055">${count} = 1</msg>
<status endtime="20190121 13:02:07.056" status="PASS" starttime="20190121 13:02:07.047"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:07.065">${msgcount} = 1</msg>
<status endtime="20190121 13:02:07.066" status="PASS" starttime="20190121 13:02:07.059"></status>
</kw>
<status endtime="20190121 13:02:07.066" status="PASS" starttime="20190121 13:02:07.032"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:02:06.085107', 'id': '0x18ef7777', 'payload': 'FFEEEEDDFFAA1122'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:07.077">${payload} = FFEEEEDDFFAA1122</msg>
<status endtime="20190121 13:02:07.078" status="PASS" starttime="20190121 13:02:07.071"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:07.088">${count} = 1</msg>
<status endtime="20190121 13:02:07.089" status="PASS" starttime="20190121 13:02:07.081"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:07.098">${msgcount} = 2</msg>
<status endtime="20190121 13:02:07.099" status="PASS" starttime="20190121 13:02:07.092"></status>
</kw>
<status endtime="20190121 13:02:07.100" status="PASS" starttime="20190121 13:02:07.068"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:02:06.217914', 'id': '0x1a', 'payload': '11223344556677BB'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:07.110">${payload} = 11223344556677BB</msg>
<status endtime="20190121 13:02:07.110" status="PASS" starttime="20190121 13:02:07.104"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:07.121">${count} = 0</msg>
<status endtime="20190121 13:02:07.122" status="PASS" starttime="20190121 13:02:07.114"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:07.131">${msgcount} = 2</msg>
<status endtime="20190121 13:02:07.132" status="PASS" starttime="20190121 13:02:07.125"></status>
</kw>
<status endtime="20190121 13:02:07.133" status="PASS" starttime="20190121 13:02:07.101"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 13:02:06.233193', 'id': '0x1a', 'payload': '11223344556677BB'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:07.142">${payload} = 11223344556677BB</msg>
<status endtime="20190121 13:02:07.143" status="PASS" starttime="20190121 13:02:07.137"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:07.154">${count} = 0</msg>
<status endtime="20190121 13:02:07.154" status="PASS" starttime="20190121 13:02:07.146"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:07.164">${msgcount} = 2</msg>
<status endtime="20190121 13:02:07.164" status="PASS" starttime="20190121 13:02:07.157"></status>
</kw>
<status endtime="20190121 13:02:07.165" status="PASS" starttime="20190121 13:02:07.134"></status>
</kw>
<status endtime="20190121 13:02:07.166" status="PASS" starttime="20190121 13:02:07.029"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:02:07.174" status="PASS" starttime="20190121 13:02:07.169"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status endtime="20190121 13:02:07.183" status="PASS" starttime="20190121 13:02:07.177"></status>
</kw>
<status endtime="20190121 13:02:07.187" status="PASS" starttime="20190121 13:02:06.993"></status>
</kw>
<status endtime="20190121 13:02:07.188" status="PASS" starttime="20190121 13:02:06.985"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:07.195">Sending command to DUT ps aux | grep candump</msg>
<msg level="INFO" timestamp="20190121 13:02:07.284">Returning data (563 root      0:00 candump -t a -D -B can2 can2   568 root      0:00 sh -c ps aux | grep candump   570 root      0:00 grep candump, )</msg>
<msg level="INFO" timestamp="20190121 13:02:07.286">${ret} = ('563 root      0:00 candump -t a -D -B can2 can2   568 root      0:00 sh -c ps aux | grep candump   570 root      0:00 grep candump', '')</msg>
<status endtime="20190121 13:02:07.288" status="PASS" starttime="20190121 13:02:07.191"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status endtime="20190121 13:02:07.324" status="PASS" starttime="20190121 13:02:07.311"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:07.332">Sending command to DUT pkill candump</msg>
<msg level="INFO" timestamp="20190121 13:02:07.432">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:02:07.434">${ret} = ('', '')</msg>
<status endtime="20190121 13:02:07.435" status="PASS" starttime="20190121 13:02:07.328"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:08.448">Slept 1 second</msg>
<status endtime="20190121 13:02:08.451" status="PASS" starttime="20190121 13:02:07.438"></status>
</kw>
<status endtime="20190121 13:02:08.453" status="PASS" starttime="20190121 13:02:00.975"></status>
</kw>
<status endtime="20190121 13:02:08.456" status="PASS" starttime="20190121 13:02:00.970"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>pkill ping</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:08.470">Starting process:
pkill ping</msg>
<msg level="INFO" timestamp="20190121 13:02:08.500">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:08.535">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:08.538">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:02:08.539" status="PASS" starttime="20190121 13:02:08.466"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_Teardown_Action"</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:08.547">"Test_Teardown_Action"</msg>
<status endtime="20190121 13:02:08.549" status="PASS" starttime="20190121 13:02:08.543"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>systemctl poweroff</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:08.557">Sending command to DUT systemctl poweroff</msg>
<msg level="INFO" timestamp="20190121 13:02:08.675">Returning data (, )</msg>
<msg level="INFO" timestamp="20190121 13:02:08.678">${ret} = ('', '')</msg>
<status endtime="20190121 13:02:08.679" status="PASS" starttime="20190121 13:02:08.552"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${SHUTDOWN_TIME}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:23.703">Slept 15 seconds</msg>
<status endtime="20190121 13:02:23.705" status="PASS" starttime="20190121 13:02:08.682"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Close Ssh Connection">
<doc>Disconnect the ssh connection</doc>
<msg level="INFO" timestamp="20190121 13:02:23.711">Closing SSH connection to 192.168.1.101</msg>
<status endtime="20190121 13:02:23.714" status="PASS" starttime="20190121 13:02:23.708"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:02:23.766" status="PASS" starttime="20190121 13:02:23.717"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:02:23.817" status="PASS" starttime="20190121 13:02:23.769"></status>
</kw>
<status endtime="20190121 13:02:23.819" status="PASS" starttime="20190121 13:02:08.459"></status>
</kw>
<doc>Implements Test Task SKTB-34994</doc>
<tags>
<tag>CAN 3 test</tag>
</tags>
<status endtime="20190121 13:02:23.821" critical="yes" status="PASS" starttime="20190121 13:00:54.065"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg level="INFO" timestamp="20190121 13:02:25.306">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190121 13:02:25.371">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190121 13:02:25.383" status="PASS" starttime="20190121 13:02:23.864"></status>
</kw>
<status endtime="20190121 13:02:25.385" status="PASS" starttime="20190121 13:02:23.838"></status>
</kw>
<status endtime="20190121 13:02:25.387" status="PASS" starttime="20190121 13:02:23.832"></status>
</kw>
<doc>CAN 3 test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190121 13:02:25.387" status="PASS" starttime="20190121 13:00:51.301"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-41635.robot" id="s1-s7" name="SKTB-41635">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:26.047">Connecting to tnt-server localhost...</msg>
<status endtime="20190121 13:02:26.065" status="PASS" starttime="20190121 13:02:26.025"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:26.084">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190121 13:02:26.085">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190121 13:02:28.412">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190121 13:02:28.414" status="PASS" starttime="20190121 13:02:26.067"></status>
</kw>
<status endtime="20190121 13:02:28.417" status="PASS" starttime="20190121 13:02:25.996"></status>
</kw>
<test id="s1-s7-t1" name="can_diag_test">
<kw type="setup" name="Test_precondition">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_precondition"</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:28.480">"Test_precondition"</msg>
<status endtime="20190121 13:02:28.491" status="PASS" starttime="20190121 13:02:28.455"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:02:28.621" status="PASS" starttime="20190121 13:02:28.493"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:02:28.739" status="PASS" starttime="20190121 13:02:28.624"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:29.775">Slept 1 second</msg>
<status endtime="20190121 13:02:29.778" status="PASS" starttime="20190121 13:02:28.746"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:02:29.840" status="PASS" starttime="20190121 13:02:29.780"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:29.949">Slept 100 milliseconds</msg>
<status endtime="20190121 13:02:29.951" status="PASS" starttime="20190121 13:02:29.843"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:02:30.001" status="PASS" starttime="20190121 13:02:29.954"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:32.010">Slept 2 seconds</msg>
<status endtime="20190121 13:02:32.012" status="PASS" starttime="20190121 13:02:30.005"></status>
</kw>
<kw name="set_can_channels">
<doc>set bitrate for channels</doc>
<arguments>
<arg>${CAN_0}</arg>
<arg>${250000}</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:32.031">Starting process:
sudo ip link set can0 down</msg>
<msg level="INFO" timestamp="20190121 13:02:32.059">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:32.131">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:32.134">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:02:32.135" status="PASS" starttime="20190121 13:02:32.025"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:32.146">Starting process:
sudo ip link set can0 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190121 13:02:32.174">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:32.230">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:32.233">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:02:32.234" status="PASS" starttime="20190121 13:02:32.138"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:32.245">Starting process:
sudo ip link set can0 up</msg>
<msg level="INFO" timestamp="20190121 13:02:32.273">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:32.356">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:32.359">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:02:32.364" status="PASS" starttime="20190121 13:02:32.238"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status endtime="20190121 13:02:32.368" status="PASS" starttime="20190121 13:02:32.015"></status>
</kw>
<status endtime="20190121 13:02:32.371" status="PASS" starttime="20190121 13:02:28.449"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:32.390">Start test</msg>
<status endtime="20190121 13:02:32.393" status="PASS" starttime="20190121 13:02:32.384"></status>
</kw>
<kw name="Req_1003">
<doc>Extended session</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Extended session</arg>
</arguments>
<status endtime="20190121 13:02:32.407" status="PASS" starttime="20190121 13:02:32.402"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:32.421">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg level="INFO" timestamp="20190121 13:02:32.458">${candump_ID} = 144</msg>
<status endtime="20190121 13:02:32.459" status="PASS" starttime="20190121 13:02:32.410"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>10 03</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:32.486">Starting process:
echo 10 03 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg level="INFO" timestamp="20190121 13:02:32.514">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:32.527">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:32.530">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:02:32.531" status="PASS" starttime="20190121 13:02:32.478"></status>
</kw>
<status endtime="20190121 13:02:32.534" status="PASS" starttime="20190121 13:02:32.469"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:32.550">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:33.557">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190121 13:02:33.559">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190121 13:02:33.563">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:33.566">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190121 13:02:33.567" status="PASS" starttime="20190121 13:02:32.544"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:33.576">2 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:02:33.578">${temp} = [' (1548075752.524761)  can0  7F8   [8]  02 10 03 00 00 00 00 00', ' (1548075752.532370)  can0  7F7   [8]  06 50 03 00 14 00 C8 AA']</msg>
<status endtime="20190121 13:02:33.579" status="PASS" starttime="20190121 13:02:33.569"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:33.588">(1548075752.524761)  can0  7F8   [8]  02 10 03 00 00 00 00 00
 (1548075752.532370)  can0  7F7   [8]  06 50 03 00 14 00 C8 AA</msg>
<msg level="INFO" timestamp="20190121 13:02:33.592">${ret_list} = [{'timestamp': '1548075752.524761', 'id': '7F8', 'channel': 'can0', 'payload': '0210030000000000'}, {'timestamp': '1548075752.532370', 'id': '7F7', 'channel': 'can0', 'payload': '065003001400C8AA'}]</msg>
<status endtime="20190121 13:02:33.593" status="PASS" starttime="20190121 13:02:33.582"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190121 13:02:33.603" status="PASS" starttime="20190121 13:02:33.596"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:33.614">${data} = True</msg>
<status endtime="20190121 13:02:33.616" status="PASS" starttime="20190121 13:02:33.606"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:02:33.620">${res} = True</msg>
<status endtime="20190121 13:02:33.621" status="PASS" starttime="20190121 13:02:32.537"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:02:33.629" status="PASS" starttime="20190121 13:02:33.624"></status>
</kw>
<status endtime="20190121 13:02:33.632" status="PASS" starttime="20190121 13:02:32.395"></status>
</kw>
<kw name="Req_F100">
<doc>Active_DiagnosticInformation</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Active_DiagnosticInformation</arg>
</arguments>
<status endtime="20190121 13:02:33.649" status="PASS" starttime="20190121 13:02:33.640"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:33.661">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg level="INFO" timestamp="20190121 13:02:33.691">${candump_ID} = 146</msg>
<status endtime="20190121 13:02:33.692" status="PASS" starttime="20190121 13:02:33.652"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 00</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:33.720">Starting process:
echo 22 F1 00 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg level="INFO" timestamp="20190121 13:02:33.748">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:33.761">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:33.764">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:02:33.765" status="PASS" starttime="20190121 13:02:33.711"></status>
</kw>
<status endtime="20190121 13:02:33.768" status="PASS" starttime="20190121 13:02:33.703"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:33.785">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:34.796">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190121 13:02:34.798">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190121 13:02:34.815">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:34.825">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190121 13:02:34.826" status="PASS" starttime="20190121 13:02:33.778"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:34.838">3 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:02:34.840">${temp} = [' (1548075753.758737)  can0  7F8   [8]  03 22 F1 00 00 00 00 00', ' (1548075753.772347)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1548075753.782371)  can0  7F7   [8]  07 62 F1 00 00 01 01 03']</msg>
<status endtime="20190121 13:02:34.841" status="PASS" starttime="20190121 13:02:34.831"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:34.850">(1548075753.758737)  can0  7F8   [8]  03 22 F1 00 00 00 00 00
 (1548075753.772347)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1548075753.782371)  can0  7F7   [8]  07 62 F1 00 00 01 01 03</msg>
<msg level="INFO" timestamp="20190121 13:02:34.853">${ret_list} = [{'timestamp': '1548075753.758737', 'id': '7F8', 'channel': 'can0', 'payload': '0322F10000000000'}, {'timestamp': '1548075753.772347', 'id': '7F7', 'channel': 'can0', 'payload': '037F2278AAAAAAAA'}, {...</msg>
<status endtime="20190121 13:02:34.854" status="PASS" starttime="20190121 13:02:34.844"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190121 13:02:34.863" status="PASS" starttime="20190121 13:02:34.856"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:34.874">None</msg>
<msg level="INFO" timestamp="20190121 13:02:34.876">${data} = True</msg>
<status endtime="20190121 13:02:34.877" status="PASS" starttime="20190121 13:02:34.866"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:02:34.881">${res} = True</msg>
<status endtime="20190121 13:02:34.882" status="PASS" starttime="20190121 13:02:33.771"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:02:34.890" status="PASS" starttime="20190121 13:02:34.885"></status>
</kw>
<status endtime="20190121 13:02:34.893" status="PASS" starttime="20190121 13:02:33.634"></status>
</kw>
<kw name="Req_F10D">
<doc>DDS Package Release</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DDS Package Release</arg>
</arguments>
<status endtime="20190121 13:02:34.907" status="PASS" starttime="20190121 13:02:34.901"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:34.919">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg level="INFO" timestamp="20190121 13:02:34.949">${candump_ID} = 148</msg>
<status endtime="20190121 13:02:34.950" status="PASS" starttime="20190121 13:02:34.910"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 0D</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:34.979">Starting process:
echo 22 F1 0D | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg level="INFO" timestamp="20190121 13:02:35.008">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:35.022">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:35.026">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:02:35.027" status="PASS" starttime="20190121 13:02:34.970"></status>
</kw>
<status endtime="20190121 13:02:35.029" status="PASS" starttime="20190121 13:02:34.961"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:35.056">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:36.061">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190121 13:02:36.063">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190121 13:02:36.068">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:36.071">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190121 13:02:36.072" status="PASS" starttime="20190121 13:02:35.040"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:36.082">3 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:02:36.085">${temp} = [' (1548075755.019874)  can0  7F8   [8]  03 22 F1 0D 00 00 00 00', ' (1548075755.032402)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1548075755.042392)  can0  7F7   [8]  03 7F 22 22 AA AA AA AA']</msg>
<status endtime="20190121 13:02:36.086" status="PASS" starttime="20190121 13:02:36.075"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:36.095">(1548075755.019874)  can0  7F8   [8]  03 22 F1 0D 00 00 00 00
 (1548075755.032402)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1548075755.042392)  can0  7F7   [8]  03 7F 22 22 AA AA AA AA</msg>
<msg level="INFO" timestamp="20190121 13:02:36.098">${ret_list} = [{'timestamp': '1548075755.019874', 'id': '7F8', 'channel': 'can0', 'payload': '0322F10D00000000'}, {'timestamp': '1548075755.032402', 'id': '7F7', 'channel': 'can0', 'payload': '037F2278AAAAAAAA'}, {...</msg>
<status endtime="20190121 13:02:36.099" status="PASS" starttime="20190121 13:02:36.089"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190121 13:02:36.109" status="PASS" starttime="20190121 13:02:36.102"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:36.120">${data} = True</msg>
<status endtime="20190121 13:02:36.121" status="PASS" starttime="20190121 13:02:36.112"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:02:36.124">${res} = True</msg>
<status endtime="20190121 13:02:36.125" status="PASS" starttime="20190121 13:02:35.032"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:02:36.134" status="PASS" starttime="20190121 13:02:36.128"></status>
</kw>
<status endtime="20190121 13:02:36.137" status="PASS" starttime="20190121 13:02:34.895"></status>
</kw>
<kw name="Req_F103">
<doc>Vedoc Relevant Information</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Vedoc Relevant Information</arg>
</arguments>
<status endtime="20190121 13:02:36.150" status="PASS" starttime="20190121 13:02:36.145"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:36.166">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg level="INFO" timestamp="20190121 13:02:36.200">${candump_ID} = 150</msg>
<status endtime="20190121 13:02:36.201" status="PASS" starttime="20190121 13:02:36.154"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>isotprecv -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${isotprecv_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:36.218">Starting process:
isotprecv -s 7F8 -d 7F7 -p 00 can0</msg>
<msg level="INFO" timestamp="20190121 13:02:36.248">${isotprecv_ID} = 151</msg>
<status endtime="20190121 13:02:36.253" status="PASS" starttime="20190121 13:02:36.209"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 03</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:36.280">Starting process:
echo 22 F1 03 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg level="INFO" timestamp="20190121 13:02:36.309">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:36.323">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:36.327">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:02:36.328" status="PASS" starttime="20190121 13:02:36.268"></status>
</kw>
<status endtime="20190121 13:02:36.330" status="PASS" starttime="20190121 13:02:36.255"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:36.349">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:37.381">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190121 13:02:37.383">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190121 13:02:37.394">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:37.396">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190121 13:02:37.401" status="PASS" starttime="20190121 13:02:36.343"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:37.435">3 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:02:37.453">${temp} = [' (1548075756.320708)  can0  7F8   [8]  03 22 F1 03 00 00 00 00', ' (1548075756.332447)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1548075756.342447)  can0  7F7   [8]  10 1C 62 F1 03 4C 61 69']</msg>
<status endtime="20190121 13:02:37.454" status="PASS" starttime="20190121 13:02:37.404"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:37.475">(1548075756.320708)  can0  7F8   [8]  03 22 F1 03 00 00 00 00
 (1548075756.332447)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1548075756.342447)  can0  7F7   [8]  10 1C 62 F1 03 4C 61 69</msg>
<msg level="INFO" timestamp="20190121 13:02:37.477">${ret_list} = [{'timestamp': '1548075756.320708', 'id': '7F8', 'channel': 'can0', 'payload': '0322F10300000000'}, {'timestamp': '1548075756.332447', 'id': '7F7', 'channel': 'can0', 'payload': '037F2278AAAAAAAA'}, {...</msg>
<status endtime="20190121 13:02:37.478" status="PASS" starttime="20190121 13:02:37.457"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190121 13:02:37.511" status="PASS" starttime="20190121 13:02:37.481"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:37.535">${data} = True</msg>
<status endtime="20190121 13:02:37.535" status="PASS" starttime="20190121 13:02:37.514"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:02:37.539">${res} = True</msg>
<status endtime="20190121 13:02:37.540" status="PASS" starttime="20190121 13:02:36.335"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:02:37.561" status="PASS" starttime="20190121 13:02:37.543"></status>
</kw>
<status endtime="20190121 13:02:37.563" status="PASS" starttime="20190121 13:02:36.139"></status>
</kw>
<kw name="Req_F1A0">
<doc>VIN Current</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>VIN Current</arg>
</arguments>
<status endtime="20190121 13:02:37.599" status="PASS" starttime="20190121 13:02:37.584"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:37.623">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg level="INFO" timestamp="20190121 13:02:37.683">${candump_ID} = 153</msg>
<status endtime="20190121 13:02:37.685" status="PASS" starttime="20190121 13:02:37.602"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>isotprecv -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${isotprecv_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:37.718">Starting process:
isotprecv -s 7F8 -d 7F7 -p 00 can0</msg>
<msg level="INFO" timestamp="20190121 13:02:37.778">${isotprecv_ID} = 154</msg>
<status endtime="20190121 13:02:37.779" status="PASS" starttime="20190121 13:02:37.689"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 A0</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:37.823">Starting process:
echo 22 F1 A0 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg level="INFO" timestamp="20190121 13:02:37.877">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:37.897">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:37.900">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:02:37.901" status="PASS" starttime="20190121 13:02:37.802"></status>
</kw>
<status endtime="20190121 13:02:37.904" status="PASS" starttime="20190121 13:02:37.782"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:37.944">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:38.949">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190121 13:02:38.951">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190121 13:02:38.955">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:38.958">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190121 13:02:38.959" status="PASS" starttime="20190121 13:02:37.926"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:38.968">1 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:02:38.970">${temp} = [' (1548075757.889752)  can0  7F8   [8]  03 22 F1 A0 00 00 00 00']</msg>
<status endtime="20190121 13:02:38.971" status="PASS" starttime="20190121 13:02:38.962"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:38.980">(1548075757.889752)  can0  7F8   [8]  03 22 F1 A0 00 00 00 00</msg>
<msg level="INFO" timestamp="20190121 13:02:38.982">${ret_list} = [{'timestamp': '1548075757.889752', 'id': '7F8', 'channel': 'can0', 'payload': '0322F1A000000000'}]</msg>
<status endtime="20190121 13:02:38.983" status="PASS" starttime="20190121 13:02:38.974"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190121 13:02:38.992" status="PASS" starttime="20190121 13:02:38.986"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:39.004">${data} = True</msg>
<status endtime="20190121 13:02:39.004" status="PASS" starttime="20190121 13:02:38.995"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:02:39.008">${res} = True</msg>
<status endtime="20190121 13:02:39.009" status="PASS" starttime="20190121 13:02:37.919"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:02:39.017" status="PASS" starttime="20190121 13:02:39.012"></status>
</kw>
<status endtime="20190121 13:02:39.020" status="PASS" starttime="20190121 13:02:37.566"></status>
</kw>
<kw name="Req_F1A0_WRITE">
<doc>VIN Current</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>VIN Current write</arg>
</arguments>
<status endtime="20190121 13:02:39.034" status="PASS" starttime="20190121 13:02:39.028"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:39.050">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg level="INFO" timestamp="20190121 13:02:39.080">${candump_ID} = 156</msg>
<status endtime="20190121 13:02:39.085" status="PASS" starttime="20190121 13:02:39.037"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>2E F1 A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:39.109">Starting process:
echo 2E F1 A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg level="INFO" timestamp="20190121 13:02:39.139">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:39.173">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:39.178">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:02:39.179" status="PASS" starttime="20190121 13:02:39.101"></status>
</kw>
<status endtime="20190121 13:02:39.182" status="PASS" starttime="20190121 13:02:39.092"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:40.192">Slept 1 second</msg>
<status endtime="20190121 13:02:40.194" status="PASS" starttime="20190121 13:02:39.186"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:40.208">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:02:41.213">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190121 13:02:41.215">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190121 13:02:41.219">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:02:41.222">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190121 13:02:41.223" status="PASS" starttime="20190121 13:02:40.203"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:41.232">5 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:02:41.235">${temp} = [' (1548075759.149920)  can0  7F8   [8]  10 14 2E F1 A0 00 00 00', ' (1548075759.150514)  can0  7F7   [8]  30 08 0A AA AA AA AA AA', ' (1548075759.161054)  can0  7F8   [8]  21 00 00 00 00 00 00 00', '...</msg>
<status endtime="20190121 13:02:41.236" status="PASS" starttime="20190121 13:02:41.226"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:41.245">(1548075759.149920)  can0  7F8   [8]  10 14 2E F1 A0 00 00 00
 (1548075759.150514)  can0  7F7   [8]  30 08 0A AA AA AA AA AA
 (1548075759.161054)  can0  7F8   [8]  21 00 00 00 00 00 00 00
 (1548075759.171077)  can0  7F8   [8]  22 00 00 00 00 00 00 00
 (1548075759.176099)  can0  7F7   [8]  03 7F 2E 33 AA AA AA AA</msg>
<msg level="INFO" timestamp="20190121 13:02:41.247">${ret_list} = [{'timestamp': '1548075759.149920', 'id': '7F8', 'channel': 'can0', 'payload': '10142EF1A0000000'}, {'timestamp': '1548075759.150514', 'id': '7F7', 'channel': 'can0', 'payload': '30080AAAAAAAAAAA'}, {...</msg>
<status endtime="20190121 13:02:41.248" status="PASS" starttime="20190121 13:02:41.239"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190121 13:02:41.258" status="PASS" starttime="20190121 13:02:41.251"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:41.269">None</msg>
<msg level="INFO" timestamp="20190121 13:02:41.271">${data} = False</msg>
<status endtime="20190121 13:02:41.272" status="PASS" starttime="20190121 13:02:41.261"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:02:41.276">${res} = False</msg>
<status endtime="20190121 13:02:41.277" status="PASS" starttime="20190121 13:02:40.196"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:41.285">False</msg>
<status endtime="20190121 13:02:41.288" status="PASS" starttime="20190121 13:02:41.280"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be True">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:02:41.296" status="PASS" starttime="20190121 13:02:41.291"></status>
</kw>
<status endtime="20190121 13:02:41.299" status="PASS" starttime="20190121 13:02:39.022"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>pkill candump</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${rm_res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:41.313">Starting process:
pkill candump</msg>
<msg level="INFO" timestamp="20190121 13:02:41.343">${rm_res} = 158</msg>
<status endtime="20190121 13:02:41.348" status="PASS" starttime="20190121 13:02:41.309"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:02:41.425" status="PASS" starttime="20190121 13:02:41.352"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:02:41.482" status="PASS" starttime="20190121 13:02:41.433"></status>
</kw>
<status endtime="20190121 13:02:41.486" status="PASS" starttime="20190121 13:02:41.302"></status>
</kw>
<doc>Can diagnose test</doc>
<tags>
<tag>CAN 1 diagnose test</tag>
</tags>
<timeout value="50 seconds"></timeout>
<status endtime="20190121 13:02:41.487" critical="yes" status="PASS" starttime="20190121 13:02:28.429"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg level="INFO" timestamp="20190121 13:02:42.979">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190121 13:02:43.040">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190121 13:02:43.042" status="PASS" starttime="20190121 13:02:41.528"></status>
</kw>
<status endtime="20190121 13:02:43.054" status="PASS" starttime="20190121 13:02:41.504"></status>
</kw>
<status endtime="20190121 13:02:43.088" status="PASS" starttime="20190121 13:02:41.498"></status>
</kw>
<doc>CAN 1 diagnose test</doc>
<status endtime="20190121 13:02:43.089" status="PASS" starttime="20190121 13:02:25.520"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-46886.robot" id="s1-s8" name="SKTB-46886">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:43.749">Connecting to tnt-server localhost...</msg>
<status endtime="20190121 13:02:43.768" status="PASS" starttime="20190121 13:02:43.738"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:43.785">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190121 13:02:43.787">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190121 13:02:45.955">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190121 13:02:45.965" status="PASS" starttime="20190121 13:02:43.771"></status>
</kw>
<status endtime="20190121 13:02:45.967" status="PASS" starttime="20190121 13:02:43.733"></status>
</kw>
<test id="s1-s8-t1" name="SKTB-GPIO FBUS test">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:02:46.109" status="PASS" starttime="20190121 13:02:46.016"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:02:46.190" status="PASS" starttime="20190121 13:02:46.112"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:02:46.281" status="PASS" starttime="20190121 13:02:46.193"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:48.297">Slept 2 seconds</msg>
<status endtime="20190121 13:02:48.299" status="PASS" starttime="20190121 13:02:46.292"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:02:48.349" status="PASS" starttime="20190121 13:02:48.303"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:02:48.403" status="PASS" starttime="20190121 13:02:48.353"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:02:48.451" status="PASS" starttime="20190121 13:02:48.407"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190121 13:02:48.503" status="PASS" starttime="20190121 13:02:48.455"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190121 13:02:48.553" status="PASS" starttime="20190121 13:02:48.506"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190121 13:02:48.631" status="PASS" starttime="20190121 13:02:48.556"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:50.647">Slept 2 seconds</msg>
<status endtime="20190121 13:02:50.649" status="PASS" starttime="20190121 13:02:48.638"></status>
</kw>
<status endtime="20190121 13:02:50.652" status="PASS" starttime="20190121 13:02:46.000"></status>
</kw>
<kw name="Test_GPIO_00">
<doc>Test HI SIDE SWITCH 01</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 01</arg>
</arguments>
<status endtime="20190121 13:02:50.666" status="PASS" starttime="20190121 13:02:50.661"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_1}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:50.874">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 00 01 43 3D F5</msg>
<status endtime="20190121 13:02:50.874" status="PASS" starttime="20190121 13:02:50.669"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:50.882">1E 14 54 8E 00 08 01 0D 77 29 00 00 01 43 3D F5</msg>
<status endtime="20190121 13:02:50.884" status="PASS" starttime="20190121 13:02:50.877"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_1}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:51.101">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 01 01 44 3D FE</msg>
<status endtime="20190121 13:02:51.103" status="PASS" starttime="20190121 13:02:50.887"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:51.110">1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 01 01 44 3D FE</msg>
<status endtime="20190121 13:02:51.112" status="PASS" starttime="20190121 13:02:51.105"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_1} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:02:51.123" status="PASS" starttime="20190121 13:02:51.115"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_1}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:51.352">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 00 01 45 3D F3</msg>
<status endtime="20190121 13:02:51.354" status="PASS" starttime="20190121 13:02:51.126"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:51.361">1E 14 54 8E 00 08 01 0D 77 29 00 00 01 45 3D F3</msg>
<status endtime="20190121 13:02:51.364" status="PASS" starttime="20190121 13:02:51.357"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_1}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:51.593">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 00 01 46 3D FD</msg>
<status endtime="20190121 13:02:51.594" status="PASS" starttime="20190121 13:02:51.367"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:51.608">1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 00 01 46 3D FD</msg>
<status endtime="20190121 13:02:51.611" status="PASS" starttime="20190121 13:02:51.601"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_1} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:02:51.622" status="PASS" starttime="20190121 13:02:51.614"></status>
</kw>
<status endtime="20190121 13:02:51.624" status="PASS" starttime="20190121 13:02:50.654"></status>
</kw>
<kw name="Test_GPIO_01">
<doc>Test HI SIDE SWITCH 02</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 02</arg>
</arguments>
<status endtime="20190121 13:02:51.637" status="PASS" starttime="20190121 13:02:51.633"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_2}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:51.868">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 01 01 41 3D F6</msg>
<status endtime="20190121 13:02:51.869" status="PASS" starttime="20190121 13:02:51.640"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:51.877">1E 14 54 8E 00 08 01 0D 77 29 00 01 01 41 3D F6</msg>
<status endtime="20190121 13:02:51.880" status="PASS" starttime="20190121 13:02:51.872"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_2}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:52.102">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 01 01 42 3D F9</msg>
<status endtime="20190121 13:02:52.103" status="PASS" starttime="20190121 13:02:51.883"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:52.119">1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 01 01 42 3D F9</msg>
<status endtime="20190121 13:02:52.125" status="PASS" starttime="20190121 13:02:52.110"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_2} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:02:52.136" status="PASS" starttime="20190121 13:02:52.128"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_2}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:52.362">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 01 01 43 3D F4</msg>
<status endtime="20190121 13:02:52.363" status="PASS" starttime="20190121 13:02:52.139"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:52.373">1E 14 54 8E 00 08 01 0D 77 29 00 01 01 43 3D F4</msg>
<status endtime="20190121 13:02:52.376" status="PASS" starttime="20190121 13:02:52.369"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_2}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:52.593">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 00 01 44 3D FE</msg>
<status endtime="20190121 13:02:52.594" status="PASS" starttime="20190121 13:02:52.379"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:52.610">1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 00 01 44 3D FE</msg>
<status endtime="20190121 13:02:52.612" status="PASS" starttime="20190121 13:02:52.601"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_2} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:02:52.635" status="PASS" starttime="20190121 13:02:52.615"></status>
</kw>
<status endtime="20190121 13:02:52.637" status="PASS" starttime="20190121 13:02:51.626"></status>
</kw>
<kw name="Test_GPIO_02">
<doc>Test HI SIDE SWITCH 03</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 03</arg>
</arguments>
<status endtime="20190121 13:02:52.650" status="PASS" starttime="20190121 13:02:52.646"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_3}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:52.895">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 02 01 47 3D F3</msg>
<status endtime="20190121 13:02:52.897" status="PASS" starttime="20190121 13:02:52.653"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:52.904">1E 14 54 8E 00 08 01 0D 77 29 00 02 01 47 3D F3</msg>
<status endtime="20190121 13:02:52.907" status="PASS" starttime="20190121 13:02:52.900"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_3}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:53.150">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 01 01 40 3D F8</msg>
<status endtime="20190121 13:02:53.151" status="PASS" starttime="20190121 13:02:52.910"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:53.167">1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 01 01 40 3D F8</msg>
<status endtime="20190121 13:02:53.169" status="PASS" starttime="20190121 13:02:53.158"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_3} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:02:53.181" status="PASS" starttime="20190121 13:02:53.172"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_3}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:53.404">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 02 01 41 3D F5</msg>
<status endtime="20190121 13:02:53.405" status="PASS" starttime="20190121 13:02:53.184"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:53.413">1E 14 54 8E 00 08 01 0D 77 29 00 02 01 41 3D F5</msg>
<status endtime="20190121 13:02:53.415" status="PASS" starttime="20190121 13:02:53.408"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_3}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:53.633">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 00 01 42 3D FB</msg>
<status endtime="20190121 13:02:53.634" status="PASS" starttime="20190121 13:02:53.418"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:53.650">1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 00 01 42 3D FB</msg>
<status endtime="20190121 13:02:53.653" status="PASS" starttime="20190121 13:02:53.641"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_3} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:02:53.675" status="PASS" starttime="20190121 13:02:53.660"></status>
</kw>
<status endtime="20190121 13:02:53.678" status="PASS" starttime="20190121 13:02:52.639"></status>
</kw>
<kw name="Test_GPIO_03">
<doc>Test HI SIDE SWITCH 03</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 03</arg>
</arguments>
<status endtime="20190121 13:02:53.691" status="PASS" starttime="20190121 13:02:53.686"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_4}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:53.915">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 03 01 43 3D F6</msg>
<status endtime="20190121 13:02:53.917" status="PASS" starttime="20190121 13:02:53.695"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:53.924">1E 14 54 8E 00 08 01 0D 77 29 00 03 01 43 3D F6</msg>
<status endtime="20190121 13:02:53.927" status="PASS" starttime="20190121 13:02:53.920"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_4}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:54.146">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 01 01 44 3D FD</msg>
<status endtime="20190121 13:02:54.147" status="PASS" starttime="20190121 13:02:53.930"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:54.167">1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 01 01 44 3D FD</msg>
<status endtime="20190121 13:02:54.174" status="PASS" starttime="20190121 13:02:54.159"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_4} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:02:54.195" status="PASS" starttime="20190121 13:02:54.177"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_4}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:54.421">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 03 01 45 3D F0</msg>
<status endtime="20190121 13:02:54.422" status="PASS" starttime="20190121 13:02:54.198"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:54.430">1E 14 54 8E 00 08 01 0D 77 29 00 03 01 45 3D F0</msg>
<status endtime="20190121 13:02:54.435" status="PASS" starttime="20190121 13:02:54.426"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_4}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:02:54.649">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 00 01 46 3D FE</msg>
<status endtime="20190121 13:02:54.650" status="PASS" starttime="20190121 13:02:54.438"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:54.666">1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 00 01 46 3D FE</msg>
<status endtime="20190121 13:02:54.673" status="PASS" starttime="20190121 13:02:54.657"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_4} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:02:54.694" status="PASS" starttime="20190121 13:02:54.676"></status>
</kw>
<status endtime="20190121 13:02:54.697" status="PASS" starttime="20190121 13:02:53.680"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:02:54.862" status="PASS" starttime="20190121 13:02:54.717"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:02:54.946" status="PASS" starttime="20190121 13:02:54.865"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:02:55.030" status="PASS" starttime="20190121 13:02:54.949"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:57.057">Slept 2 seconds</msg>
<status endtime="20190121 13:02:57.059" status="PASS" starttime="20190121 13:02:55.034"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190121 13:02:57.284" status="PASS" starttime="20190121 13:02:57.066"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:02:57.507" status="PASS" starttime="20190121 13:02:57.298"></status>
</kw>
<status endtime="20190121 13:02:57.514" status="PASS" starttime="20190121 13:02:54.701"></status>
</kw>
<doc>Implements Test Task SKTB-46886</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status endtime="20190121 13:02:57.515" critical="yes" status="PASS" starttime="20190121 13:02:45.970"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg level="INFO" timestamp="20190121 13:02:59.244">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190121 13:02:59.267">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190121 13:02:59.269" status="PASS" starttime="20190121 13:02:57.757"></status>
</kw>
<status endtime="20190121 13:02:59.270" status="PASS" starttime="20190121 13:02:57.584"></status>
</kw>
<status endtime="20190121 13:02:59.293" status="PASS" starttime="20190121 13:02:57.574"></status>
</kw>
<doc>Chorus Fbus GPIO Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190121 13:02:59.294" status="PASS" starttime="20190121 13:02:43.236"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-47669.robot" id="s1-s9" name="SKTB-47669">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:59.881">Connecting to tnt-server localhost...</msg>
<status endtime="20190121 13:02:59.891" status="PASS" starttime="20190121 13:02:59.861"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:02:59.900">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190121 13:02:59.929">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190121 13:03:02.222">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190121 13:03:02.224" status="PASS" starttime="20190121 13:02:59.894"></status>
</kw>
<status endtime="20190121 13:03:02.226" status="PASS" starttime="20190121 13:02:59.853"></status>
</kw>
<test id="s1-s9-t1" name="SKTB-47669">
<kw type="setup" name="Test_precondition">
<doc>Precondition, Switch power on and set Serial configuration</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Precondition, Switch power on and set Serial configuration</arg>
</arguments>
<status endtime="20190121 13:03:02.313" status="PASS" starttime="20190121 13:03:02.287"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:03:02.434" status="PASS" starttime="20190121 13:03:02.316"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:03:02.554" status="PASS" starttime="20190121 13:03:02.437"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:03:02.696" status="PASS" starttime="20190121 13:03:02.557"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${912600}</arg>
</arguments>
<status endtime="20190121 13:03:02.790" status="PASS" starttime="20190121 13:03:02.699"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190121 13:03:02.911" status="PASS" starttime="20190121 13:03:02.793"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190121 13:03:03.011" status="PASS" starttime="20190121 13:03:02.916"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:05.035">Slept 2 seconds</msg>
<status endtime="20190121 13:03:05.037" status="PASS" starttime="20190121 13:03:03.014"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:03:05.087" status="PASS" starttime="20190121 13:03:05.040"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:03:05.137" status="PASS" starttime="20190121 13:03:05.090"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${4}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:09.145">Slept 4 seconds</msg>
<status endtime="20190121 13:03:09.147" status="PASS" starttime="20190121 13:03:05.140"></status>
</kw>
<status endtime="20190121 13:03:09.149" status="PASS" starttime="20190121 13:03:02.267"></status>
</kw>
<kw name="cansend_500k">
<doc>Trigger to send can message on can with bitrate 500000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 500000</arg>
</arguments>
<status endtime="20190121 13:03:09.163" status="PASS" starttime="20190121 13:03:09.159"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${500000}</arg>
<arg>${500_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190121 13:03:09.192" status="PASS" starttime="20190121 13:03:09.185"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:09.202">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:03:09.231">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:09.304">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:09.307">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:09.308" status="PASS" starttime="20190121 13:03:09.196"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:09.321" status="PASS" starttime="20190121 13:03:09.312"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:09.331">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg level="INFO" timestamp="20190121 13:03:09.358">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:09.415">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:09.418">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:09.419" status="PASS" starttime="20190121 13:03:09.324"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:09.447" status="PASS" starttime="20190121 13:03:09.423"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:09.457">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:03:09.485">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:09.589">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:09.592">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:09.593" status="PASS" starttime="20190121 13:03:09.450"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:09.626" status="PASS" starttime="20190121 13:03:09.597"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190121 13:03:09.635" status="PASS" starttime="20190121 13:03:09.175"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:09.651">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg level="INFO" timestamp="20190121 13:03:09.687">${candump_ID} = 162</msg>
<status endtime="20190121 13:03:09.692" status="PASS" starttime="20190121 13:03:09.639"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status endtime="20190121 13:03:09.715" status="PASS" starttime="20190121 13:03:09.710"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:09.727">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 02</msg>
<status endtime="20190121 13:03:09.728" status="PASS" starttime="20190121 13:03:09.719"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:09.736" status="PASS" starttime="20190121 13:03:09.731"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:09.959">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status endtime="20190121 13:03:09.960" status="PASS" starttime="20190121 13:03:09.739"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:09.967">1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status endtime="20190121 13:03:09.970" status="PASS" starttime="20190121 13:03:09.963"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:09.981" status="PASS" starttime="20190121 13:03:09.973"></status>
</kw>
<status endtime="20190121 13:03:09.983" status="PASS" starttime="20190121 13:03:09.695"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status endtime="20190121 13:03:09.999" status="PASS" starttime="20190121 13:03:09.994"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:10.009">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status endtime="20190121 13:03:10.010" status="PASS" starttime="20190121 13:03:10.002"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:10.019" status="PASS" starttime="20190121 13:03:10.013"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:10.241">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status endtime="20190121 13:03:10.242" status="PASS" starttime="20190121 13:03:10.022"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:10.250">1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status endtime="20190121 13:03:10.253" status="PASS" starttime="20190121 13:03:10.246"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:10.264" status="PASS" starttime="20190121 13:03:10.256"></status>
</kw>
<status endtime="20190121 13:03:10.267" status="PASS" starttime="20190121 13:03:09.985"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status endtime="20190121 13:03:10.275" status="PASS" starttime="20190121 13:03:10.270"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:10.309">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status endtime="20190121 13:03:10.310" status="PASS" starttime="20190121 13:03:10.286"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:10.328" status="PASS" starttime="20190121 13:03:10.318"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:10.522">${info} = </msg>
<status endtime="20190121 13:03:10.523" status="PASS" starttime="20190121 13:03:10.331"></status>
</kw>
<status endtime="20190121 13:03:10.526" status="PASS" starttime="20190121 13:03:10.277"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:10.539">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:11.545">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190121 13:03:11.546">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190121 13:03:11.551">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:11.553">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190121 13:03:11.554" status="PASS" starttime="20190121 13:03:10.535"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:11.562">1 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:03:11.564">${temp} = [' (1548075790.385111)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status endtime="20190121 13:03:11.565" status="PASS" starttime="20190121 13:03:11.557"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:11.573">(1548075790.385111)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg level="INFO" timestamp="20190121 13:03:11.575">${ret_list} = [{'timestamp': '1548075790.385111', 'id': '1FF', 'channel': 'can2', 'payload': '1122334455667788'}]</msg>
<status endtime="20190121 13:03:11.575" status="PASS" starttime="20190121 13:03:11.568"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190121 13:03:11.584" status="PASS" starttime="20190121 13:03:11.578"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:11.589">${resp_list} = [{'timestamp': '1548075790.385111', 'id': '1FF', 'channel': 'can2', 'payload': '1122334455667788'}]</msg>
<status endtime="20190121 13:03:11.590" status="PASS" starttime="20190121 13:03:10.528"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:11.603">${res_dict} = {'status': True, 'count': 1}</msg>
<status endtime="20190121 13:03:11.604" status="PASS" starttime="20190121 13:03:11.593"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190121 13:03:11.613" status="PASS" starttime="20190121 13:03:11.607"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:11.648">${value} = True</msg>
<status endtime="20190121 13:03:11.649" status="PASS" starttime="20190121 13:03:11.616"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:03:11.656" status="PASS" starttime="20190121 13:03:11.652"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:11.660">${resp} = True</msg>
<status endtime="20190121 13:03:11.661" status="PASS" starttime="20190121 13:03:09.165"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:03:11.668" status="PASS" starttime="20190121 13:03:11.664"></status>
</kw>
<status endtime="20190121 13:03:11.671" status="PASS" starttime="20190121 13:03:09.152"></status>
</kw>
<kw name="cansend_500k_ex">
<doc>Trigger to send can message on can with 29 bit ID and bitrate 500000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 bit ID and bitrate 500000</arg>
</arguments>
<status endtime="20190121 13:03:11.684" status="PASS" starttime="20190121 13:03:11.679"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${500000}</arg>
<arg>${500_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190121 13:03:11.713" status="PASS" starttime="20190121 13:03:11.706"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:11.723">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:03:11.750">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:11.821">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:11.824">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:11.825" status="PASS" starttime="20190121 13:03:11.716"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:11.838" status="PASS" starttime="20190121 13:03:11.829"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:11.848">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg level="INFO" timestamp="20190121 13:03:11.876">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:11.933">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:11.936">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:11.938" status="PASS" starttime="20190121 13:03:11.841"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:11.950" status="PASS" starttime="20190121 13:03:11.941"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:11.960">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:03:11.987">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:12.082">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:12.087">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:12.088" status="PASS" starttime="20190121 13:03:11.953"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:12.105" status="PASS" starttime="20190121 13:03:12.094"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190121 13:03:12.107" status="PASS" starttime="20190121 13:03:11.696"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:12.118">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg level="INFO" timestamp="20190121 13:03:12.149">${candump_ID} = 166</msg>
<status endtime="20190121 13:03:12.150" status="PASS" starttime="20190121 13:03:12.111"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status endtime="20190121 13:03:12.182" status="PASS" starttime="20190121 13:03:12.177"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:12.192">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 02</msg>
<status endtime="20190121 13:03:12.193" status="PASS" starttime="20190121 13:03:12.185"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:12.201" status="PASS" starttime="20190121 13:03:12.196"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:12.427">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 41 E1 C7</msg>
<status endtime="20190121 13:03:12.429" status="PASS" starttime="20190121 13:03:12.205"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:12.436">1E 10 54 93 00 08 00 0E AA 03 00 00 01 41 E1 C7</msg>
<status endtime="20190121 13:03:12.439" status="PASS" starttime="20190121 13:03:12.432"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:12.457" status="PASS" starttime="20190121 13:03:12.446"></status>
</kw>
<status endtime="20190121 13:03:12.460" status="PASS" starttime="20190121 13:03:12.167"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status endtime="20190121 13:03:12.478" status="PASS" starttime="20190121 13:03:12.474"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:12.509">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status endtime="20190121 13:03:12.510" status="PASS" starttime="20190121 13:03:12.482"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:12.533" status="PASS" starttime="20190121 13:03:12.513"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:12.900">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status endtime="20190121 13:03:12.905" status="PASS" starttime="20190121 13:03:12.536"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:12.937">1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status endtime="20190121 13:03:12.957" status="PASS" starttime="20190121 13:03:12.928"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:12.993" status="PASS" starttime="20190121 13:03:12.961"></status>
</kw>
<status endtime="20190121 13:03:12.995" status="PASS" starttime="20190121 13:03:12.463"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status endtime="20190121 13:03:13.029" status="PASS" starttime="20190121 13:03:13.010"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:13.089">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190121 13:03:13.089" status="PASS" starttime="20190121 13:03:13.065"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:13.108" status="PASS" starttime="20190121 13:03:13.094"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:13.363">${info} = </msg>
<status endtime="20190121 13:03:13.364" status="PASS" starttime="20190121 13:03:13.111"></status>
</kw>
<status endtime="20190121 13:03:13.367" status="PASS" starttime="20190121 13:03:13.031"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:13.381">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:14.387">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190121 13:03:14.389">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190121 13:03:14.393">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:14.395">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190121 13:03:14.396" status="PASS" starttime="20190121 13:03:13.377"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:14.405">1 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:03:14.407">${temp} = [' (1548075793.216628)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status endtime="20190121 13:03:14.407" status="PASS" starttime="20190121 13:03:14.399"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:14.415">(1548075793.216628)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg level="INFO" timestamp="20190121 13:03:14.417">${ret_list} = [{'timestamp': '1548075793.216628', 'id': '18EF1B05', 'channel': 'can2', 'payload': '1122334455667788'}]</msg>
<status endtime="20190121 13:03:14.418" status="PASS" starttime="20190121 13:03:14.411"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190121 13:03:14.427" status="PASS" starttime="20190121 13:03:14.421"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:14.431">${resp_list} = [{'timestamp': '1548075793.216628', 'id': '18EF1B05', 'channel': 'can2', 'payload': '1122334455667788'}]</msg>
<status endtime="20190121 13:03:14.431" status="PASS" starttime="20190121 13:03:13.370"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:14.442">${res_dict} = {'status': True, 'count': 1}</msg>
<status endtime="20190121 13:03:14.449" status="PASS" starttime="20190121 13:03:14.435"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190121 13:03:14.459" status="PASS" starttime="20190121 13:03:14.452"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:14.494">${value} = True</msg>
<status endtime="20190121 13:03:14.495" status="PASS" starttime="20190121 13:03:14.462"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:03:14.502" status="PASS" starttime="20190121 13:03:14.498"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:14.506">${resp} = True</msg>
<status endtime="20190121 13:03:14.507" status="PASS" starttime="20190121 13:03:11.686"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:03:14.514" status="PASS" starttime="20190121 13:03:14.510"></status>
</kw>
<status endtime="20190121 13:03:14.516" status="PASS" starttime="20190121 13:03:11.673"></status>
</kw>
<kw name="cansend_250k">
<doc>Trigger to send can message on can with bitrate 250000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 250000</arg>
</arguments>
<status endtime="20190121 13:03:14.531" status="PASS" starttime="20190121 13:03:14.526"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${250000}</arg>
<arg>${250_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190121 13:03:14.560" status="PASS" starttime="20190121 13:03:14.553"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:14.570">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:03:14.599">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:14.671">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:14.674">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:14.675" status="PASS" starttime="20190121 13:03:14.564"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:14.687" status="PASS" starttime="20190121 13:03:14.679"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:14.697">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190121 13:03:14.725">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:14.783">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:14.786">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:14.787" status="PASS" starttime="20190121 13:03:14.690"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:14.805" status="PASS" starttime="20190121 13:03:14.791"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:14.814">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:03:14.843">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:14.938">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:14.945">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:14.946" status="PASS" starttime="20190121 13:03:14.808"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:14.965" status="PASS" starttime="20190121 13:03:14.954"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190121 13:03:14.967" status="PASS" starttime="20190121 13:03:14.543"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:14.978">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg level="INFO" timestamp="20190121 13:03:15.015">${candump_ID} = 170</msg>
<status endtime="20190121 13:03:15.016" status="PASS" starttime="20190121 13:03:14.971"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status endtime="20190121 13:03:15.044" status="PASS" starttime="20190121 13:03:15.038"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:15.054">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 01</msg>
<status endtime="20190121 13:03:15.055" status="PASS" starttime="20190121 13:03:15.047"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:15.065" status="PASS" starttime="20190121 13:03:15.058"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:15.291">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 43 E1 C5</msg>
<status endtime="20190121 13:03:15.293" status="PASS" starttime="20190121 13:03:15.069"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:15.300">1E 10 54 93 00 08 00 0E AA 03 00 00 01 43 E1 C5</msg>
<status endtime="20190121 13:03:15.303" status="PASS" starttime="20190121 13:03:15.296"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:15.315" status="PASS" starttime="20190121 13:03:15.306"></status>
</kw>
<status endtime="20190121 13:03:15.317" status="PASS" starttime="20190121 13:03:15.025"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status endtime="20190121 13:03:15.335" status="PASS" starttime="20190121 13:03:15.329"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:15.345">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status endtime="20190121 13:03:15.346" status="PASS" starttime="20190121 13:03:15.338"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:15.354" status="PASS" starttime="20190121 13:03:15.349"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:15.588">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 44 E3 C4</msg>
<status endtime="20190121 13:03:15.590" status="PASS" starttime="20190121 13:03:15.357"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:15.600">1E 10 54 93 00 08 00 0E AA 05 02 00 01 44 E3 C4</msg>
<status endtime="20190121 13:03:15.603" status="PASS" starttime="20190121 13:03:15.593"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:15.613" status="PASS" starttime="20190121 13:03:15.606"></status>
</kw>
<status endtime="20190121 13:03:15.616" status="PASS" starttime="20190121 13:03:15.319"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status endtime="20190121 13:03:15.624" status="PASS" starttime="20190121 13:03:15.619"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:15.644">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status endtime="20190121 13:03:15.645" status="PASS" starttime="20190121 13:03:15.635"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:15.653" status="PASS" starttime="20190121 13:03:15.647"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:15.850">${info} = </msg>
<status endtime="20190121 13:03:15.851" status="PASS" starttime="20190121 13:03:15.656"></status>
</kw>
<status endtime="20190121 13:03:15.854" status="PASS" starttime="20190121 13:03:15.627"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:15.867">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:16.873">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190121 13:03:16.874">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190121 13:03:16.879">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:16.881">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190121 13:03:16.882" status="PASS" starttime="20190121 13:03:15.863"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:16.890">1 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:03:16.893">${temp} = [' (1548075795.706513)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status endtime="20190121 13:03:16.893" status="PASS" starttime="20190121 13:03:16.885"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:16.901">(1548075795.706513)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg level="INFO" timestamp="20190121 13:03:16.903">${ret_list} = [{'timestamp': '1548075795.706513', 'id': '1FF', 'channel': 'can2', 'payload': '1122334455667788'}]</msg>
<status endtime="20190121 13:03:16.904" status="PASS" starttime="20190121 13:03:16.896"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190121 13:03:16.912" status="PASS" starttime="20190121 13:03:16.907"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:16.916">${resp_list} = [{'timestamp': '1548075795.706513', 'id': '1FF', 'channel': 'can2', 'payload': '1122334455667788'}]</msg>
<status endtime="20190121 13:03:16.917" status="PASS" starttime="20190121 13:03:15.856"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:16.931">${res_dict} = {'status': True, 'count': 1}</msg>
<status endtime="20190121 13:03:16.932" status="PASS" starttime="20190121 13:03:16.920"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190121 13:03:16.941" status="PASS" starttime="20190121 13:03:16.935"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:16.977">${value} = True</msg>
<status endtime="20190121 13:03:16.978" status="PASS" starttime="20190121 13:03:16.944"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:03:16.986" status="PASS" starttime="20190121 13:03:16.981"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:16.990">${resp} = True</msg>
<status endtime="20190121 13:03:16.991" status="PASS" starttime="20190121 13:03:14.533"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:03:16.998" status="PASS" starttime="20190121 13:03:16.994"></status>
</kw>
<status endtime="20190121 13:03:17.001" status="PASS" starttime="20190121 13:03:14.519"></status>
</kw>
<kw name="cansend_250k_ex">
<doc>Trigger to send can message on can with 29 bit ID and bitrate 250000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 bit ID and bitrate 250000</arg>
</arguments>
<status endtime="20190121 13:03:17.014" status="PASS" starttime="20190121 13:03:17.009"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${250000}</arg>
<arg>${250_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190121 13:03:17.044" status="PASS" starttime="20190121 13:03:17.036"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:17.053">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:03:17.081">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:17.153">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:17.156">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:17.157" status="PASS" starttime="20190121 13:03:17.047"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:17.170" status="PASS" starttime="20190121 13:03:17.161"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:17.180">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190121 13:03:17.209">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:17.266">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:17.269">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:17.270" status="PASS" starttime="20190121 13:03:17.173"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:17.286" status="PASS" starttime="20190121 13:03:17.274"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:17.295">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:03:17.323">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:17.417">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:17.424">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:17.426" status="PASS" starttime="20190121 13:03:17.289"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:17.445" status="PASS" starttime="20190121 13:03:17.434"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190121 13:03:17.448" status="PASS" starttime="20190121 13:03:17.026"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:17.459">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg level="INFO" timestamp="20190121 13:03:17.495">${candump_ID} = 174</msg>
<status endtime="20190121 13:03:17.500" status="PASS" starttime="20190121 13:03:17.451"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status endtime="20190121 13:03:17.523" status="PASS" starttime="20190121 13:03:17.518"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:17.533">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 01</msg>
<status endtime="20190121 13:03:17.534" status="PASS" starttime="20190121 13:03:17.526"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:17.543" status="PASS" starttime="20190121 13:03:17.537"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:17.770">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status endtime="20190121 13:03:17.771" status="PASS" starttime="20190121 13:03:17.546"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:17.779">1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status endtime="20190121 13:03:17.782" status="PASS" starttime="20190121 13:03:17.775"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:17.792" status="PASS" starttime="20190121 13:03:17.785"></status>
</kw>
<status endtime="20190121 13:03:17.795" status="PASS" starttime="20190121 13:03:17.503"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status endtime="20190121 13:03:17.811" status="PASS" starttime="20190121 13:03:17.806"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:17.826">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status endtime="20190121 13:03:17.827" status="PASS" starttime="20190121 13:03:17.815"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:17.836" status="PASS" starttime="20190121 13:03:17.830"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:18.067">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status endtime="20190121 13:03:18.068" status="PASS" starttime="20190121 13:03:17.839"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:18.076">1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status endtime="20190121 13:03:18.079" status="PASS" starttime="20190121 13:03:18.071"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:18.089" status="PASS" starttime="20190121 13:03:18.082"></status>
</kw>
<status endtime="20190121 13:03:18.092" status="PASS" starttime="20190121 13:03:17.797"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status endtime="20190121 13:03:18.100" status="PASS" starttime="20190121 13:03:18.095"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:18.120">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190121 13:03:18.120" status="PASS" starttime="20190121 13:03:18.111"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:18.129" status="PASS" starttime="20190121 13:03:18.123"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:18.341">${info} = </msg>
<status endtime="20190121 13:03:18.342" status="PASS" starttime="20190121 13:03:18.132"></status>
</kw>
<status endtime="20190121 13:03:18.350" status="PASS" starttime="20190121 13:03:18.102"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:18.365">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:19.370">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190121 13:03:19.372">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190121 13:03:19.376">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:19.378">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190121 13:03:19.379" status="PASS" starttime="20190121 13:03:18.360"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:19.388">1 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:03:19.390">${temp} = [' (1548075798.183201)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status endtime="20190121 13:03:19.391" status="PASS" starttime="20190121 13:03:19.382"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:19.398">(1548075798.183201)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg level="INFO" timestamp="20190121 13:03:19.400">${ret_list} = [{'timestamp': '1548075798.183201', 'id': '18EF1B05', 'channel': 'can2', 'payload': '1122334455667788'}]</msg>
<status endtime="20190121 13:03:19.401" status="PASS" starttime="20190121 13:03:19.394"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190121 13:03:19.410" status="PASS" starttime="20190121 13:03:19.404"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:19.414">${resp_list} = [{'timestamp': '1548075798.183201', 'id': '18EF1B05', 'channel': 'can2', 'payload': '1122334455667788'}]</msg>
<status endtime="20190121 13:03:19.414" status="PASS" starttime="20190121 13:03:18.352"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:19.424">${res_dict} = {'status': True, 'count': 1}</msg>
<status endtime="20190121 13:03:19.425" status="PASS" starttime="20190121 13:03:19.417"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190121 13:03:19.433" status="PASS" starttime="20190121 13:03:19.428"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:19.468">${value} = True</msg>
<status endtime="20190121 13:03:19.469" status="PASS" starttime="20190121 13:03:19.436"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:03:19.476" status="PASS" starttime="20190121 13:03:19.472"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:19.480">${resp} = True</msg>
<status endtime="20190121 13:03:19.481" status="PASS" starttime="20190121 13:03:17.016"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:03:19.489" status="PASS" starttime="20190121 13:03:19.484"></status>
</kw>
<status endtime="20190121 13:03:19.491" status="PASS" starttime="20190121 13:03:17.003"></status>
</kw>
<kw name="cansend_125k">
<doc>Trigger to send can message on can with bitrate 125000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 125000</arg>
</arguments>
<status endtime="20190121 13:03:19.514" status="PASS" starttime="20190121 13:03:19.509"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${125000}</arg>
<arg>${125_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190121 13:03:19.544" status="PASS" starttime="20190121 13:03:19.536"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:19.553">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:03:19.581">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:19.653">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:19.656">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:19.657" status="PASS" starttime="20190121 13:03:19.547"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:19.669" status="PASS" starttime="20190121 13:03:19.661"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:19.680">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg level="INFO" timestamp="20190121 13:03:19.708">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:19.771">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:19.774">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:19.775" status="PASS" starttime="20190121 13:03:19.673"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:19.787" status="PASS" starttime="20190121 13:03:19.779"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:19.797">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:03:19.825">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:19.926">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:19.929">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:19.930" status="PASS" starttime="20190121 13:03:19.791"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:19.947" status="PASS" starttime="20190121 13:03:19.934"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190121 13:03:19.951" status="PASS" starttime="20190121 13:03:19.526"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:19.961">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg level="INFO" timestamp="20190121 13:03:19.998">${candump_ID} = 178</msg>
<status endtime="20190121 13:03:19.999" status="PASS" starttime="20190121 13:03:19.954"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status endtime="20190121 13:03:20.025" status="PASS" starttime="20190121 13:03:20.020"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:20.035">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 00</msg>
<status endtime="20190121 13:03:20.036" status="PASS" starttime="20190121 13:03:20.028"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:20.045" status="PASS" starttime="20190121 13:03:20.039"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:20.267">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 41 E1 C7</msg>
<status endtime="20190121 13:03:20.268" status="PASS" starttime="20190121 13:03:20.048"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:20.276">1E 10 54 93 00 08 00 0E AA 03 00 00 01 41 E1 C7</msg>
<status endtime="20190121 13:03:20.278" status="PASS" starttime="20190121 13:03:20.271"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:20.289" status="PASS" starttime="20190121 13:03:20.282"></status>
</kw>
<status endtime="20190121 13:03:20.291" status="PASS" starttime="20190121 13:03:20.009"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status endtime="20190121 13:03:20.307" status="PASS" starttime="20190121 13:03:20.302"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:20.317">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status endtime="20190121 13:03:20.318" status="PASS" starttime="20190121 13:03:20.310"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:20.327" status="PASS" starttime="20190121 13:03:20.321"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:20.559">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status endtime="20190121 13:03:20.560" status="PASS" starttime="20190121 13:03:20.331"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:20.567">1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status endtime="20190121 13:03:20.570" status="PASS" starttime="20190121 13:03:20.563"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:20.581" status="PASS" starttime="20190121 13:03:20.573"></status>
</kw>
<status endtime="20190121 13:03:20.583" status="PASS" starttime="20190121 13:03:20.293"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status endtime="20190121 13:03:20.592" status="PASS" starttime="20190121 13:03:20.586"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:20.612">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status endtime="20190121 13:03:20.613" status="PASS" starttime="20190121 13:03:20.603"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:20.622" status="PASS" starttime="20190121 13:03:20.616"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:20.837">${info} = </msg>
<status endtime="20190121 13:03:20.838" status="PASS" starttime="20190121 13:03:20.625"></status>
</kw>
<status endtime="20190121 13:03:20.841" status="PASS" starttime="20190121 13:03:20.594"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:20.856">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:21.862">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190121 13:03:21.864">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190121 13:03:21.868">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:21.870">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190121 13:03:21.871" status="PASS" starttime="20190121 13:03:20.852"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:21.879">1 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:03:21.882">${temp} = [' (1548075800.675654)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status endtime="20190121 13:03:21.882" status="PASS" starttime="20190121 13:03:21.874"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:21.890">(1548075800.675654)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg level="INFO" timestamp="20190121 13:03:21.896">${ret_list} = [{'timestamp': '1548075800.675654', 'id': '1FF', 'channel': 'can2', 'payload': '1122334455667788'}]</msg>
<status endtime="20190121 13:03:21.897" status="PASS" starttime="20190121 13:03:21.885"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190121 13:03:21.906" status="PASS" starttime="20190121 13:03:21.900"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:21.910">${resp_list} = [{'timestamp': '1548075800.675654', 'id': '1FF', 'channel': 'can2', 'payload': '1122334455667788'}]</msg>
<status endtime="20190121 13:03:21.911" status="PASS" starttime="20190121 13:03:20.843"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:21.920">${res_dict} = {'status': True, 'count': 1}</msg>
<status endtime="20190121 13:03:21.921" status="PASS" starttime="20190121 13:03:21.914"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190121 13:03:21.929" status="PASS" starttime="20190121 13:03:21.924"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:21.965">${value} = True</msg>
<status endtime="20190121 13:03:21.965" status="PASS" starttime="20190121 13:03:21.932"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:03:21.973" status="PASS" starttime="20190121 13:03:21.968"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:21.977">${resp} = True</msg>
<status endtime="20190121 13:03:21.978" status="PASS" starttime="20190121 13:03:19.516"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:03:21.985" status="PASS" starttime="20190121 13:03:21.981"></status>
</kw>
<status endtime="20190121 13:03:21.987" status="PASS" starttime="20190121 13:03:19.501"></status>
</kw>
<kw name="cansend_125k_ex">
<doc>Trigger to send can message on can with 29 ID and bitrate 125000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 ID and bitrate 125000</arg>
</arguments>
<status endtime="20190121 13:03:22.001" status="PASS" starttime="20190121 13:03:21.996"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${125000}</arg>
<arg>${125_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190121 13:03:22.031" status="PASS" starttime="20190121 13:03:22.024"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:22.041">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:03:22.069">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:22.141">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:22.144">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:22.145" status="PASS" starttime="20190121 13:03:22.035"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:22.158" status="PASS" starttime="20190121 13:03:22.150"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:22.169">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg level="INFO" timestamp="20190121 13:03:22.196">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:22.254">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:22.257">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:22.258" status="PASS" starttime="20190121 13:03:22.161"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:22.271" status="PASS" starttime="20190121 13:03:22.262"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:22.280">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:03:22.308">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:22.406">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:22.409">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:22.410" status="PASS" starttime="20190121 13:03:22.274"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:22.429" status="PASS" starttime="20190121 13:03:22.418"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190121 13:03:22.431" status="PASS" starttime="20190121 13:03:22.013"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:22.442">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg level="INFO" timestamp="20190121 13:03:22.471">${candump_ID} = 182</msg>
<status endtime="20190121 13:03:22.483" status="PASS" starttime="20190121 13:03:22.435"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status endtime="20190121 13:03:22.509" status="PASS" starttime="20190121 13:03:22.501"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:22.519">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 00</msg>
<status endtime="20190121 13:03:22.520" status="PASS" starttime="20190121 13:03:22.513"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:22.529" status="PASS" starttime="20190121 13:03:22.523"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:22.789">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 43 E1 C5</msg>
<status endtime="20190121 13:03:22.790" status="PASS" starttime="20190121 13:03:22.532"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:22.819">1E 10 54 93 00 08 00 0E AA 03 00 00 01 43 E1 C5</msg>
<status endtime="20190121 13:03:22.841" status="PASS" starttime="20190121 13:03:22.799"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:22.872" status="PASS" starttime="20190121 13:03:22.848"></status>
</kw>
<status endtime="20190121 13:03:22.874" status="PASS" starttime="20190121 13:03:22.486"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status endtime="20190121 13:03:22.939" status="PASS" starttime="20190121 13:03:22.915"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:22.957">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status endtime="20190121 13:03:22.959" status="PASS" starttime="20190121 13:03:22.942"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:22.974" status="PASS" starttime="20190121 13:03:22.962"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:23.218">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 44 E3 C4</msg>
<status endtime="20190121 13:03:23.219" status="PASS" starttime="20190121 13:03:22.977"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:23.226">1E 10 54 93 00 08 00 0E AA 05 02 00 01 44 E3 C4</msg>
<status endtime="20190121 13:03:23.230" status="PASS" starttime="20190121 13:03:23.222"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:23.241" status="PASS" starttime="20190121 13:03:23.233"></status>
</kw>
<status endtime="20190121 13:03:23.243" status="PASS" starttime="20190121 13:03:22.885"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status endtime="20190121 13:03:23.252" status="PASS" starttime="20190121 13:03:23.246"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:23.272">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190121 13:03:23.273" status="PASS" starttime="20190121 13:03:23.264"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:23.283" status="PASS" starttime="20190121 13:03:23.276"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:23.506">${info} = </msg>
<status endtime="20190121 13:03:23.507" status="PASS" starttime="20190121 13:03:23.286"></status>
</kw>
<status endtime="20190121 13:03:23.510" status="PASS" starttime="20190121 13:03:23.255"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:23.523">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:24.540">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190121 13:03:24.542">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190121 13:03:24.546">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:24.549">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190121 13:03:24.550" status="PASS" starttime="20190121 13:03:23.519"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:24.558">1 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:03:24.561">${temp} = [' (1548075803.363015)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status endtime="20190121 13:03:24.561" status="PASS" starttime="20190121 13:03:24.553"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:24.569">(1548075803.363015)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg level="INFO" timestamp="20190121 13:03:24.571">${ret_list} = [{'timestamp': '1548075803.363015', 'id': '18EF1B05', 'channel': 'can2', 'payload': '1122334455667788'}]</msg>
<status endtime="20190121 13:03:24.572" status="PASS" starttime="20190121 13:03:24.564"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190121 13:03:24.581" status="PASS" starttime="20190121 13:03:24.575"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:24.585">${resp_list} = [{'timestamp': '1548075803.363015', 'id': '18EF1B05', 'channel': 'can2', 'payload': '1122334455667788'}]</msg>
<status endtime="20190121 13:03:24.585" status="PASS" starttime="20190121 13:03:23.512"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:24.595">${res_dict} = {'status': True, 'count': 1}</msg>
<status endtime="20190121 13:03:24.596" status="PASS" starttime="20190121 13:03:24.588"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190121 13:03:24.605" status="PASS" starttime="20190121 13:03:24.599"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:24.640">${value} = True</msg>
<status endtime="20190121 13:03:24.641" status="PASS" starttime="20190121 13:03:24.608"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:03:24.651" status="PASS" starttime="20190121 13:03:24.646"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:24.655">${resp} = True</msg>
<status endtime="20190121 13:03:24.657" status="PASS" starttime="20190121 13:03:22.003"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:03:24.667" status="PASS" starttime="20190121 13:03:24.662"></status>
</kw>
<status endtime="20190121 13:03:24.670" status="PASS" starttime="20190121 13:03:21.990"></status>
</kw>
<kw name="can_setup_bitrate_1000k_negativtest">
<doc>Can setup channel and not supported bitrate 1000k negativtest</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and not supported bitrate 1000k negativtest</arg>
</arguments>
<status endtime="20190121 13:03:24.683" status="PASS" starttime="20190121 13:03:24.678"></status>
</kw>
<kw name="can_setup_bitrate_negativtest">
<doc>Can setup channel and bitrate negativtest</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${1000_KBAUD}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate negativtest</arg>
</arguments>
<status endtime="20190121 13:03:24.698" status="PASS" starttime="20190121 13:03:24.694"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:24.709">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 03</msg>
<status endtime="20190121 13:03:24.710" status="PASS" starttime="20190121 13:03:24.702"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:24.728" status="PASS" starttime="20190121 13:03:24.721"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:24.931">${info} = 1E 10 54 93 00 08 00 0E AA 03 04 00 01 45 E5 C3</msg>
<status endtime="20190121 13:03:24.932" status="PASS" starttime="20190121 13:03:24.731"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:24.939">1E 10 54 93 00 08 00 0E AA 03 04 00 01 45 E5 C3</msg>
<status endtime="20190121 13:03:24.942" status="PASS" starttime="20190121 13:03:24.935"></status>
</kw>
<kw library="BuiltIn" name="Should Not Contain">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:24.953" status="PASS" starttime="20190121 13:03:24.945"></status>
</kw>
<status endtime="20190121 13:03:24.956" status="PASS" starttime="20190121 13:03:24.685"></status>
</kw>
<status endtime="20190121 13:03:24.958" status="PASS" starttime="20190121 13:03:24.672"></status>
</kw>
<kw name="trigger_can_message_125k">
<doc>Trigger to send 5 can messages on specified can channel without change any settings</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send 5 can messages on specified can channel without change any settings</arg>
</arguments>
<status endtime="20190121 13:03:24.978" status="PASS" starttime="20190121 13:03:24.968"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${125000}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190121 13:03:25.000" status="PASS" starttime="20190121 13:03:24.992"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:25.011">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:03:25.040">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:25.143">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:25.147">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:25.147" status="PASS" starttime="20190121 13:03:25.004"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:25.161" status="PASS" starttime="20190121 13:03:25.152"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:25.171">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg level="INFO" timestamp="20190121 13:03:25.199">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:25.259">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:25.262">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:25.263" status="PASS" starttime="20190121 13:03:25.164"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:25.278" status="PASS" starttime="20190121 13:03:25.268"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:25.287">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:03:25.315">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:25.410">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:25.417">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:25.419" status="PASS" starttime="20190121 13:03:25.281"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:25.436" status="PASS" starttime="20190121 13:03:25.426"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190121 13:03:25.440" status="PASS" starttime="20190121 13:03:24.980"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${MSG_ID_EX}:${MSG_ID_EX}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:25.450">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg level="INFO" timestamp="20190121 13:03:25.487">${candump_ID} = 186</msg>
<status endtime="20190121 13:03:25.492" status="PASS" starttime="20190121 13:03:25.443"></status>
</kw>
<kw library="BuiltIn" name="Repeat Keyword">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>5 times</arg>
<arg>trigger_to_send_can_msg</arg>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:25.505">Repeating keyword, round 1/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:25.527">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190121 13:03:25.528" status="PASS" starttime="20190121 13:03:25.518"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:25.537" status="PASS" starttime="20190121 13:03:25.531"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:25.750">${info} = </msg>
<status endtime="20190121 13:03:25.751" status="PASS" starttime="20190121 13:03:25.540"></status>
</kw>
<status endtime="20190121 13:03:25.754" status="PASS" starttime="20190121 13:03:25.508"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:25.755">Repeating keyword, round 2/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:25.777">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190121 13:03:25.778" status="PASS" starttime="20190121 13:03:25.767"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:25.787" status="PASS" starttime="20190121 13:03:25.781"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:25.997">${info} = </msg>
<status endtime="20190121 13:03:25.998" status="PASS" starttime="20190121 13:03:25.790"></status>
</kw>
<status endtime="20190121 13:03:26.005" status="PASS" starttime="20190121 13:03:25.758"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:26.006">Repeating keyword, round 3/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:26.025">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190121 13:03:26.026" status="PASS" starttime="20190121 13:03:26.017"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:26.035" status="PASS" starttime="20190121 13:03:26.029"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:26.249">${info} = </msg>
<status endtime="20190121 13:03:26.250" status="PASS" starttime="20190121 13:03:26.038"></status>
</kw>
<status endtime="20190121 13:03:26.256" status="PASS" starttime="20190121 13:03:26.008"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:26.257">Repeating keyword, round 4/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:26.283">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190121 13:03:26.284" status="PASS" starttime="20190121 13:03:26.271"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:26.293" status="PASS" starttime="20190121 13:03:26.287"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:26.502">${info} = </msg>
<status endtime="20190121 13:03:26.502" status="PASS" starttime="20190121 13:03:26.296"></status>
</kw>
<status endtime="20190121 13:03:26.509" status="PASS" starttime="20190121 13:03:26.260"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:26.510">Repeating keyword, round 5/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:26.533">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190121 13:03:26.534" status="PASS" starttime="20190121 13:03:26.525"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:26.543" status="PASS" starttime="20190121 13:03:26.537"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:26.745">${info} = </msg>
<status endtime="20190121 13:03:26.746" status="PASS" starttime="20190121 13:03:26.546"></status>
</kw>
<status endtime="20190121 13:03:26.757" status="PASS" starttime="20190121 13:03:26.516"></status>
</kw>
<status endtime="20190121 13:03:26.758" status="PASS" starttime="20190121 13:03:25.500"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:26.777">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:27.784">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190121 13:03:27.785">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190121 13:03:27.790">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:27.792">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190121 13:03:27.793" status="PASS" starttime="20190121 13:03:26.773"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:27.802">5 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:03:27.806">${temp} = [' (1548075805.592803)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88', ' (1548075805.840595)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88', ' (1548075806.089707)  can2  18EF1B05   [8]  11 22 33 44 ...</msg>
<status endtime="20190121 13:03:27.807" status="PASS" starttime="20190121 13:03:27.796"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:27.816">(1548075805.592803)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1548075805.840595)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1548075806.089707)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1548075806.346329)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1548075806.597569)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg level="INFO" timestamp="20190121 13:03:27.819">${ret_list} = [{'timestamp': '1548075805.592803', 'id': '18EF1B05', 'channel': 'can2', 'payload': '1122334455667788'}, {'timestamp': '1548075805.840595', 'id': '18EF1B05', 'channel': 'can2', 'payload': '11223344556...</msg>
<status endtime="20190121 13:03:27.820" status="PASS" starttime="20190121 13:03:27.810"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190121 13:03:27.829" status="PASS" starttime="20190121 13:03:27.823"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:27.833">${resp_list} = [{'timestamp': '1548075805.592803', 'id': '18EF1B05', 'channel': 'can2', 'payload': '1122334455667788'}, {'timestamp': '1548075805.840595', 'id': '18EF1B05', 'channel': 'can2', 'payload': '11223344556...</msg>
<status endtime="20190121 13:03:27.834" status="PASS" starttime="20190121 13:03:26.762"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:27.878">${res_dict} = {'status': True, 'count': 5}</msg>
<status endtime="20190121 13:03:27.879" status="PASS" starttime="20190121 13:03:27.837"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190121 13:03:27.914" status="PASS" starttime="20190121 13:03:27.885"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:28.100">${value} = True</msg>
<status endtime="20190121 13:03:28.127" status="PASS" starttime="20190121 13:03:27.922"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:03:28.175" status="PASS" starttime="20190121 13:03:28.134"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("count")</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:28.301">${count} = 5</msg>
<status endtime="20190121 13:03:28.302" status="PASS" starttime="20190121 13:03:28.182"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${5}</arg>
<arg>${count}</arg>
</arguments>
<status endtime="20190121 13:03:28.335" status="PASS" starttime="20190121 13:03:28.305"></status>
</kw>
<status endtime="20190121 13:03:28.338" status="PASS" starttime="20190121 13:03:24.961"></status>
</kw>
<kw name="set_controller_off">
<doc>Test controller switching off</doc>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_OFF}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status endtime="20190121 13:03:28.390" status="PASS" starttime="20190121 13:03:28.375"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:28.412">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 00</msg>
<status endtime="20190121 13:03:28.413" status="PASS" starttime="20190121 13:03:28.393"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:28.430" status="PASS" starttime="20190121 13:03:28.417"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:28.687">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 46 E3 C6</msg>
<status endtime="20190121 13:03:28.688" status="PASS" starttime="20190121 13:03:28.433"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:28.705">1E 10 54 93 00 08 00 0E AA 05 02 00 01 46 E3 C6</msg>
<status endtime="20190121 13:03:28.708" status="PASS" starttime="20190121 13:03:28.691"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:28.737" status="PASS" starttime="20190121 13:03:28.711"></status>
</kw>
<status endtime="20190121 13:03:28.739" status="PASS" starttime="20190121 13:03:28.358"></status>
</kw>
<status endtime="20190121 13:03:28.741" status="PASS" starttime="20190121 13:03:28.340"></status>
</kw>
<kw name="channel_off_trigger_can_message_125k_negativtest">
<doc>Set the channel off and trigger to send 5 can messages on specified can channel</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the channel off and trigger to send 5 can messages on specified can channel</arg>
</arguments>
<status endtime="20190121 13:03:28.791" status="PASS" starttime="20190121 13:03:28.773"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${125000}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190121 13:03:28.883" status="PASS" starttime="20190121 13:03:28.867"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:28.914">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:03:28.967">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:29.088">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:29.091">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:29.093" status="PASS" starttime="20190121 13:03:28.886"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:29.126" status="PASS" starttime="20190121 13:03:29.096"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:29.142">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg level="INFO" timestamp="20190121 13:03:29.216">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:29.320">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:29.323">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:29.328" status="PASS" starttime="20190121 13:03:29.130"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:29.342" status="PASS" starttime="20190121 13:03:29.333"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:29.352">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:03:29.380">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:29.511">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:29.514">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:03:29.515" status="PASS" starttime="20190121 13:03:29.345"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:03:29.568" status="PASS" starttime="20190121 13:03:29.519"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190121 13:03:29.571" status="PASS" starttime="20190121 13:03:28.803"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${MSG_ID_EX}:${MSG_ID_EX}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:29.606">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg level="INFO" timestamp="20190121 13:03:29.643">${candump_ID} = 190</msg>
<status endtime="20190121 13:03:29.644" status="PASS" starttime="20190121 13:03:29.574"></status>
</kw>
<kw library="BuiltIn" name="Repeat Keyword">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>5 times</arg>
<arg>trigger_to_send_can_msg</arg>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:29.661">Repeating keyword, round 1/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:29.682">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190121 13:03:29.683" status="PASS" starttime="20190121 13:03:29.673"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:29.692" status="PASS" starttime="20190121 13:03:29.686"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:29.955">${info} = </msg>
<status endtime="20190121 13:03:29.956" status="PASS" starttime="20190121 13:03:29.695"></status>
</kw>
<status endtime="20190121 13:03:29.959" status="PASS" starttime="20190121 13:03:29.663"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:29.959">Repeating keyword, round 2/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:30.031">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190121 13:03:30.032" status="PASS" starttime="20190121 13:03:30.013"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:30.077" status="PASS" starttime="20190121 13:03:30.047"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:30.375">${info} = </msg>
<status endtime="20190121 13:03:30.376" status="PASS" starttime="20190121 13:03:30.080"></status>
</kw>
<status endtime="20190121 13:03:30.378" status="PASS" starttime="20190121 13:03:29.979"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:30.379">Repeating keyword, round 3/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:30.419">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190121 13:03:30.419" status="PASS" starttime="20190121 13:03:30.410"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:30.429" status="PASS" starttime="20190121 13:03:30.423"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:30.767">${info} = </msg>
<status endtime="20190121 13:03:30.768" status="PASS" starttime="20190121 13:03:30.432"></status>
</kw>
<status endtime="20190121 13:03:30.770" status="PASS" starttime="20190121 13:03:30.388"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:30.786">Repeating keyword, round 4/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:30.845">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190121 13:03:30.846" status="PASS" starttime="20190121 13:03:30.826"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:30.876" status="PASS" starttime="20190121 13:03:30.853"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:31.087">${info} = </msg>
<status endtime="20190121 13:03:31.088" status="PASS" starttime="20190121 13:03:30.879"></status>
</kw>
<status endtime="20190121 13:03:31.091" status="PASS" starttime="20190121 13:03:30.793"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:31.092">Repeating keyword, round 5/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:31.111">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190121 13:03:31.112" status="PASS" starttime="20190121 13:03:31.103"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:31.121" status="PASS" starttime="20190121 13:03:31.116"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:31.333">${info} = </msg>
<status endtime="20190121 13:03:31.334" status="PASS" starttime="20190121 13:03:31.125"></status>
</kw>
<status endtime="20190121 13:03:31.337" status="PASS" starttime="20190121 13:03:31.094"></status>
</kw>
<status endtime="20190121 13:03:31.338" status="PASS" starttime="20190121 13:03:29.652"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:31.357">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:03:32.363">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190121 13:03:32.364">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190121 13:03:32.370">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:03:32.372">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190121 13:03:32.377" status="PASS" starttime="20190121 13:03:31.352"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:32.398">0 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:03:32.400">${temp} = []</msg>
<status endtime="20190121 13:03:32.401" status="PASS" starttime="20190121 13:03:32.384"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:32.427">${ret_list} = []</msg>
<status endtime="20190121 13:03:32.428" status="PASS" starttime="20190121 13:03:32.404"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190121 13:03:32.445" status="PASS" starttime="20190121 13:03:32.431"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:32.453">${resp_list} = []</msg>
<status endtime="20190121 13:03:32.454" status="PASS" starttime="20190121 13:03:31.340"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:32.497">${res_dict} = {'status': False, 'count': 0}</msg>
<status endtime="20190121 13:03:32.498" status="PASS" starttime="20190121 13:03:32.474"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190121 13:03:32.541" status="PASS" starttime="20190121 13:03:32.517"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:32.668">${value} = False</msg>
<status endtime="20190121 13:03:32.669" status="PASS" starttime="20190121 13:03:32.549"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be True">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:03:32.707" status="PASS" starttime="20190121 13:03:32.698"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("count")</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:32.906">${count} = 0</msg>
<status endtime="20190121 13:03:32.914" status="PASS" starttime="20190121 13:03:32.722"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${0}</arg>
<arg>${count}</arg>
</arguments>
<status endtime="20190121 13:03:32.938" status="PASS" starttime="20190121 13:03:32.918"></status>
</kw>
<status endtime="20190121 13:03:32.940" status="PASS" starttime="20190121 13:03:28.743"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<doc>Teardown, Switch power off and close the Serial port, Switch off the CanController</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Teardown call</arg>
</arguments>
<status endtime="20190121 13:03:32.966" status="PASS" starttime="20190121 13:03:32.961"></status>
</kw>
<kw name="set_controller_off">
<doc>Test controller switching off</doc>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_OFF}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status endtime="20190121 13:03:32.988" status="PASS" starttime="20190121 13:03:32.983"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:32.999">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 00</msg>
<status endtime="20190121 13:03:33.000" status="PASS" starttime="20190121 13:03:32.991"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:33.010" status="PASS" starttime="20190121 13:03:33.004"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:33.226">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status endtime="20190121 13:03:33.227" status="PASS" starttime="20190121 13:03:33.013"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:33.237">1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status endtime="20190121 13:03:33.239" status="PASS" starttime="20190121 13:03:33.233"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:33.250" status="PASS" starttime="20190121 13:03:33.242"></status>
</kw>
<status endtime="20190121 13:03:33.252" status="PASS" starttime="20190121 13:03:32.974"></status>
</kw>
<status endtime="20190121 13:03:33.255" status="PASS" starttime="20190121 13:03:32.968"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:03:33.341" status="PASS" starttime="20190121 13:03:33.258"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:03:33.427" status="PASS" starttime="20190121 13:03:33.344"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:03:33.550" status="PASS" starttime="20190121 13:03:33.455"></status>
</kw>
<status endtime="20190121 13:03:33.567" status="PASS" starttime="20190121 13:03:32.951"></status>
</kw>
<doc>Implements Test Task SKTB-47669 for can3 channel</doc>
<tags>
<tag>CAN 3 test TX</tag>
</tags>
<status endtime="20190121 13:03:33.572" critical="yes" status="PASS" starttime="20190121 13:03:02.229"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg level="INFO" timestamp="20190121 13:03:35.211">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190121 13:03:35.293">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190121 13:03:35.295" status="PASS" starttime="20190121 13:03:33.742"></status>
</kw>
<status endtime="20190121 13:03:35.318" status="PASS" starttime="20190121 13:03:33.670"></status>
</kw>
<status endtime="20190121 13:03:35.321" status="PASS" starttime="20190121 13:03:33.636"></status>
</kw>
<doc>CAN 3 test TX with FBUS</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190121 13:03:35.328" status="PASS" starttime="20190121 13:02:59.368"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-48413.robot" id="s1-s10" name="SKTB-48413">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:36.043">Connecting to tnt-server localhost...</msg>
<status endtime="20190121 13:03:36.056" status="PASS" starttime="20190121 13:03:36.027"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:36.075">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190121 13:03:36.077">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190121 13:03:38.141">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190121 13:03:38.156" status="PASS" starttime="20190121 13:03:36.059"></status>
</kw>
<status endtime="20190121 13:03:38.159" status="PASS" starttime="20190121 13:03:36.021"></status>
</kw>
<test id="s1-s10-t1" name="SKTB-48413 FBUS test">
<kw type="setup" name="Test_precondition">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:03:38.337" status="PASS" starttime="20190121 13:03:38.222"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:03:38.453" status="PASS" starttime="20190121 13:03:38.339"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:03:38.587" status="PASS" starttime="20190121 13:03:38.467"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:40.626">Slept 2 seconds</msg>
<status endtime="20190121 13:03:40.628" status="PASS" starttime="20190121 13:03:38.590"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:03:40.677" status="PASS" starttime="20190121 13:03:40.631"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:03:40.726" status="PASS" starttime="20190121 13:03:40.680"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:03:40.774" status="PASS" starttime="20190121 13:03:40.730"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190121 13:03:40.824" status="PASS" starttime="20190121 13:03:40.778"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190121 13:03:40.874" status="PASS" starttime="20190121 13:03:40.827"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190121 13:03:40.954" status="PASS" starttime="20190121 13:03:40.877"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Set State">
<arguments>
<arg>timeout</arg>
<arg>${15000}</arg>
</arguments>
<status endtime="20190121 13:03:41.031" status="PASS" starttime="20190121 13:03:40.965"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:43.039">Slept 2 seconds</msg>
<status endtime="20190121 13:03:43.042" status="PASS" starttime="20190121 13:03:41.035"></status>
</kw>
<status endtime="20190121 13:03:43.044" status="PASS" starttime="20190121 13:03:38.199"></status>
</kw>
<kw name="digit_out_led1_freq">
<doc>Toggle digital output led 1 with the supported frequency</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle digital output led 1 with the supported frequency</arg>
</arguments>
<status endtime="20190121 13:03:43.058" status="PASS" starttime="20190121 13:03:43.053"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:43.078">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 04 01 01</msg>
<status endtime="20190121 13:03:43.079" status="PASS" starttime="20190121 13:03:43.070"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:43.087" status="PASS" starttime="20190121 13:03:43.082"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:43.303">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 04 01 43 3D F5</msg>
<status endtime="20190121 13:03:43.305" status="PASS" starttime="20190121 13:03:43.090"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:43.321" status="PASS" starttime="20190121 13:03:43.313"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:43.332" status="PASS" starttime="20190121 13:03:43.324"></status>
</kw>
<status endtime="20190121 13:03:43.334" status="PASS" starttime="20190121 13:03:43.060"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status endtime="20190121 13:03:43.344" status="PASS" starttime="20190121 13:03:43.339"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:43.362">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status endtime="20190121 13:03:43.362" status="PASS" starttime="20190121 13:03:43.356"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:43.371" status="PASS" starttime="20190121 13:03:43.365"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:43.622">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 04 02 00 01 44 3E FB</msg>
<status endtime="20190121 13:03:43.623" status="PASS" starttime="20190121 13:03:43.374"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:43.631" status="PASS" starttime="20190121 13:03:43.626"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:43.642" status="PASS" starttime="20190121 13:03:43.634"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:43.650">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '04', '02', '00', '01', '44', '3E', 'FB']</msg>
<status endtime="20190121 13:03:43.651" status="PASS" starttime="20190121 13:03:43.645"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:43.664">${value} = 00</msg>
<status endtime="20190121 13:03:43.665" status="PASS" starttime="20190121 13:03:43.654"></status>
</kw>
<status endtime="20190121 13:03:43.668" status="PASS" starttime="20190121 13:03:43.346"></status>
</kw>
<status endtime="20190121 13:03:43.670" status="PASS" starttime="20190121 13:03:43.047"></status>
</kw>
<kw name="digit_out_led1_freq_negativtest">
<doc>Toggle the digital output led 1 with the notsupported frequency negativ test</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 1 with the notsupported frequency negativtest</arg>
</arguments>
<status endtime="20190121 13:03:43.683" status="PASS" starttime="20190121 13:03:43.679"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:43.703">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 04 01 0B</msg>
<status endtime="20190121 13:03:43.703" status="PASS" starttime="20190121 13:03:43.695"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:43.713" status="PASS" starttime="20190121 13:03:43.707"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:43.942">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 04 01 47 3C F1</msg>
<status endtime="20190121 13:03:43.943" status="PASS" starttime="20190121 13:03:43.716"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:43.952" status="PASS" starttime="20190121 13:03:43.947"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:43.964" status="PASS" starttime="20190121 13:03:43.956"></status>
</kw>
<status endtime="20190121 13:03:43.966" status="PASS" starttime="20190121 13:03:43.685"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status endtime="20190121 13:03:43.975" status="PASS" starttime="20190121 13:03:43.971"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:43.994">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status endtime="20190121 13:03:43.995" status="PASS" starttime="20190121 13:03:43.987"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:44.004" status="PASS" starttime="20190121 13:03:43.998"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:44.239">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 04 02 00 01 40 3E FF</msg>
<status endtime="20190121 13:03:44.240" status="PASS" starttime="20190121 13:03:44.007"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:44.249" status="PASS" starttime="20190121 13:03:44.244"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:44.260" status="PASS" starttime="20190121 13:03:44.252"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:44.269">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '04', '02', '00', '01', '40', '3E', 'FF']</msg>
<status endtime="20190121 13:03:44.270" status="PASS" starttime="20190121 13:03:44.264"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:44.280">${value} = 00</msg>
<status endtime="20190121 13:03:44.281" status="PASS" starttime="20190121 13:03:44.274"></status>
</kw>
<status endtime="20190121 13:03:44.285" status="PASS" starttime="20190121 13:03:43.978"></status>
</kw>
<status endtime="20190121 13:03:44.287" status="PASS" starttime="20190121 13:03:43.672"></status>
</kw>
<kw name="digit_out_led1_high">
<doc>Set the digital output led 1 high and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 1 high and test it</arg>
</arguments>
<status endtime="20190121 13:03:44.321" status="PASS" starttime="20190121 13:03:44.309"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:44.347">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 04 01</msg>
<status endtime="20190121 13:03:44.348" status="PASS" starttime="20190121 13:03:44.340"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:44.356" status="PASS" starttime="20190121 13:03:44.351"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:44.557">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 04 01 41 3D F3</msg>
<status endtime="20190121 13:03:44.558" status="PASS" starttime="20190121 13:03:44.359"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:44.566" status="PASS" starttime="20190121 13:03:44.561"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:44.577" status="PASS" starttime="20190121 13:03:44.569"></status>
</kw>
<status endtime="20190121 13:03:44.579" status="PASS" starttime="20190121 13:03:44.323"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:44.601">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status endtime="20190121 13:03:44.602" status="PASS" starttime="20190121 13:03:44.595"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:44.611" status="PASS" starttime="20190121 13:03:44.605"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:44.842">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 04 00 01 01 42 3D FC</msg>
<status endtime="20190121 13:03:44.843" status="PASS" starttime="20190121 13:03:44.614"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:44.851" status="PASS" starttime="20190121 13:03:44.846"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:44.863" status="PASS" starttime="20190121 13:03:44.854"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:44.871">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '04', '00', '01', '01', '42', '3D', 'FC']</msg>
<status endtime="20190121 13:03:44.872" status="PASS" starttime="20190121 13:03:44.866"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:44.880">${value} = 01</msg>
<status endtime="20190121 13:03:44.881" status="PASS" starttime="20190121 13:03:44.874"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:44.885">${res} = 01</msg>
<status endtime="20190121 13:03:44.886" status="PASS" starttime="20190121 13:03:44.581"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status endtime="20190121 13:03:44.895" status="PASS" starttime="20190121 13:03:44.889"></status>
</kw>
<status endtime="20190121 13:03:44.897" status="PASS" starttime="20190121 13:03:44.290"></status>
</kw>
<kw name="digit_out_led1_low">
<doc>Set the digital output led 1 low and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 1 low and test it</arg>
</arguments>
<status endtime="20190121 13:03:44.911" status="PASS" starttime="20190121 13:03:44.906"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:44.931">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 04 00</msg>
<status endtime="20190121 13:03:44.932" status="PASS" starttime="20190121 13:03:44.925"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:44.941" status="PASS" starttime="20190121 13:03:44.935"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:45.171">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 04 01 45 3D F7</msg>
<status endtime="20190121 13:03:45.173" status="PASS" starttime="20190121 13:03:44.944"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:45.181" status="PASS" starttime="20190121 13:03:45.176"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:45.219" status="PASS" starttime="20190121 13:03:45.184"></status>
</kw>
<status endtime="20190121 13:03:45.224" status="PASS" starttime="20190121 13:03:44.914"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:45.245">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status endtime="20190121 13:03:45.246" status="PASS" starttime="20190121 13:03:45.238"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:45.254" status="PASS" starttime="20190121 13:03:45.249"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:45.486">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 04 00 00 01 46 3D F9</msg>
<status endtime="20190121 13:03:45.487" status="PASS" starttime="20190121 13:03:45.257"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:45.495" status="PASS" starttime="20190121 13:03:45.490"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:45.506" status="PASS" starttime="20190121 13:03:45.498"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:45.514">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '04', '00', '00', '01', '46', '3D', 'F9']</msg>
<status endtime="20190121 13:03:45.515" status="PASS" starttime="20190121 13:03:45.509"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:45.524">${value} = 00</msg>
<status endtime="20190121 13:03:45.525" status="PASS" starttime="20190121 13:03:45.518"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:45.528">${res} = 00</msg>
<status endtime="20190121 13:03:45.529" status="PASS" starttime="20190121 13:03:45.226"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status endtime="20190121 13:03:45.537" status="PASS" starttime="20190121 13:03:45.532"></status>
</kw>
<status endtime="20190121 13:03:45.539" status="PASS" starttime="20190121 13:03:44.899"></status>
</kw>
<kw name="digit_out_led2_freq">
<doc>Toggle the digital output led 2 with the supported frequency</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2</arg>
<arg>with the supported frequency</arg>
</arguments>
<status endtime="20190121 13:03:45.573" status="PASS" starttime="20190121 13:03:45.564"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:45.606">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 05 01 01</msg>
<status endtime="20190121 13:03:45.606" status="PASS" starttime="20190121 13:03:45.599"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:45.615" status="PASS" starttime="20190121 13:03:45.610"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:45.822">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 05 01 47 3D F0</msg>
<status endtime="20190121 13:03:45.823" status="PASS" starttime="20190121 13:03:45.619"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:45.832" status="PASS" starttime="20190121 13:03:45.826"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:45.843" status="PASS" starttime="20190121 13:03:45.835"></status>
</kw>
<status endtime="20190121 13:03:45.846" status="PASS" starttime="20190121 13:03:45.575"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status endtime="20190121 13:03:45.853" status="PASS" starttime="20190121 13:03:45.849"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:45.871">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status endtime="20190121 13:03:45.872" status="PASS" starttime="20190121 13:03:45.865"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:45.880" status="PASS" starttime="20190121 13:03:45.875"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:46.143">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 05 02 00 01 40 3E FE</msg>
<status endtime="20190121 13:03:46.144" status="PASS" starttime="20190121 13:03:45.883"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:46.152" status="PASS" starttime="20190121 13:03:46.147"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:46.163" status="PASS" starttime="20190121 13:03:46.155"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:46.171">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '05', '02', '00', '01', '40', '3E', 'FE']</msg>
<status endtime="20190121 13:03:46.172" status="PASS" starttime="20190121 13:03:46.167"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:46.181">${value} = 00</msg>
<status endtime="20190121 13:03:46.182" status="PASS" starttime="20190121 13:03:46.175"></status>
</kw>
<status endtime="20190121 13:03:46.185" status="PASS" starttime="20190121 13:03:45.855"></status>
</kw>
<status endtime="20190121 13:03:46.187" status="PASS" starttime="20190121 13:03:45.549"></status>
</kw>
<kw name="digit_out_led2_freq_negativtest">
<doc>Toggle the digital output led 2 with the notsupported frequency</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2 with the notsupported frequency</arg>
</arguments>
<status endtime="20190121 13:03:46.200" status="PASS" starttime="20190121 13:03:46.196"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:46.220">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 05 01 0B</msg>
<status endtime="20190121 13:03:46.221" status="PASS" starttime="20190121 13:03:46.213"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:46.229" status="PASS" starttime="20190121 13:03:46.223"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:46.457">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 05 01 41 3C F6</msg>
<status endtime="20190121 13:03:46.458" status="PASS" starttime="20190121 13:03:46.232"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:46.469" status="PASS" starttime="20190121 13:03:46.462"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:46.479" status="PASS" starttime="20190121 13:03:46.471"></status>
</kw>
<status endtime="20190121 13:03:46.482" status="PASS" starttime="20190121 13:03:46.203"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status endtime="20190121 13:03:46.489" status="PASS" starttime="20190121 13:03:46.484"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:46.506">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status endtime="20190121 13:03:46.507" status="PASS" starttime="20190121 13:03:46.501"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:46.516" status="PASS" starttime="20190121 13:03:46.510"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:46.753">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 05 02 00 01 42 3E FC</msg>
<status endtime="20190121 13:03:46.754" status="PASS" starttime="20190121 13:03:46.519"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:46.762" status="PASS" starttime="20190121 13:03:46.757"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:46.774" status="PASS" starttime="20190121 13:03:46.765"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:46.782">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '05', '02', '00', '01', '42', '3E', 'FC']</msg>
<status endtime="20190121 13:03:46.783" status="PASS" starttime="20190121 13:03:46.777"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:46.801">${value} = 00</msg>
<status endtime="20190121 13:03:46.802" status="PASS" starttime="20190121 13:03:46.786"></status>
</kw>
<status endtime="20190121 13:03:46.810" status="PASS" starttime="20190121 13:03:46.491"></status>
</kw>
<status endtime="20190121 13:03:46.816" status="PASS" starttime="20190121 13:03:46.189"></status>
</kw>
<kw name="digit_out_led2_high">
<doc>Set the digital output led 2 high and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 2 high and test it</arg>
</arguments>
<status endtime="20190121 13:03:46.836" status="PASS" starttime="20190121 13:03:46.831"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:46.855">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 05 01</msg>
<status endtime="20190121 13:03:46.856" status="PASS" starttime="20190121 13:03:46.849"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:46.865" status="PASS" starttime="20190121 13:03:46.859"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:47.067">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 05 01 43 3D F0</msg>
<status endtime="20190121 13:03:47.069" status="PASS" starttime="20190121 13:03:46.868"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:47.077" status="PASS" starttime="20190121 13:03:47.072"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:47.088" status="PASS" starttime="20190121 13:03:47.080"></status>
</kw>
<status endtime="20190121 13:03:47.090" status="PASS" starttime="20190121 13:03:46.839"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:47.108">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status endtime="20190121 13:03:47.109" status="PASS" starttime="20190121 13:03:47.102"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:47.117" status="PASS" starttime="20190121 13:03:47.111"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:47.349">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 05 00 01 01 44 3D FB</msg>
<status endtime="20190121 13:03:47.350" status="PASS" starttime="20190121 13:03:47.120"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:47.358" status="PASS" starttime="20190121 13:03:47.353"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:47.369" status="PASS" starttime="20190121 13:03:47.361"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:47.377">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '05', '00', '01', '01', '44', '3D', 'FB']</msg>
<status endtime="20190121 13:03:47.378" status="PASS" starttime="20190121 13:03:47.372"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:47.386">${value} = 01</msg>
<status endtime="20190121 13:03:47.387" status="PASS" starttime="20190121 13:03:47.381"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:47.390">${res} = 01</msg>
<status endtime="20190121 13:03:47.391" status="PASS" starttime="20190121 13:03:47.092"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status endtime="20190121 13:03:47.399" status="PASS" starttime="20190121 13:03:47.394"></status>
</kw>
<status endtime="20190121 13:03:47.401" status="PASS" starttime="20190121 13:03:46.819"></status>
</kw>
<kw name="digit_out_led2_low">
<doc>Set the digital output led 2 low and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 2 low and test it</arg>
</arguments>
<status endtime="20190121 13:03:47.415" status="PASS" starttime="20190121 13:03:47.410"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:47.434">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 05 00</msg>
<status endtime="20190121 13:03:47.435" status="PASS" starttime="20190121 13:03:47.427"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:47.446" status="PASS" starttime="20190121 13:03:47.440"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:47.677">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 05 01 45 3D F6</msg>
<status endtime="20190121 13:03:47.678" status="PASS" starttime="20190121 13:03:47.449"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:47.687" status="PASS" starttime="20190121 13:03:47.682"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:47.698" status="PASS" starttime="20190121 13:03:47.690"></status>
</kw>
<status endtime="20190121 13:03:47.700" status="PASS" starttime="20190121 13:03:47.417"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:47.718">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status endtime="20190121 13:03:47.719" status="PASS" starttime="20190121 13:03:47.712"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:47.728" status="PASS" starttime="20190121 13:03:47.722"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:47.961">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 05 00 00 01 41 3D FF</msg>
<status endtime="20190121 13:03:47.962" status="PASS" starttime="20190121 13:03:47.730"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:47.993" status="PASS" starttime="20190121 13:03:47.965"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:48.036" status="PASS" starttime="20190121 13:03:48.016"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:48.065">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '05', '00', '00', '01', '41', '3D', 'FF']</msg>
<status endtime="20190121 13:03:48.066" status="PASS" starttime="20190121 13:03:48.039"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:48.110">${value} = 00</msg>
<status endtime="20190121 13:03:48.111" status="PASS" starttime="20190121 13:03:48.104"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:48.127">${res} = 00</msg>
<status endtime="20190121 13:03:48.128" status="PASS" starttime="20190121 13:03:47.702"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status endtime="20190121 13:03:48.136" status="PASS" starttime="20190121 13:03:48.131"></status>
</kw>
<status endtime="20190121 13:03:48.142" status="PASS" starttime="20190121 13:03:47.404"></status>
</kw>
<kw name="digit_out_crm_freq">
<doc>Toggle the digital output CRM with the supported frequency</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output CRM with the supported frequency</arg>
</arguments>
<status endtime="20190121 13:03:48.156" status="PASS" starttime="20190121 13:03:48.151"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:48.175">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 06 01 01</msg>
<status endtime="20190121 13:03:48.175" status="PASS" starttime="20190121 13:03:48.168"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:48.184" status="PASS" starttime="20190121 13:03:48.178"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:48.386">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 06 01 45 3D F1</msg>
<status endtime="20190121 13:03:48.387" status="PASS" starttime="20190121 13:03:48.187"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:48.396" status="PASS" starttime="20190121 13:03:48.390"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:48.407" status="PASS" starttime="20190121 13:03:48.399"></status>
</kw>
<status endtime="20190121 13:03:48.409" status="PASS" starttime="20190121 13:03:48.158"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status endtime="20190121 13:03:48.417" status="PASS" starttime="20190121 13:03:48.412"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:48.434">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status endtime="20190121 13:03:48.435" status="PASS" starttime="20190121 13:03:48.429"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:48.445" status="PASS" starttime="20190121 13:03:48.439"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:48.677">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 06 02 00 01 46 3E FB</msg>
<status endtime="20190121 13:03:48.678" status="PASS" starttime="20190121 13:03:48.448"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:48.687" status="PASS" starttime="20190121 13:03:48.682"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:48.698" status="PASS" starttime="20190121 13:03:48.690"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:48.710">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '06', '02', '00', '01', '46', '3E', 'FB']</msg>
<status endtime="20190121 13:03:48.711" status="PASS" starttime="20190121 13:03:48.701"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:48.720">${value} = 00</msg>
<status endtime="20190121 13:03:48.721" status="PASS" starttime="20190121 13:03:48.714"></status>
</kw>
<status endtime="20190121 13:03:48.724" status="PASS" starttime="20190121 13:03:48.419"></status>
</kw>
<status endtime="20190121 13:03:48.726" status="PASS" starttime="20190121 13:03:48.145"></status>
</kw>
<kw name="digit_out_crm_freq_negativtest">
<doc>Toggle the digital output led 2 with the notsupported frequency</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2 with the notsupported frequency</arg>
</arguments>
<status endtime="20190121 13:03:48.739" status="PASS" starttime="20190121 13:03:48.735"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:48.758">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 06 01 0B</msg>
<status endtime="20190121 13:03:48.759" status="PASS" starttime="20190121 13:03:48.751"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:48.768" status="PASS" starttime="20190121 13:03:48.762"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:49.006">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 06 01 47 3C F3</msg>
<status endtime="20190121 13:03:49.007" status="PASS" starttime="20190121 13:03:48.771"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:49.016" status="PASS" starttime="20190121 13:03:49.010"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:49.026" status="PASS" starttime="20190121 13:03:49.019"></status>
</kw>
<status endtime="20190121 13:03:49.029" status="PASS" starttime="20190121 13:03:48.742"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status endtime="20190121 13:03:49.038" status="PASS" starttime="20190121 13:03:49.033"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:49.075">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status endtime="20190121 13:03:49.082" status="PASS" starttime="20190121 13:03:49.065"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:49.091" status="PASS" starttime="20190121 13:03:49.085"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:49.293">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 06 02 00 01 40 3E FD</msg>
<status endtime="20190121 13:03:49.294" status="PASS" starttime="20190121 13:03:49.094"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:49.303" status="PASS" starttime="20190121 13:03:49.297"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:49.313" status="PASS" starttime="20190121 13:03:49.306"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:49.322">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '06', '02', '00', '01', '40', '3E', 'FD']</msg>
<status endtime="20190121 13:03:49.323" status="PASS" starttime="20190121 13:03:49.316"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:49.331">${value} = 00</msg>
<status endtime="20190121 13:03:49.332" status="PASS" starttime="20190121 13:03:49.326"></status>
</kw>
<status endtime="20190121 13:03:49.335" status="PASS" starttime="20190121 13:03:49.040"></status>
</kw>
<status endtime="20190121 13:03:49.337" status="PASS" starttime="20190121 13:03:48.728"></status>
</kw>
<kw name="digit_out_crm_high">
<doc>Set the digital output crm high and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output crm high and test it</arg>
</arguments>
<status endtime="20190121 13:03:49.351" status="PASS" starttime="20190121 13:03:49.347"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:49.370">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 06 01</msg>
<status endtime="20190121 13:03:49.371" status="PASS" starttime="20190121 13:03:49.364"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:49.380" status="PASS" starttime="20190121 13:03:49.374"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:49.613">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 06 01 41 3D F1</msg>
<status endtime="20190121 13:03:49.614" status="PASS" starttime="20190121 13:03:49.383"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:49.623" status="PASS" starttime="20190121 13:03:49.618"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:49.634" status="PASS" starttime="20190121 13:03:49.626"></status>
</kw>
<status endtime="20190121 13:03:49.636" status="PASS" starttime="20190121 13:03:49.354"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:49.658">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status endtime="20190121 13:03:49.659" status="PASS" starttime="20190121 13:03:49.652"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:49.667" status="PASS" starttime="20190121 13:03:49.661"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:49.893">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 06 00 01 01 42 3D FE</msg>
<status endtime="20190121 13:03:49.894" status="PASS" starttime="20190121 13:03:49.670"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:49.903" status="PASS" starttime="20190121 13:03:49.898"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:49.914" status="PASS" starttime="20190121 13:03:49.906"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:49.922">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '06', '00', '01', '01', '42', '3D', 'FE']</msg>
<status endtime="20190121 13:03:49.923" status="PASS" starttime="20190121 13:03:49.917"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:49.931">${value} = 01</msg>
<status endtime="20190121 13:03:49.932" status="PASS" starttime="20190121 13:03:49.926"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:49.936">${res} = 01</msg>
<status endtime="20190121 13:03:49.937" status="PASS" starttime="20190121 13:03:49.638"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status endtime="20190121 13:03:49.945" status="PASS" starttime="20190121 13:03:49.940"></status>
</kw>
<status endtime="20190121 13:03:49.947" status="PASS" starttime="20190121 13:03:49.339"></status>
</kw>
<kw name="digit_out_crm_low">
<doc>Set the digital output crm low and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output crm low and test it</arg>
</arguments>
<status endtime="20190121 13:03:49.960" status="PASS" starttime="20190121 13:03:49.955"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:49.979">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 06 00</msg>
<status endtime="20190121 13:03:49.980" status="PASS" starttime="20190121 13:03:49.973"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:49.989" status="PASS" starttime="20190121 13:03:49.983"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:50.221">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 06 01 43 3D F3</msg>
<status endtime="20190121 13:03:50.222" status="PASS" starttime="20190121 13:03:49.991"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:50.231" status="PASS" starttime="20190121 13:03:50.226"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:50.242" status="PASS" starttime="20190121 13:03:50.234"></status>
</kw>
<status endtime="20190121 13:03:50.244" status="PASS" starttime="20190121 13:03:49.962"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:50.263">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status endtime="20190121 13:03:50.264" status="PASS" starttime="20190121 13:03:50.257"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:03:50.273" status="PASS" starttime="20190121 13:03:50.267"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:50.503">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 06 00 00 01 44 3D F9</msg>
<status endtime="20190121 13:03:50.505" status="PASS" starttime="20190121 13:03:50.275"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:03:50.514" status="PASS" starttime="20190121 13:03:50.508"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:03:50.525" status="PASS" starttime="20190121 13:03:50.516"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:50.533">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '06', '00', '00', '01', '44', '3D', 'F9']</msg>
<status endtime="20190121 13:03:50.534" status="PASS" starttime="20190121 13:03:50.528"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:03:50.551">${value} = 00</msg>
<status endtime="20190121 13:03:50.551" status="PASS" starttime="20190121 13:03:50.537"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:03:50.559">${res} = 00</msg>
<status endtime="20190121 13:03:50.564" status="PASS" starttime="20190121 13:03:50.247"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status endtime="20190121 13:03:50.581" status="PASS" starttime="20190121 13:03:50.567"></status>
</kw>
<status endtime="20190121 13:03:50.584" status="PASS" starttime="20190121 13:03:49.949"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:03:50.643" status="PASS" starttime="20190121 13:03:50.596"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:03:50.698" status="PASS" starttime="20190121 13:03:50.647"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:03:50.748" status="PASS" starttime="20190121 13:03:50.702"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:52.756">Slept 2 seconds</msg>
<status endtime="20190121 13:03:52.758" status="PASS" starttime="20190121 13:03:50.751"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190121 13:03:52.809" status="PASS" starttime="20190121 13:03:52.763"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:03:52.856" status="PASS" starttime="20190121 13:03:52.812"></status>
</kw>
<status endtime="20190121 13:03:52.859" status="PASS" starttime="20190121 13:03:50.590"></status>
</kw>
<doc>Implements Test Task SKTB-48413 toggle Digital Output Leds</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status endtime="20190121 13:03:52.860" critical="yes" status="PASS" starttime="20190121 13:03:38.161"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg level="INFO" timestamp="20190121 13:03:54.343">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190121 13:03:54.410">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190121 13:03:54.431" status="PASS" starttime="20190121 13:03:52.910"></status>
</kw>
<status endtime="20190121 13:03:54.433" status="PASS" starttime="20190121 13:03:52.876"></status>
</kw>
<status endtime="20190121 13:03:54.435" status="PASS" starttime="20190121 13:03:52.870"></status>
</kw>
<doc>Chorus GPIO LED1, LED2, CRM test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190121 13:03:54.436" status="PASS" starttime="20190121 13:03:35.473"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-49038.robot" id="s1-s11" name="SKTB-49038">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:55.210">Connecting to tnt-server localhost...</msg>
<status endtime="20190121 13:03:55.222" status="PASS" starttime="20190121 13:03:55.194"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:03:55.231">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190121 13:03:55.245">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190121 13:03:57.395">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190121 13:03:57.397" status="PASS" starttime="20190121 13:03:55.225"></status>
</kw>
<status endtime="20190121 13:03:57.399" status="PASS" starttime="20190121 13:03:55.188"></status>
</kw>
<test id="s1-s11-t1" name="SKTB-GPIO FBUS test">
<kw type="setup" name="Test_precondition">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:03:57.591" status="PASS" starttime="20190121 13:03:57.470"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:03:57.673" status="PASS" starttime="20190121 13:03:57.594"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:03:57.837" status="PASS" starttime="20190121 13:03:57.700"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Bidir Wake Up">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:03:58.430" status="PASS" starttime="20190121 13:03:57.841"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:04:00.443">Slept 2 seconds</msg>
<status endtime="20190121 13:04:00.445" status="PASS" starttime="20190121 13:03:58.433"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:04:00.495" status="PASS" starttime="20190121 13:04:00.448"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:04:00.545" status="PASS" starttime="20190121 13:04:00.498"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:04:00.593" status="PASS" starttime="20190121 13:04:00.548"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190121 13:04:00.642" status="PASS" starttime="20190121 13:04:00.596"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190121 13:04:00.693" status="PASS" starttime="20190121 13:04:00.646"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190121 13:04:00.773" status="PASS" starttime="20190121 13:04:00.696"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:04:02.781">Slept 2 seconds</msg>
<status endtime="20190121 13:04:02.783" status="PASS" starttime="20190121 13:04:00.775"></status>
</kw>
<status endtime="20190121 13:04:02.785" status="PASS" starttime="20190121 13:03:57.443"></status>
</kw>
<kw name="digit_input_1">
<doc>Get digital input 1</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 1</arg>
</arguments>
<status endtime="20190121 13:04:02.799" status="PASS" starttime="20190121 13:04:02.794"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_1_BUTTON_1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:02.817">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0A</msg>
<status endtime="20190121 13:04:02.818" status="PASS" starttime="20190121 13:04:02.811"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:02.826" status="PASS" starttime="20190121 13:04:02.821"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:03.030">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0A 00 01 01 43 3D F3</msg>
<status endtime="20190121 13:04:03.031" status="PASS" starttime="20190121 13:04:02.829"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:04:03.039" status="PASS" starttime="20190121 13:04:03.033"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:03.050" status="PASS" starttime="20190121 13:04:03.042"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:03.058">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0A', '00', '01', '01', '43', '3D', 'F3']</msg>
<status endtime="20190121 13:04:03.059" status="PASS" starttime="20190121 13:04:03.053"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:03.067">${value} = 01</msg>
<status endtime="20190121 13:04:03.068" status="PASS" starttime="20190121 13:04:03.061"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:03.072">${res} = 01</msg>
<status endtime="20190121 13:04:03.072" status="PASS" starttime="20190121 13:04:02.801"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status endtime="20190121 13:04:03.080" status="PASS" starttime="20190121 13:04:03.075"></status>
</kw>
<status endtime="20190121 13:04:03.082" status="PASS" starttime="20190121 13:04:02.788"></status>
</kw>
<kw name="digit_input_2">
<doc>Get digital input 2</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 2</arg>
</arguments>
<status endtime="20190121 13:04:03.095" status="PASS" starttime="20190121 13:04:03.091"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_2_BUTTON_2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:03.113">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0B</msg>
<status endtime="20190121 13:04:03.114" status="PASS" starttime="20190121 13:04:03.107"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:03.126" status="PASS" starttime="20190121 13:04:03.117"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:03.357">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0B 00 01 01 44 3D F5</msg>
<status endtime="20190121 13:04:03.358" status="PASS" starttime="20190121 13:04:03.129"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:04:03.367" status="PASS" starttime="20190121 13:04:03.361"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:03.379" status="PASS" starttime="20190121 13:04:03.370"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:03.388">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0B', '00', '01', '01', '44', '3D', 'F5']</msg>
<status endtime="20190121 13:04:03.389" status="PASS" starttime="20190121 13:04:03.383"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:03.397">${value} = 01</msg>
<status endtime="20190121 13:04:03.398" status="PASS" starttime="20190121 13:04:03.391"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:03.401">${res} = 01</msg>
<status endtime="20190121 13:04:03.402" status="PASS" starttime="20190121 13:04:03.098"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status endtime="20190121 13:04:03.410" status="PASS" starttime="20190121 13:04:03.405"></status>
</kw>
<status endtime="20190121 13:04:03.412" status="PASS" starttime="20190121 13:04:03.085"></status>
</kw>
<kw name="digit_input_3">
<doc>Get digital input 3</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 3</arg>
</arguments>
<status endtime="20190121 13:04:03.425" status="PASS" starttime="20190121 13:04:03.421"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_3_AIRB_PWM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:03.443">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0C</msg>
<status endtime="20190121 13:04:03.444" status="PASS" starttime="20190121 13:04:03.437"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:03.452" status="PASS" starttime="20190121 13:04:03.447"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:03.718">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0C 00 01 01 45 3D F3</msg>
<status endtime="20190121 13:04:03.718" status="PASS" starttime="20190121 13:04:03.455"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:04:03.727" status="PASS" starttime="20190121 13:04:03.721"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:03.738" status="PASS" starttime="20190121 13:04:03.730"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:03.746">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0C', '00', '01', '01', '45', '3D', 'F3']</msg>
<status endtime="20190121 13:04:03.747" status="PASS" starttime="20190121 13:04:03.741"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:03.756">${value} = 01</msg>
<status endtime="20190121 13:04:03.757" status="PASS" starttime="20190121 13:04:03.750"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:03.761">${res} = 01</msg>
<status endtime="20190121 13:04:03.761" status="PASS" starttime="20190121 13:04:03.427"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status endtime="20190121 13:04:03.769" status="PASS" starttime="20190121 13:04:03.764"></status>
</kw>
<status endtime="20190121 13:04:03.771" status="PASS" starttime="20190121 13:04:03.414"></status>
</kw>
<kw name="digit_input_bid">
<doc>Get digital input BIDR WUL</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input BIDR WUL</arg>
</arguments>
<status endtime="20190121 13:04:03.785" status="PASS" starttime="20190121 13:04:03.780"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${BIDIR_WUL_IN}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:03.824">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0E</msg>
<status endtime="20190121 13:04:03.825" status="PASS" starttime="20190121 13:04:03.810"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:03.838" status="PASS" starttime="20190121 13:04:03.831"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:04.041">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0E 00 01 01 40 3D F4</msg>
<status endtime="20190121 13:04:04.042" status="PASS" starttime="20190121 13:04:03.842"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190121 13:04:04.051" status="PASS" starttime="20190121 13:04:04.045"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:04.064" status="PASS" starttime="20190121 13:04:04.054"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:04.073">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0E', '00', '01', '01', '40', '3D', 'F4']</msg>
<status endtime="20190121 13:04:04.074" status="PASS" starttime="20190121 13:04:04.068"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:04.084">${value} = 01</msg>
<status endtime="20190121 13:04:04.084" status="PASS" starttime="20190121 13:04:04.078"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:04.090">${res} = 01</msg>
<status endtime="20190121 13:04:04.091" status="PASS" starttime="20190121 13:04:03.787"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:04:04.105">'01' does not contain '00'</msg>
<status endtime="20190121 13:04:04.106" status="FAIL" starttime="20190121 13:04:04.094"></status>
</kw>
<status endtime="20190121 13:04:04.109" status="FAIL" starttime="20190121 13:04:03.774"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:04:04.193" status="PASS" starttime="20190121 13:04:04.120"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:04:04.255" status="PASS" starttime="20190121 13:04:04.195"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:04:04.305" status="PASS" starttime="20190121 13:04:04.258"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:04:06.313">Slept 2 seconds</msg>
<status endtime="20190121 13:04:06.315" status="PASS" starttime="20190121 13:04:04.308"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190121 13:04:06.364" status="PASS" starttime="20190121 13:04:06.318"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:04:06.414" status="PASS" starttime="20190121 13:04:06.367"></status>
</kw>
<status endtime="20190121 13:04:06.418" status="PASS" starttime="20190121 13:04:04.113"></status>
</kw>
<doc>Implements Test Task SKTB-49038</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status endtime="20190121 13:04:06.419" critical="yes" status="FAIL" starttime="20190121 13:03:57.418">'01' does not contain '00'</status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg level="INFO" timestamp="20190121 13:04:07.902">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190121 13:04:07.952">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190121 13:04:07.954" status="PASS" starttime="20190121 13:04:06.469"></status>
</kw>
<status endtime="20190121 13:04:07.974" status="PASS" starttime="20190121 13:04:06.435"></status>
</kw>
<status endtime="20190121 13:04:07.977" status="PASS" starttime="20190121 13:04:06.429"></status>
</kw>
<doc>Chorus GPIO input 1,2,3 BID_wul test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190121 13:04:07.977" status="FAIL" starttime="20190121 13:03:54.597"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-49357.robot" id="s1-s12" name="SKTB-49357">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:04:08.721">Connecting to tnt-server localhost...</msg>
<status endtime="20190121 13:04:08.729" status="PASS" starttime="20190121 13:04:08.704"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:04:08.756">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190121 13:04:08.757">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190121 13:04:10.909">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190121 13:04:10.911" status="PASS" starttime="20190121 13:04:08.732"></status>
</kw>
<status endtime="20190121 13:04:10.934" status="PASS" starttime="20190121 13:04:08.698"></status>
</kw>
<test id="s1-s12-t1" name="SKTB-49357 Gpio pwm test">
<kw type="setup" name="Test_precondition">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:04:11.091" status="PASS" starttime="20190121 13:04:10.998"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:04:11.215" status="PASS" starttime="20190121 13:04:11.094"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:04:11.360" status="PASS" starttime="20190121 13:04:11.218"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:04:13.391">Slept 2 seconds</msg>
<status endtime="20190121 13:04:13.393" status="PASS" starttime="20190121 13:04:11.363"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:04:13.442" status="PASS" starttime="20190121 13:04:13.395"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:04:13.499" status="PASS" starttime="20190121 13:04:13.446"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:04:13.553" status="PASS" starttime="20190121 13:04:13.505"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190121 13:04:13.605" status="PASS" starttime="20190121 13:04:13.556"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190121 13:04:13.700" status="PASS" starttime="20190121 13:04:13.608"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190121 13:04:13.822" status="PASS" starttime="20190121 13:04:13.707"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Set State">
<arguments>
<arg>timeout</arg>
<arg>${15000}</arg>
</arguments>
<status endtime="20190121 13:04:13.886" status="PASS" starttime="20190121 13:04:13.825"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:04:14.896">Slept 1 second</msg>
<status endtime="20190121 13:04:14.899" status="PASS" starttime="20190121 13:04:13.889"></status>
</kw>
<status endtime="20190121 13:04:14.901" status="PASS" starttime="20190121 13:04:10.977"></status>
</kw>
<kw name="digit_out_hs_1">
<doc>Set pwm for the digital output hs 1</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output hs 1</arg>
</arguments>
<status endtime="20190121 13:04:14.916" status="PASS" starttime="20190121 13:04:14.911"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_1}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:14.931" status="PASS" starttime="20190121 13:04:14.926"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:14.951">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0020 20</msg>
<status endtime="20190121 13:04:14.951" status="PASS" starttime="20190121 13:04:14.943"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:14.960" status="PASS" starttime="20190121 13:04:14.954"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:15.166">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 00 01 43 3D F7</msg>
<status endtime="20190121 13:04:15.167" status="PASS" starttime="20190121 13:04:14.963"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:15.176" status="PASS" starttime="20190121 13:04:15.170"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:15.185" status="PASS" starttime="20190121 13:04:15.179"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:15.196">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '00', '01', '43', '3D', 'F7']</msg>
<status endtime="20190121 13:04:15.197" status="PASS" starttime="20190121 13:04:15.187"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:15.205">${gpio_id} = 00</msg>
<status endtime="20190121 13:04:15.206" status="PASS" starttime="20190121 13:04:15.199"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:15.214" status="PASS" starttime="20190121 13:04:15.209"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:15.223">${ret_val} = 00</msg>
<status endtime="20190121 13:04:15.224" status="PASS" starttime="20190121 13:04:15.218"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:15.229">${resp} = 00</msg>
<status endtime="20190121 13:04:15.230" status="PASS" starttime="20190121 13:04:14.933"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:15.238" status="PASS" starttime="20190121 13:04:15.232"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:15.245" status="PASS" starttime="20190121 13:04:15.241"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:15.265">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0064 64</msg>
<status endtime="20190121 13:04:15.266" status="PASS" starttime="20190121 13:04:15.258"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:15.275" status="PASS" starttime="20190121 13:04:15.269"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:15.505">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 00 01 44 3D F0</msg>
<status endtime="20190121 13:04:15.506" status="PASS" starttime="20190121 13:04:15.277"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:15.515" status="PASS" starttime="20190121 13:04:15.510"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:15.523" status="PASS" starttime="20190121 13:04:15.518"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:15.532">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '00', '01', '44', '3D', 'F0']</msg>
<status endtime="20190121 13:04:15.532" status="PASS" starttime="20190121 13:04:15.526"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:15.549">${gpio_id} = 00</msg>
<status endtime="20190121 13:04:15.550" status="PASS" starttime="20190121 13:04:15.535"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:15.568" status="PASS" starttime="20190121 13:04:15.557"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:15.590">${ret_val} = 00</msg>
<status endtime="20190121 13:04:15.591" status="PASS" starttime="20190121 13:04:15.575"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:15.595">${resp} = 00</msg>
<status endtime="20190121 13:04:15.595" status="PASS" starttime="20190121 13:04:15.247"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:15.604" status="PASS" starttime="20190121 13:04:15.598"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:15.612" status="PASS" starttime="20190121 13:04:15.607"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:15.634">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0001 01</msg>
<status endtime="20190121 13:04:15.635" status="PASS" starttime="20190121 13:04:15.626"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:15.643" status="PASS" starttime="20190121 13:04:15.637"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:15.846">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 00 01 45 3D F1</msg>
<status endtime="20190121 13:04:15.846" status="PASS" starttime="20190121 13:04:15.646"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:15.856" status="PASS" starttime="20190121 13:04:15.850"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:15.865" status="PASS" starttime="20190121 13:04:15.859"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:15.873">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '00', '01', '45', '3D', 'F1']</msg>
<status endtime="20190121 13:04:15.874" status="PASS" starttime="20190121 13:04:15.868"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:15.883">${gpio_id} = 00</msg>
<status endtime="20190121 13:04:15.884" status="PASS" starttime="20190121 13:04:15.877"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:15.892" status="PASS" starttime="20190121 13:04:15.886"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:15.904">${ret_val} = 00</msg>
<status endtime="20190121 13:04:15.905" status="PASS" starttime="20190121 13:04:15.895"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:15.909">${resp} = 00</msg>
<status endtime="20190121 13:04:15.909" status="PASS" starttime="20190121 13:04:15.614"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:15.918" status="PASS" starttime="20190121 13:04:15.912"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:15.925" status="PASS" starttime="20190121 13:04:15.921"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:15.946">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0065 65</msg>
<status endtime="20190121 13:04:15.947" status="PASS" starttime="20190121 13:04:15.938"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:15.956" status="PASS" starttime="20190121 13:04:15.951"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:16.195">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 46 3C F2</msg>
<status endtime="20190121 13:04:16.197" status="PASS" starttime="20190121 13:04:15.959"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:16.205" status="PASS" starttime="20190121 13:04:16.200"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:16.213" status="PASS" starttime="20190121 13:04:16.208"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:16.221">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '46', '3C', 'F2']</msg>
<status endtime="20190121 13:04:16.222" status="PASS" starttime="20190121 13:04:16.216"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:16.232">${gpio_id} = 00</msg>
<status endtime="20190121 13:04:16.233" status="PASS" starttime="20190121 13:04:16.225"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:16.241" status="PASS" starttime="20190121 13:04:16.235"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:16.249">${ret_val} = 01</msg>
<status endtime="20190121 13:04:16.250" status="PASS" starttime="20190121 13:04:16.244"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:16.254">${resp} = 01</msg>
<status endtime="20190121 13:04:16.255" status="PASS" starttime="20190121 13:04:15.927"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:16.263" status="PASS" starttime="20190121 13:04:16.257"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:16.271" status="PASS" starttime="20190121 13:04:16.266"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:16.301">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0020 65</msg>
<status endtime="20190121 13:04:16.302" status="PASS" starttime="20190121 13:04:16.284"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:16.318" status="PASS" starttime="20190121 13:04:16.309"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:16.529">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 47 3C F3</msg>
<status endtime="20190121 13:04:16.530" status="PASS" starttime="20190121 13:04:16.321"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:16.538" status="PASS" starttime="20190121 13:04:16.533"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:16.547" status="PASS" starttime="20190121 13:04:16.541"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:16.555">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '47', '3C', 'F3']</msg>
<status endtime="20190121 13:04:16.556" status="PASS" starttime="20190121 13:04:16.550"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:16.564">${gpio_id} = 00</msg>
<status endtime="20190121 13:04:16.565" status="PASS" starttime="20190121 13:04:16.559"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:16.574" status="PASS" starttime="20190121 13:04:16.568"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:16.582">${ret_val} = 01</msg>
<status endtime="20190121 13:04:16.583" status="PASS" starttime="20190121 13:04:16.577"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:16.587">${resp} = 01</msg>
<status endtime="20190121 13:04:16.588" status="PASS" starttime="20190121 13:04:16.273"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:16.596" status="PASS" starttime="20190121 13:04:16.591"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:16.604" status="PASS" starttime="20190121 13:04:16.599"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:16.628">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0065 20</msg>
<status endtime="20190121 13:04:16.629" status="PASS" starttime="20190121 13:04:16.620"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:16.637" status="PASS" starttime="20190121 13:04:16.632"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:16.868">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 42 3C F6</msg>
<status endtime="20190121 13:04:16.869" status="PASS" starttime="20190121 13:04:16.640"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:16.878" status="PASS" starttime="20190121 13:04:16.872"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:16.887" status="PASS" starttime="20190121 13:04:16.881"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:16.896">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '42', '3C', 'F6']</msg>
<status endtime="20190121 13:04:16.897" status="PASS" starttime="20190121 13:04:16.890"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:16.905">${gpio_id} = 00</msg>
<status endtime="20190121 13:04:16.906" status="PASS" starttime="20190121 13:04:16.899"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:16.914" status="PASS" starttime="20190121 13:04:16.909"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:16.923">${ret_val} = 01</msg>
<status endtime="20190121 13:04:16.924" status="PASS" starttime="20190121 13:04:16.917"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:16.927">${resp} = 01</msg>
<status endtime="20190121 13:04:16.928" status="PASS" starttime="20190121 13:04:16.606"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:16.937" status="PASS" starttime="20190121 13:04:16.931"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:16.944" status="PASS" starttime="20190121 13:04:16.940"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:16.964">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0020 00</msg>
<status endtime="20190121 13:04:16.965" status="PASS" starttime="20190121 13:04:16.957"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:16.974" status="PASS" starttime="20190121 13:04:16.968"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:17.202">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 43 3C F7</msg>
<status endtime="20190121 13:04:17.203" status="PASS" starttime="20190121 13:04:16.977"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:17.212" status="PASS" starttime="20190121 13:04:17.207"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:17.234" status="PASS" starttime="20190121 13:04:17.215"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:17.242">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '43', '3C', 'F7']</msg>
<status endtime="20190121 13:04:17.243" status="PASS" starttime="20190121 13:04:17.237"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:17.264">${gpio_id} = 00</msg>
<status endtime="20190121 13:04:17.265" status="PASS" starttime="20190121 13:04:17.258"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:17.275" status="PASS" starttime="20190121 13:04:17.268"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:17.287">${ret_val} = 01</msg>
<status endtime="20190121 13:04:17.288" status="PASS" starttime="20190121 13:04:17.278"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:17.301">${resp} = 01</msg>
<status endtime="20190121 13:04:17.302" status="PASS" starttime="20190121 13:04:16.946"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:17.319" status="PASS" starttime="20190121 13:04:17.309"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:17.335" status="PASS" starttime="20190121 13:04:17.326"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:17.355">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0000 20</msg>
<status endtime="20190121 13:04:17.356" status="PASS" starttime="20190121 13:04:17.348"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:17.366" status="PASS" starttime="20190121 13:04:17.360"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:17.568">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 44 3C F0</msg>
<status endtime="20190121 13:04:17.569" status="PASS" starttime="20190121 13:04:17.369"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:17.579" status="PASS" starttime="20190121 13:04:17.573"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:17.591" status="PASS" starttime="20190121 13:04:17.582"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:17.599">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '44', '3C', 'F0']</msg>
<status endtime="20190121 13:04:17.600" status="PASS" starttime="20190121 13:04:17.594"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:17.608">${gpio_id} = 00</msg>
<status endtime="20190121 13:04:17.609" status="PASS" starttime="20190121 13:04:17.603"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:17.618" status="PASS" starttime="20190121 13:04:17.612"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:17.626">${ret_val} = 01</msg>
<status endtime="20190121 13:04:17.627" status="PASS" starttime="20190121 13:04:17.621"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:17.631">${resp} = 01</msg>
<status endtime="20190121 13:04:17.631" status="PASS" starttime="20190121 13:04:17.337"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:17.640" status="PASS" starttime="20190121 13:04:17.634"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:17.647" status="PASS" starttime="20190121 13:04:17.643"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:17.668">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0000 00</msg>
<status endtime="20190121 13:04:17.669" status="PASS" starttime="20190121 13:04:17.661"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:17.677" status="PASS" starttime="20190121 13:04:17.672"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:17.914">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 47 3C F3</msg>
<status endtime="20190121 13:04:17.915" status="PASS" starttime="20190121 13:04:17.681"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:17.925" status="PASS" starttime="20190121 13:04:17.918"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:17.933" status="PASS" starttime="20190121 13:04:17.927"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:17.941">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '47', '3C', 'F3']</msg>
<status endtime="20190121 13:04:17.942" status="PASS" starttime="20190121 13:04:17.936"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:17.950">${gpio_id} = 00</msg>
<status endtime="20190121 13:04:17.951" status="PASS" starttime="20190121 13:04:17.945"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:18.000" status="PASS" starttime="20190121 13:04:17.972"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:18.026">${ret_val} = 01</msg>
<status endtime="20190121 13:04:18.026" status="PASS" starttime="20190121 13:04:18.007"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:18.034">${resp} = 01</msg>
<status endtime="20190121 13:04:18.035" status="PASS" starttime="20190121 13:04:17.650"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:18.044" status="PASS" starttime="20190121 13:04:18.038"></status>
</kw>
<status endtime="20190121 13:04:18.046" status="PASS" starttime="20190121 13:04:14.918"></status>
</kw>
<status endtime="20190121 13:04:18.048" status="PASS" starttime="20190121 13:04:14.905"></status>
</kw>
<kw name="digit_out_hs_2">
<doc>Set pwm for the digital output hs 2</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output hs 2</arg>
</arguments>
<status endtime="20190121 13:04:18.061" status="PASS" starttime="20190121 13:04:18.057"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_2}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:18.076" status="PASS" starttime="20190121 13:04:18.071"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:18.097">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0020 20</msg>
<status endtime="20190121 13:04:18.098" status="PASS" starttime="20190121 13:04:18.090"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:18.107" status="PASS" starttime="20190121 13:04:18.101"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:18.309">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 01 01 40 3D F5</msg>
<status endtime="20190121 13:04:18.310" status="PASS" starttime="20190121 13:04:18.110"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:18.325" status="PASS" starttime="20190121 13:04:18.314"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:18.344" status="PASS" starttime="20190121 13:04:18.330"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:18.360">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '01', '01', '40', '3D', 'F5']</msg>
<status endtime="20190121 13:04:18.361" status="PASS" starttime="20190121 13:04:18.347"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:18.387">${gpio_id} = 01</msg>
<status endtime="20190121 13:04:18.388" status="PASS" starttime="20190121 13:04:18.364"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:18.397" status="PASS" starttime="20190121 13:04:18.391"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:18.405">${ret_val} = 00</msg>
<status endtime="20190121 13:04:18.406" status="PASS" starttime="20190121 13:04:18.400"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:18.410">${resp} = 00</msg>
<status endtime="20190121 13:04:18.411" status="PASS" starttime="20190121 13:04:18.078"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:18.419" status="PASS" starttime="20190121 13:04:18.413"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:18.426" status="PASS" starttime="20190121 13:04:18.422"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:18.447">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0064 64</msg>
<status endtime="20190121 13:04:18.448" status="PASS" starttime="20190121 13:04:18.439"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:18.456" status="PASS" starttime="20190121 13:04:18.451"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:18.693">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 01 01 41 3D F4</msg>
<status endtime="20190121 13:04:18.694" status="PASS" starttime="20190121 13:04:18.459"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:18.702" status="PASS" starttime="20190121 13:04:18.697"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:18.711" status="PASS" starttime="20190121 13:04:18.705"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:18.719">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '01', '01', '41', '3D', 'F4']</msg>
<status endtime="20190121 13:04:18.720" status="PASS" starttime="20190121 13:04:18.714"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:18.729">${gpio_id} = 01</msg>
<status endtime="20190121 13:04:18.730" status="PASS" starttime="20190121 13:04:18.723"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:18.738" status="PASS" starttime="20190121 13:04:18.732"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:18.747">${ret_val} = 00</msg>
<status endtime="20190121 13:04:18.748" status="PASS" starttime="20190121 13:04:18.741"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:18.751">${resp} = 00</msg>
<status endtime="20190121 13:04:18.752" status="PASS" starttime="20190121 13:04:18.428"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:18.762" status="PASS" starttime="20190121 13:04:18.755"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:18.770" status="PASS" starttime="20190121 13:04:18.765"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:18.790">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0001 01</msg>
<status endtime="20190121 13:04:18.791" status="PASS" starttime="20190121 13:04:18.782"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:18.817" status="PASS" starttime="20190121 13:04:18.803"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:19.027">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 01 01 42 3D F7</msg>
<status endtime="20190121 13:04:19.029" status="PASS" starttime="20190121 13:04:18.824"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:19.038" status="PASS" starttime="20190121 13:04:19.032"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:19.047" status="PASS" starttime="20190121 13:04:19.041"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:19.054">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '01', '01', '42', '3D', 'F7']</msg>
<status endtime="20190121 13:04:19.055" status="PASS" starttime="20190121 13:04:19.050"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:19.064">${gpio_id} = 01</msg>
<status endtime="20190121 13:04:19.065" status="PASS" starttime="20190121 13:04:19.058"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:19.073" status="PASS" starttime="20190121 13:04:19.067"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:19.082">${ret_val} = 00</msg>
<status endtime="20190121 13:04:19.082" status="PASS" starttime="20190121 13:04:19.076"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:19.086">${resp} = 00</msg>
<status endtime="20190121 13:04:19.087" status="PASS" starttime="20190121 13:04:18.772"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:19.095" status="PASS" starttime="20190121 13:04:19.090"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:19.103" status="PASS" starttime="20190121 13:04:19.098"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:19.127">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0065 65</msg>
<status endtime="20190121 13:04:19.128" status="PASS" starttime="20190121 13:04:19.120"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:19.137" status="PASS" starttime="20190121 13:04:19.131"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:19.378">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 43 3C F6</msg>
<status endtime="20190121 13:04:19.379" status="PASS" starttime="20190121 13:04:19.140"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:19.388" status="PASS" starttime="20190121 13:04:19.383"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:19.397" status="PASS" starttime="20190121 13:04:19.391"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:19.405">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '43', '3C', 'F6']</msg>
<status endtime="20190121 13:04:19.406" status="PASS" starttime="20190121 13:04:19.400"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:19.414">${gpio_id} = 01</msg>
<status endtime="20190121 13:04:19.415" status="PASS" starttime="20190121 13:04:19.408"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:19.423" status="PASS" starttime="20190121 13:04:19.418"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:19.433">${ret_val} = 01</msg>
<status endtime="20190121 13:04:19.433" status="PASS" starttime="20190121 13:04:19.426"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:19.437">${resp} = 01</msg>
<status endtime="20190121 13:04:19.438" status="PASS" starttime="20190121 13:04:19.105"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:19.446" status="PASS" starttime="20190121 13:04:19.441"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:19.454" status="PASS" starttime="20190121 13:04:19.449"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:19.474">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0020 65</msg>
<status endtime="20190121 13:04:19.475" status="PASS" starttime="20190121 13:04:19.467"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:19.483" status="PASS" starttime="20190121 13:04:19.478"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:19.742">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 44 3C F1</msg>
<status endtime="20190121 13:04:19.743" status="PASS" starttime="20190121 13:04:19.486"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:19.764" status="PASS" starttime="20190121 13:04:19.746"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:19.786" status="PASS" starttime="20190121 13:04:19.767"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:19.820">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '44', '3C', 'F1']</msg>
<status endtime="20190121 13:04:19.825" status="PASS" starttime="20190121 13:04:19.789"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:19.843">${gpio_id} = 01</msg>
<status endtime="20190121 13:04:19.844" status="PASS" starttime="20190121 13:04:19.828"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:19.873" status="PASS" starttime="20190121 13:04:19.867"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:19.897">${ret_val} = 01</msg>
<status endtime="20190121 13:04:19.898" status="PASS" starttime="20190121 13:04:19.891"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:19.908">${resp} = 01</msg>
<status endtime="20190121 13:04:19.909" status="PASS" starttime="20190121 13:04:19.456"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:19.926" status="PASS" starttime="20190121 13:04:19.912"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:19.938" status="PASS" starttime="20190121 13:04:19.929"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:19.959">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0065 20</msg>
<status endtime="20190121 13:04:19.960" status="PASS" starttime="20190121 13:04:19.952"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:19.968" status="PASS" starttime="20190121 13:04:19.963"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:20.199">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 45 3C F0</msg>
<status endtime="20190121 13:04:20.201" status="PASS" starttime="20190121 13:04:19.971"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:20.209" status="PASS" starttime="20190121 13:04:20.204"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:20.218" status="PASS" starttime="20190121 13:04:20.212"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:20.226">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '45', '3C', 'F0']</msg>
<status endtime="20190121 13:04:20.227" status="PASS" starttime="20190121 13:04:20.221"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:20.235">${gpio_id} = 01</msg>
<status endtime="20190121 13:04:20.236" status="PASS" starttime="20190121 13:04:20.230"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:20.246" status="PASS" starttime="20190121 13:04:20.240"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:20.254">${ret_val} = 01</msg>
<status endtime="20190121 13:04:20.255" status="PASS" starttime="20190121 13:04:20.248"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:20.258">${resp} = 01</msg>
<status endtime="20190121 13:04:20.259" status="PASS" starttime="20190121 13:04:19.941"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:20.268" status="PASS" starttime="20190121 13:04:20.262"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:20.276" status="PASS" starttime="20190121 13:04:20.271"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:20.310">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0020 00</msg>
<status endtime="20190121 13:04:20.311" status="PASS" starttime="20190121 13:04:20.289"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:20.327" status="PASS" starttime="20190121 13:04:20.318"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:20.619">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 46 3C F3</msg>
<status endtime="20190121 13:04:20.624" status="PASS" starttime="20190121 13:04:20.330"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:20.662" status="PASS" starttime="20190121 13:04:20.627"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:20.671" status="PASS" starttime="20190121 13:04:20.665"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:20.704">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '46', '3C', 'F3']</msg>
<status endtime="20190121 13:04:20.717" status="PASS" starttime="20190121 13:04:20.699"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:20.726">${gpio_id} = 01</msg>
<status endtime="20190121 13:04:20.727" status="PASS" starttime="20190121 13:04:20.721"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:20.747" status="PASS" starttime="20190121 13:04:20.741"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:20.785">${ret_val} = 01</msg>
<status endtime="20190121 13:04:20.786" status="PASS" starttime="20190121 13:04:20.779"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:20.796">${resp} = 01</msg>
<status endtime="20190121 13:04:20.797" status="PASS" starttime="20190121 13:04:20.278"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:20.812" status="PASS" starttime="20190121 13:04:20.800"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:20.843" status="PASS" starttime="20190121 13:04:20.815"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:20.898">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0000 20</msg>
<status endtime="20190121 13:04:20.899" status="PASS" starttime="20190121 13:04:20.876"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:20.918" status="PASS" starttime="20190121 13:04:20.902"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:21.165">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 45 3C F0</msg>
<status endtime="20190121 13:04:21.166" status="PASS" starttime="20190121 13:04:20.922"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:21.174" status="PASS" starttime="20190121 13:04:21.169"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:21.183" status="PASS" starttime="20190121 13:04:21.177"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:21.191">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '45', '3C', 'F0']</msg>
<status endtime="20190121 13:04:21.193" status="PASS" starttime="20190121 13:04:21.186"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:21.205">${gpio_id} = 01</msg>
<status endtime="20190121 13:04:21.206" status="PASS" starttime="20190121 13:04:21.196"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:21.215" status="PASS" starttime="20190121 13:04:21.209"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:21.223">${ret_val} = 01</msg>
<status endtime="20190121 13:04:21.224" status="PASS" starttime="20190121 13:04:21.217"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:21.227">${resp} = 01</msg>
<status endtime="20190121 13:04:21.228" status="PASS" starttime="20190121 13:04:20.845"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:21.237" status="PASS" starttime="20190121 13:04:21.231"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:21.245" status="PASS" starttime="20190121 13:04:21.240"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:21.266">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0000 00</msg>
<status endtime="20190121 13:04:21.266" status="PASS" starttime="20190121 13:04:21.258"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:21.275" status="PASS" starttime="20190121 13:04:21.269"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:21.622">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 46 3C F3</msg>
<status endtime="20190121 13:04:21.623" status="PASS" starttime="20190121 13:04:21.278"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:21.665" status="PASS" starttime="20190121 13:04:21.630"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:21.699" status="PASS" starttime="20190121 13:04:21.668"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:21.716">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '46', '3C', 'F3']</msg>
<status endtime="20190121 13:04:21.737" status="PASS" starttime="20190121 13:04:21.707"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:21.789">${gpio_id} = 01</msg>
<status endtime="20190121 13:04:21.790" status="PASS" starttime="20190121 13:04:21.740"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:21.812" status="PASS" starttime="20190121 13:04:21.793"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:21.821">${ret_val} = 01</msg>
<status endtime="20190121 13:04:21.834" status="PASS" starttime="20190121 13:04:21.815"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:21.838">${resp} = 01</msg>
<status endtime="20190121 13:04:21.839" status="PASS" starttime="20190121 13:04:21.247"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:21.860" status="PASS" starttime="20190121 13:04:21.842"></status>
</kw>
<status endtime="20190121 13:04:21.862" status="PASS" starttime="20190121 13:04:18.063"></status>
</kw>
<status endtime="20190121 13:04:21.865" status="PASS" starttime="20190121 13:04:18.050"></status>
</kw>
<kw name="digit_out_hs_3">
<doc>Set pwm for the digital output hs 3</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output hs 3</arg>
</arguments>
<status endtime="20190121 13:04:21.899" status="PASS" starttime="20190121 13:04:21.885"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_3}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:21.926" status="PASS" starttime="20190121 13:04:21.909"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:21.976">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0020 20</msg>
<status endtime="20190121 13:04:21.977" status="PASS" starttime="20190121 13:04:21.968"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:22.009" status="PASS" starttime="20190121 13:04:21.993"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:22.279">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 02 01 47 3D F1</msg>
<status endtime="20190121 13:04:22.280" status="PASS" starttime="20190121 13:04:22.012"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:22.312" status="PASS" starttime="20190121 13:04:22.283"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:22.346" status="PASS" starttime="20190121 13:04:22.315"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:22.354">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '02', '01', '47', '3D', 'F1']</msg>
<status endtime="20190121 13:04:22.355" status="PASS" starttime="20190121 13:04:22.349"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:22.380">${gpio_id} = 02</msg>
<status endtime="20190121 13:04:22.381" status="PASS" starttime="20190121 13:04:22.370"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:22.402" status="PASS" starttime="20190121 13:04:22.396"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:22.416">${ret_val} = 00</msg>
<status endtime="20190121 13:04:22.417" status="PASS" starttime="20190121 13:04:22.410"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:22.431">${resp} = 00</msg>
<status endtime="20190121 13:04:22.432" status="PASS" starttime="20190121 13:04:21.928"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:22.441" status="PASS" starttime="20190121 13:04:22.435"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:22.452" status="PASS" starttime="20190121 13:04:22.447"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:22.472">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0064 64</msg>
<status endtime="20190121 13:04:22.473" status="PASS" starttime="20190121 13:04:22.464"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:22.481" status="PASS" starttime="20190121 13:04:22.475"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:22.686">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 02 01 40 3D F6</msg>
<status endtime="20190121 13:04:22.687" status="PASS" starttime="20190121 13:04:22.484"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:22.696" status="PASS" starttime="20190121 13:04:22.690"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:22.705" status="PASS" starttime="20190121 13:04:22.699"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:22.713">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '02', '01', '40', '3D', 'F6']</msg>
<status endtime="20190121 13:04:22.714" status="PASS" starttime="20190121 13:04:22.708"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:22.722">${gpio_id} = 02</msg>
<status endtime="20190121 13:04:22.723" status="PASS" starttime="20190121 13:04:22.716"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:22.731" status="PASS" starttime="20190121 13:04:22.726"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:22.740">${ret_val} = 00</msg>
<status endtime="20190121 13:04:22.741" status="PASS" starttime="20190121 13:04:22.734"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:22.744">${resp} = 00</msg>
<status endtime="20190121 13:04:22.745" status="PASS" starttime="20190121 13:04:22.454"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:22.754" status="PASS" starttime="20190121 13:04:22.748"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:22.761" status="PASS" starttime="20190121 13:04:22.756"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:22.781">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0001 01</msg>
<status endtime="20190121 13:04:22.783" status="PASS" starttime="20190121 13:04:22.774"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:22.801" status="PASS" starttime="20190121 13:04:22.786"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:23.023">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 02 01 41 3D F7</msg>
<status endtime="20190121 13:04:23.023" status="PASS" starttime="20190121 13:04:22.808"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:23.033" status="PASS" starttime="20190121 13:04:23.027"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:23.042" status="PASS" starttime="20190121 13:04:23.036"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:23.050">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '02', '01', '41', '3D', 'F7']</msg>
<status endtime="20190121 13:04:23.051" status="PASS" starttime="20190121 13:04:23.045"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:23.059">${gpio_id} = 02</msg>
<status endtime="20190121 13:04:23.060" status="PASS" starttime="20190121 13:04:23.053"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:23.068" status="PASS" starttime="20190121 13:04:23.063"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:23.077">${ret_val} = 00</msg>
<status endtime="20190121 13:04:23.078" status="PASS" starttime="20190121 13:04:23.071"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:23.082">${resp} = 00</msg>
<status endtime="20190121 13:04:23.082" status="PASS" starttime="20190121 13:04:22.763"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:23.113" status="PASS" starttime="20190121 13:04:23.090"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:23.131" status="PASS" starttime="20190121 13:04:23.116"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:23.175">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0065 65</msg>
<status endtime="20190121 13:04:23.175" status="PASS" starttime="20190121 13:04:23.151"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:23.186" status="PASS" starttime="20190121 13:04:23.178"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:23.414">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 42 3C F4</msg>
<status endtime="20190121 13:04:23.415" status="PASS" starttime="20190121 13:04:23.189"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:23.423" status="PASS" starttime="20190121 13:04:23.418"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:23.432" status="PASS" starttime="20190121 13:04:23.426"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:23.440">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '42', '3C', 'F4']</msg>
<status endtime="20190121 13:04:23.441" status="PASS" starttime="20190121 13:04:23.435"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:23.450">${gpio_id} = 02</msg>
<status endtime="20190121 13:04:23.450" status="PASS" starttime="20190121 13:04:23.444"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:23.459" status="PASS" starttime="20190121 13:04:23.453"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:23.467">${ret_val} = 01</msg>
<status endtime="20190121 13:04:23.468" status="PASS" starttime="20190121 13:04:23.462"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:23.472">${resp} = 01</msg>
<status endtime="20190121 13:04:23.473" status="PASS" starttime="20190121 13:04:23.133"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:23.481" status="PASS" starttime="20190121 13:04:23.475"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:23.489" status="PASS" starttime="20190121 13:04:23.484"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:23.524">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0020 65</msg>
<status endtime="20190121 13:04:23.525" status="PASS" starttime="20190121 13:04:23.511"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:23.533" status="PASS" starttime="20190121 13:04:23.528"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:23.773">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 43 3C F5</msg>
<status endtime="20190121 13:04:23.774" status="PASS" starttime="20190121 13:04:23.540"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:23.783" status="PASS" starttime="20190121 13:04:23.777"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:23.791" status="PASS" starttime="20190121 13:04:23.786"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:23.799">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '43', '3C', 'F5']</msg>
<status endtime="20190121 13:04:23.800" status="PASS" starttime="20190121 13:04:23.794"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:23.809">${gpio_id} = 02</msg>
<status endtime="20190121 13:04:23.810" status="PASS" starttime="20190121 13:04:23.803"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:23.818" status="PASS" starttime="20190121 13:04:23.813"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:23.827">${ret_val} = 01</msg>
<status endtime="20190121 13:04:23.828" status="PASS" starttime="20190121 13:04:23.821"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:23.832">${resp} = 01</msg>
<status endtime="20190121 13:04:23.833" status="PASS" starttime="20190121 13:04:23.498"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:23.841" status="PASS" starttime="20190121 13:04:23.835"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:23.849" status="PASS" starttime="20190121 13:04:23.844"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:23.872">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0065 20</msg>
<status endtime="20190121 13:04:23.873" status="PASS" starttime="20190121 13:04:23.863"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:23.882" status="PASS" starttime="20190121 13:04:23.876"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:24.114">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 44 3C F2</msg>
<status endtime="20190121 13:04:24.115" status="PASS" starttime="20190121 13:04:23.885"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:24.163" status="PASS" starttime="20190121 13:04:24.127"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:24.172" status="PASS" starttime="20190121 13:04:24.167"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:24.193">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '44', '3C', 'F2']</msg>
<status endtime="20190121 13:04:24.194" status="PASS" starttime="20190121 13:04:24.188"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:24.205">${gpio_id} = 02</msg>
<status endtime="20190121 13:04:24.206" status="PASS" starttime="20190121 13:04:24.197"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:24.214" status="PASS" starttime="20190121 13:04:24.209"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:24.223">${ret_val} = 01</msg>
<status endtime="20190121 13:04:24.224" status="PASS" starttime="20190121 13:04:24.217"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:24.227">${resp} = 01</msg>
<status endtime="20190121 13:04:24.228" status="PASS" starttime="20190121 13:04:23.851"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:24.238" status="PASS" starttime="20190121 13:04:24.231"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:24.245" status="PASS" starttime="20190121 13:04:24.241"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:24.267">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0020 00</msg>
<status endtime="20190121 13:04:24.268" status="PASS" starttime="20190121 13:04:24.259"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:24.282" status="PASS" starttime="20190121 13:04:24.272"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:24.515">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 45 3C F3</msg>
<status endtime="20190121 13:04:24.516" status="PASS" starttime="20190121 13:04:24.286"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:24.525" status="PASS" starttime="20190121 13:04:24.519"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:24.533" status="PASS" starttime="20190121 13:04:24.528"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:24.541">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '45', '3C', 'F3']</msg>
<status endtime="20190121 13:04:24.542" status="PASS" starttime="20190121 13:04:24.536"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:24.551">${gpio_id} = 02</msg>
<status endtime="20190121 13:04:24.551" status="PASS" starttime="20190121 13:04:24.545"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:24.560" status="PASS" starttime="20190121 13:04:24.554"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:24.568">${ret_val} = 01</msg>
<status endtime="20190121 13:04:24.569" status="PASS" starttime="20190121 13:04:24.563"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:24.573">${resp} = 01</msg>
<status endtime="20190121 13:04:24.574" status="PASS" starttime="20190121 13:04:24.247"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:24.582" status="PASS" starttime="20190121 13:04:24.576"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:24.590" status="PASS" starttime="20190121 13:04:24.585"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:24.611">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0000 20</msg>
<status endtime="20190121 13:04:24.611" status="PASS" starttime="20190121 13:04:24.603"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:24.621" status="PASS" starttime="20190121 13:04:24.614"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:24.851">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 40 3C F6</msg>
<status endtime="20190121 13:04:24.852" status="PASS" starttime="20190121 13:04:24.624"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:24.861" status="PASS" starttime="20190121 13:04:24.855"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:24.870" status="PASS" starttime="20190121 13:04:24.863"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:24.878">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '40', '3C', 'F6']</msg>
<status endtime="20190121 13:04:24.879" status="PASS" starttime="20190121 13:04:24.874"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:24.888">${gpio_id} = 02</msg>
<status endtime="20190121 13:04:24.889" status="PASS" starttime="20190121 13:04:24.882"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:24.898" status="PASS" starttime="20190121 13:04:24.892"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:24.912">${ret_val} = 01</msg>
<status endtime="20190121 13:04:24.913" status="PASS" starttime="20190121 13:04:24.901"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:24.916">${resp} = 01</msg>
<status endtime="20190121 13:04:24.917" status="PASS" starttime="20190121 13:04:24.592"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:24.926" status="PASS" starttime="20190121 13:04:24.920"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:24.933" status="PASS" starttime="20190121 13:04:24.928"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:24.954">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0000 00</msg>
<status endtime="20190121 13:04:24.955" status="PASS" starttime="20190121 13:04:24.947"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:24.964" status="PASS" starttime="20190121 13:04:24.958"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:25.198">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 41 3C F7</msg>
<status endtime="20190121 13:04:25.199" status="PASS" starttime="20190121 13:04:24.967"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:25.208" status="PASS" starttime="20190121 13:04:25.202"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:25.217" status="PASS" starttime="20190121 13:04:25.211"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:25.225">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '41', '3C', 'F7']</msg>
<status endtime="20190121 13:04:25.226" status="PASS" starttime="20190121 13:04:25.220"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:25.234">${gpio_id} = 02</msg>
<status endtime="20190121 13:04:25.235" status="PASS" starttime="20190121 13:04:25.228"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:25.243" status="PASS" starttime="20190121 13:04:25.238"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:25.254">${ret_val} = 01</msg>
<status endtime="20190121 13:04:25.255" status="PASS" starttime="20190121 13:04:25.249"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:25.259">${resp} = 01</msg>
<status endtime="20190121 13:04:25.260" status="PASS" starttime="20190121 13:04:24.936"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:25.270" status="PASS" starttime="20190121 13:04:25.262"></status>
</kw>
<status endtime="20190121 13:04:25.273" status="PASS" starttime="20190121 13:04:21.901"></status>
</kw>
<status endtime="20190121 13:04:25.275" status="PASS" starttime="20190121 13:04:21.868"></status>
</kw>
<kw name="digit_out_hs_4">
<doc>Set for the digital output hs 4</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set for the digital output hs 4</arg>
</arguments>
<status endtime="20190121 13:04:25.288" status="PASS" starttime="20190121 13:04:25.284"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_4}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:25.325" status="PASS" starttime="20190121 13:04:25.312"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:25.349">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0020 20</msg>
<status endtime="20190121 13:04:25.350" status="PASS" starttime="20190121 13:04:25.341"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:25.358" status="PASS" starttime="20190121 13:04:25.353"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:25.562">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 03 01 42 3D F5</msg>
<status endtime="20190121 13:04:25.562" status="PASS" starttime="20190121 13:04:25.361"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:25.571" status="PASS" starttime="20190121 13:04:25.566"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:25.580" status="PASS" starttime="20190121 13:04:25.575"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:25.589">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '03', '01', '42', '3D', 'F5']</msg>
<status endtime="20190121 13:04:25.590" status="PASS" starttime="20190121 13:04:25.583"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:25.599">${gpio_id} = 03</msg>
<status endtime="20190121 13:04:25.600" status="PASS" starttime="20190121 13:04:25.593"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:25.608" status="PASS" starttime="20190121 13:04:25.602"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:25.617">${ret_val} = 00</msg>
<status endtime="20190121 13:04:25.618" status="PASS" starttime="20190121 13:04:25.611"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:25.622">${resp} = 00</msg>
<status endtime="20190121 13:04:25.622" status="PASS" starttime="20190121 13:04:25.327"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:25.635" status="PASS" starttime="20190121 13:04:25.625"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:25.642" status="PASS" starttime="20190121 13:04:25.638"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:25.663">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0064 64</msg>
<status endtime="20190121 13:04:25.664" status="PASS" starttime="20190121 13:04:25.656"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:25.672" status="PASS" starttime="20190121 13:04:25.667"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:25.902">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 03 01 43 3D F4</msg>
<status endtime="20190121 13:04:25.903" status="PASS" starttime="20190121 13:04:25.675"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:25.913" status="PASS" starttime="20190121 13:04:25.907"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:25.921" status="PASS" starttime="20190121 13:04:25.915"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:25.929">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '03', '01', '43', '3D', 'F4']</msg>
<status endtime="20190121 13:04:25.930" status="PASS" starttime="20190121 13:04:25.924"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:25.938">${gpio_id} = 03</msg>
<status endtime="20190121 13:04:25.939" status="PASS" starttime="20190121 13:04:25.933"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:25.948" status="PASS" starttime="20190121 13:04:25.942"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:25.956">${ret_val} = 00</msg>
<status endtime="20190121 13:04:25.957" status="PASS" starttime="20190121 13:04:25.951"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:25.961">${resp} = 00</msg>
<status endtime="20190121 13:04:25.962" status="PASS" starttime="20190121 13:04:25.645"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:25.970" status="PASS" starttime="20190121 13:04:25.965"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:25.978" status="PASS" starttime="20190121 13:04:25.973"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:25.998">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0001 01</msg>
<status endtime="20190121 13:04:25.998" status="PASS" starttime="20190121 13:04:25.990"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:26.008" status="PASS" starttime="20190121 13:04:26.001"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:26.238">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 03 01 44 3D F3</msg>
<status endtime="20190121 13:04:26.239" status="PASS" starttime="20190121 13:04:26.011"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:26.249" status="PASS" starttime="20190121 13:04:26.242"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:26.257" status="PASS" starttime="20190121 13:04:26.252"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:26.265">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '03', '01', '44', '3D', 'F3']</msg>
<status endtime="20190121 13:04:26.266" status="PASS" starttime="20190121 13:04:26.260"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:26.275">${gpio_id} = 03</msg>
<status endtime="20190121 13:04:26.275" status="PASS" starttime="20190121 13:04:26.269"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:26.284" status="PASS" starttime="20190121 13:04:26.278"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:26.302">${ret_val} = 00</msg>
<status endtime="20190121 13:04:26.303" status="PASS" starttime="20190121 13:04:26.287"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:26.309">${resp} = 00</msg>
<status endtime="20190121 13:04:26.310" status="PASS" starttime="20190121 13:04:25.980"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:26.330" status="PASS" starttime="20190121 13:04:26.321"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:26.340" status="PASS" starttime="20190121 13:04:26.335"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:26.364">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0065 65</msg>
<status endtime="20190121 13:04:26.365" status="PASS" starttime="20190121 13:04:26.353"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:26.375" status="PASS" starttime="20190121 13:04:26.368"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:26.578">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 45 3C F2</msg>
<status endtime="20190121 13:04:26.578" status="PASS" starttime="20190121 13:04:26.378"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:26.588" status="PASS" starttime="20190121 13:04:26.582"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:26.597" status="PASS" starttime="20190121 13:04:26.591"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:26.605">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '45', '3C', 'F2']</msg>
<status endtime="20190121 13:04:26.605" status="PASS" starttime="20190121 13:04:26.600"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:26.614">${gpio_id} = 03</msg>
<status endtime="20190121 13:04:26.615" status="PASS" starttime="20190121 13:04:26.609"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:26.624" status="PASS" starttime="20190121 13:04:26.618"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:26.632">${ret_val} = 01</msg>
<status endtime="20190121 13:04:26.633" status="PASS" starttime="20190121 13:04:26.627"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:26.637">${resp} = 01</msg>
<status endtime="20190121 13:04:26.638" status="PASS" starttime="20190121 13:04:26.342"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:26.646" status="PASS" starttime="20190121 13:04:26.640"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:26.653" status="PASS" starttime="20190121 13:04:26.649"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:26.674">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0020 65</msg>
<status endtime="20190121 13:04:26.675" status="PASS" starttime="20190121 13:04:26.666"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:26.684" status="PASS" starttime="20190121 13:04:26.677"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:26.918">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 46 3C F1</msg>
<status endtime="20190121 13:04:26.918" status="PASS" starttime="20190121 13:04:26.687"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:26.927" status="PASS" starttime="20190121 13:04:26.921"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:26.936" status="PASS" starttime="20190121 13:04:26.930"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:26.943">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '46', '3C', 'F1']</msg>
<status endtime="20190121 13:04:26.944" status="PASS" starttime="20190121 13:04:26.938"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:26.953">${gpio_id} = 03</msg>
<status endtime="20190121 13:04:26.954" status="PASS" starttime="20190121 13:04:26.947"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:26.962" status="PASS" starttime="20190121 13:04:26.957"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:26.971">${ret_val} = 01</msg>
<status endtime="20190121 13:04:26.971" status="PASS" starttime="20190121 13:04:26.965"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:26.975">${resp} = 01</msg>
<status endtime="20190121 13:04:26.976" status="PASS" starttime="20190121 13:04:26.656"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:26.984" status="PASS" starttime="20190121 13:04:26.979"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:26.992" status="PASS" starttime="20190121 13:04:26.987"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:27.013">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0065 20</msg>
<status endtime="20190121 13:04:27.014" status="PASS" starttime="20190121 13:04:27.005"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:27.022" status="PASS" starttime="20190121 13:04:27.017"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:27.258">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 47 3C F0</msg>
<status endtime="20190121 13:04:27.259" status="PASS" starttime="20190121 13:04:27.025"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:27.268" status="PASS" starttime="20190121 13:04:27.263"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:27.277" status="PASS" starttime="20190121 13:04:27.271"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:27.288">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '47', '3C', 'F0']</msg>
<status endtime="20190121 13:04:27.289" status="PASS" starttime="20190121 13:04:27.280"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:27.316">${gpio_id} = 03</msg>
<status endtime="20190121 13:04:27.317" status="PASS" starttime="20190121 13:04:27.302"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:27.330" status="PASS" starttime="20190121 13:04:27.324"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:27.343">${ret_val} = 01</msg>
<status endtime="20190121 13:04:27.344" status="PASS" starttime="20190121 13:04:27.337"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:27.348">${resp} = 01</msg>
<status endtime="20190121 13:04:27.349" status="PASS" starttime="20190121 13:04:26.994"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:27.357" status="PASS" starttime="20190121 13:04:27.351"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:27.365" status="PASS" starttime="20190121 13:04:27.360"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:27.388">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0020 00</msg>
<status endtime="20190121 13:04:27.389" status="PASS" starttime="20190121 13:04:27.379"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:27.397" status="PASS" starttime="20190121 13:04:27.392"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:27.599">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 40 3C F7</msg>
<status endtime="20190121 13:04:27.600" status="PASS" starttime="20190121 13:04:27.400"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:27.609" status="PASS" starttime="20190121 13:04:27.603"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:27.618" status="PASS" starttime="20190121 13:04:27.612"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:27.626">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '40', '3C', 'F7']</msg>
<status endtime="20190121 13:04:27.627" status="PASS" starttime="20190121 13:04:27.621"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:27.635">${gpio_id} = 03</msg>
<status endtime="20190121 13:04:27.636" status="PASS" starttime="20190121 13:04:27.630"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:27.644" status="PASS" starttime="20190121 13:04:27.639"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:27.653">${ret_val} = 01</msg>
<status endtime="20190121 13:04:27.654" status="PASS" starttime="20190121 13:04:27.647"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:27.657">${resp} = 01</msg>
<status endtime="20190121 13:04:27.658" status="PASS" starttime="20190121 13:04:27.367"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:27.667" status="PASS" starttime="20190121 13:04:27.661"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:27.674" status="PASS" starttime="20190121 13:04:27.670"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:27.694">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0000 20</msg>
<status endtime="20190121 13:04:27.695" status="PASS" starttime="20190121 13:04:27.687"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:27.704" status="PASS" starttime="20190121 13:04:27.698"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:27.937">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 41 3C F6</msg>
<status endtime="20190121 13:04:27.938" status="PASS" starttime="20190121 13:04:27.707"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:27.947" status="PASS" starttime="20190121 13:04:27.941"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:27.955" status="PASS" starttime="20190121 13:04:27.950"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:27.963">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '41', '3C', 'F6']</msg>
<status endtime="20190121 13:04:27.964" status="PASS" starttime="20190121 13:04:27.958"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:27.973">${gpio_id} = 03</msg>
<status endtime="20190121 13:04:27.973" status="PASS" starttime="20190121 13:04:27.967"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:27.982" status="PASS" starttime="20190121 13:04:27.976"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:27.990">${ret_val} = 01</msg>
<status endtime="20190121 13:04:27.991" status="PASS" starttime="20190121 13:04:27.985"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:27.995">${resp} = 01</msg>
<status endtime="20190121 13:04:27.996" status="PASS" starttime="20190121 13:04:27.676"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:28.005" status="PASS" starttime="20190121 13:04:27.999"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:28.013" status="PASS" starttime="20190121 13:04:28.008"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:28.038">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0000 00</msg>
<status endtime="20190121 13:04:28.039" status="PASS" starttime="20190121 13:04:28.031"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:28.065" status="PASS" starttime="20190121 13:04:28.050"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:28.277">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 42 3C F5</msg>
<status endtime="20190121 13:04:28.278" status="PASS" starttime="20190121 13:04:28.068"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:28.288" status="PASS" starttime="20190121 13:04:28.281"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:28.297" status="PASS" starttime="20190121 13:04:28.291"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:28.305">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '42', '3C', 'F5']</msg>
<status endtime="20190121 13:04:28.306" status="PASS" starttime="20190121 13:04:28.300"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:28.315">${gpio_id} = 03</msg>
<status endtime="20190121 13:04:28.315" status="PASS" starttime="20190121 13:04:28.309"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:28.324" status="PASS" starttime="20190121 13:04:28.318"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:28.332">${ret_val} = 01</msg>
<status endtime="20190121 13:04:28.333" status="PASS" starttime="20190121 13:04:28.327"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:28.337">${resp} = 01</msg>
<status endtime="20190121 13:04:28.338" status="PASS" starttime="20190121 13:04:28.016"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:28.346" status="PASS" starttime="20190121 13:04:28.340"></status>
</kw>
<status endtime="20190121 13:04:28.348" status="PASS" starttime="20190121 13:04:25.291"></status>
</kw>
<status endtime="20190121 13:04:28.351" status="PASS" starttime="20190121 13:04:25.277"></status>
</kw>
<kw name="digit_out_led1">
<doc>Set pwm for the digital output led1</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output led1</arg>
</arguments>
<status endtime="20190121 13:04:28.364" status="PASS" starttime="20190121 13:04:28.359"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:28.379" status="PASS" starttime="20190121 13:04:28.373"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:28.399">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0020 20</msg>
<status endtime="20190121 13:04:28.400" status="PASS" starttime="20190121 13:04:28.392"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:28.409" status="PASS" starttime="20190121 13:04:28.403"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:28.643">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 04 01 43 3D F3</msg>
<status endtime="20190121 13:04:28.643" status="PASS" starttime="20190121 13:04:28.412"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:28.653" status="PASS" starttime="20190121 13:04:28.647"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:28.661" status="PASS" starttime="20190121 13:04:28.655"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:28.669">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '04', '01', '43', '3D', 'F3']</msg>
<status endtime="20190121 13:04:28.670" status="PASS" starttime="20190121 13:04:28.664"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:28.678">${gpio_id} = 04</msg>
<status endtime="20190121 13:04:28.679" status="PASS" starttime="20190121 13:04:28.673"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:28.688" status="PASS" starttime="20190121 13:04:28.682"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:28.697">${ret_val} = 00</msg>
<status endtime="20190121 13:04:28.698" status="PASS" starttime="20190121 13:04:28.691"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:28.701">${resp} = 00</msg>
<status endtime="20190121 13:04:28.702" status="PASS" starttime="20190121 13:04:28.382"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:28.711" status="PASS" starttime="20190121 13:04:28.705"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:28.718" status="PASS" starttime="20190121 13:04:28.713"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:28.743">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0064 64</msg>
<status endtime="20190121 13:04:28.744" status="PASS" starttime="20190121 13:04:28.735"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:28.752" status="PASS" starttime="20190121 13:04:28.747"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:28.984">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 04 01 44 3D F4</msg>
<status endtime="20190121 13:04:28.986" status="PASS" starttime="20190121 13:04:28.755"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:28.995" status="PASS" starttime="20190121 13:04:28.989"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:29.004" status="PASS" starttime="20190121 13:04:28.998"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:29.012">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '04', '01', '44', '3D', 'F4']</msg>
<status endtime="20190121 13:04:29.013" status="PASS" starttime="20190121 13:04:29.007"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:29.022">${gpio_id} = 04</msg>
<status endtime="20190121 13:04:29.022" status="PASS" starttime="20190121 13:04:29.016"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:29.031" status="PASS" starttime="20190121 13:04:29.025"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:29.039">${ret_val} = 00</msg>
<status endtime="20190121 13:04:29.040" status="PASS" starttime="20190121 13:04:29.034"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:29.052">${resp} = 00</msg>
<status endtime="20190121 13:04:29.059" status="PASS" starttime="20190121 13:04:28.721"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:29.077" status="PASS" starttime="20190121 13:04:29.062"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:29.091" status="PASS" starttime="20190121 13:04:29.080"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:29.111">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0001 01</msg>
<status endtime="20190121 13:04:29.112" status="PASS" starttime="20190121 13:04:29.104"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:29.121" status="PASS" starttime="20190121 13:04:29.115"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:29.323">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 04 01 45 3D F5</msg>
<status endtime="20190121 13:04:29.324" status="PASS" starttime="20190121 13:04:29.124"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:29.333" status="PASS" starttime="20190121 13:04:29.327"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:29.341" status="PASS" starttime="20190121 13:04:29.336"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:29.349">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '04', '01', '45', '3D', 'F5']</msg>
<status endtime="20190121 13:04:29.350" status="PASS" starttime="20190121 13:04:29.344"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:29.360">${gpio_id} = 04</msg>
<status endtime="20190121 13:04:29.361" status="PASS" starttime="20190121 13:04:29.353"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:29.369" status="PASS" starttime="20190121 13:04:29.363"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:29.379">${ret_val} = 00</msg>
<status endtime="20190121 13:04:29.379" status="PASS" starttime="20190121 13:04:29.372"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:29.383">${resp} = 00</msg>
<status endtime="20190121 13:04:29.384" status="PASS" starttime="20190121 13:04:29.093"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:29.392" status="PASS" starttime="20190121 13:04:29.387"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:29.400" status="PASS" starttime="20190121 13:04:29.395"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:29.421">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0065 65</msg>
<status endtime="20190121 13:04:29.421" status="PASS" starttime="20190121 13:04:29.413"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:29.430" status="PASS" starttime="20190121 13:04:29.424"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:29.658">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 46 3C F6</msg>
<status endtime="20190121 13:04:29.659" status="PASS" starttime="20190121 13:04:29.433"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:29.668" status="PASS" starttime="20190121 13:04:29.662"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:29.680" status="PASS" starttime="20190121 13:04:29.671"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:29.688">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '46', '3C', 'F6']</msg>
<status endtime="20190121 13:04:29.689" status="PASS" starttime="20190121 13:04:29.683"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:29.698">${gpio_id} = 04</msg>
<status endtime="20190121 13:04:29.699" status="PASS" starttime="20190121 13:04:29.692"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:29.707" status="PASS" starttime="20190121 13:04:29.701"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:29.716">${ret_val} = 01</msg>
<status endtime="20190121 13:04:29.717" status="PASS" starttime="20190121 13:04:29.710"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:29.721">${resp} = 01</msg>
<status endtime="20190121 13:04:29.722" status="PASS" starttime="20190121 13:04:29.402"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:29.730" status="PASS" starttime="20190121 13:04:29.724"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:29.738" status="PASS" starttime="20190121 13:04:29.733"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:29.758">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0020 65</msg>
<status endtime="20190121 13:04:29.759" status="PASS" starttime="20190121 13:04:29.751"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:29.767" status="PASS" starttime="20190121 13:04:29.762"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:30.000">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 47 3C F7</msg>
<status endtime="20190121 13:04:30.002" status="PASS" starttime="20190121 13:04:29.770"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:30.010" status="PASS" starttime="20190121 13:04:30.005"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:30.020" status="PASS" starttime="20190121 13:04:30.013"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:30.028">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '47', '3C', 'F7']</msg>
<status endtime="20190121 13:04:30.029" status="PASS" starttime="20190121 13:04:30.023"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:30.038">${gpio_id} = 04</msg>
<status endtime="20190121 13:04:30.039" status="PASS" starttime="20190121 13:04:30.032"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:30.059" status="PASS" starttime="20190121 13:04:30.049"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:30.081">${ret_val} = 01</msg>
<status endtime="20190121 13:04:30.082" status="PASS" starttime="20190121 13:04:30.066"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:30.086">${resp} = 01</msg>
<status endtime="20190121 13:04:30.087" status="PASS" starttime="20190121 13:04:29.740"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:30.095" status="PASS" starttime="20190121 13:04:30.090"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:30.103" status="PASS" starttime="20190121 13:04:30.098"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:30.123">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0065 20</msg>
<status endtime="20190121 13:04:30.124" status="PASS" starttime="20190121 13:04:30.116"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:30.133" status="PASS" starttime="20190121 13:04:30.127"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:30.361">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 40 3C F0</msg>
<status endtime="20190121 13:04:30.362" status="PASS" starttime="20190121 13:04:30.136"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:30.370" status="PASS" starttime="20190121 13:04:30.365"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:30.381" status="PASS" starttime="20190121 13:04:30.373"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:30.389">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '40', '3C', 'F0']</msg>
<status endtime="20190121 13:04:30.390" status="PASS" starttime="20190121 13:04:30.384"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:30.398">${gpio_id} = 04</msg>
<status endtime="20190121 13:04:30.399" status="PASS" starttime="20190121 13:04:30.392"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:30.407" status="PASS" starttime="20190121 13:04:30.402"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:30.424">${ret_val} = 01</msg>
<status endtime="20190121 13:04:30.425" status="PASS" starttime="20190121 13:04:30.410"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:30.429">${resp} = 01</msg>
<status endtime="20190121 13:04:30.430" status="PASS" starttime="20190121 13:04:30.105"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:30.438" status="PASS" starttime="20190121 13:04:30.433"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:30.446" status="PASS" starttime="20190121 13:04:30.441"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:30.467">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0020 00</msg>
<status endtime="20190121 13:04:30.468" status="PASS" starttime="20190121 13:04:30.459"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:30.476" status="PASS" starttime="20190121 13:04:30.470"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:30.709">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 41 3C F1</msg>
<status endtime="20190121 13:04:30.710" status="PASS" starttime="20190121 13:04:30.479"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:30.720" status="PASS" starttime="20190121 13:04:30.714"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:30.728" status="PASS" starttime="20190121 13:04:30.723"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:30.736">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '41', '3C', 'F1']</msg>
<status endtime="20190121 13:04:30.737" status="PASS" starttime="20190121 13:04:30.731"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:30.746">${gpio_id} = 04</msg>
<status endtime="20190121 13:04:30.746" status="PASS" starttime="20190121 13:04:30.740"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:30.755" status="PASS" starttime="20190121 13:04:30.749"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:30.763">${ret_val} = 01</msg>
<status endtime="20190121 13:04:30.764" status="PASS" starttime="20190121 13:04:30.758"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:30.768">${resp} = 01</msg>
<status endtime="20190121 13:04:30.769" status="PASS" starttime="20190121 13:04:30.449"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:30.777" status="PASS" starttime="20190121 13:04:30.771"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:30.785" status="PASS" starttime="20190121 13:04:30.780"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:30.823">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0000 20</msg>
<status endtime="20190121 13:04:30.831" status="PASS" starttime="20190121 13:04:30.812"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:30.840" status="PASS" starttime="20190121 13:04:30.834"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:31.043">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 42 3C F2</msg>
<status endtime="20190121 13:04:31.044" status="PASS" starttime="20190121 13:04:30.843"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:31.053" status="PASS" starttime="20190121 13:04:31.047"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:31.061" status="PASS" starttime="20190121 13:04:31.056"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:31.069">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '42', '3C', 'F2']</msg>
<status endtime="20190121 13:04:31.070" status="PASS" starttime="20190121 13:04:31.064"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:31.079">${gpio_id} = 04</msg>
<status endtime="20190121 13:04:31.079" status="PASS" starttime="20190121 13:04:31.073"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:31.088" status="PASS" starttime="20190121 13:04:31.082"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:31.096">${ret_val} = 01</msg>
<status endtime="20190121 13:04:31.097" status="PASS" starttime="20190121 13:04:31.091"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:31.101">${resp} = 01</msg>
<status endtime="20190121 13:04:31.101" status="PASS" starttime="20190121 13:04:30.787"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:31.110" status="PASS" starttime="20190121 13:04:31.104"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:31.117" status="PASS" starttime="20190121 13:04:31.113"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:31.142">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0000 00</msg>
<status endtime="20190121 13:04:31.143" status="PASS" starttime="20190121 13:04:31.131"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:31.153" status="PASS" starttime="20190121 13:04:31.146"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:31.386">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 43 3C F3</msg>
<status endtime="20190121 13:04:31.387" status="PASS" starttime="20190121 13:04:31.156"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:31.396" status="PASS" starttime="20190121 13:04:31.390"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:31.404" status="PASS" starttime="20190121 13:04:31.399"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:31.412">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '43', '3C', 'F3']</msg>
<status endtime="20190121 13:04:31.413" status="PASS" starttime="20190121 13:04:31.407"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:31.422">${gpio_id} = 04</msg>
<status endtime="20190121 13:04:31.423" status="PASS" starttime="20190121 13:04:31.416"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:31.431" status="PASS" starttime="20190121 13:04:31.426"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:31.440">${ret_val} = 01</msg>
<status endtime="20190121 13:04:31.441" status="PASS" starttime="20190121 13:04:31.434"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:31.445">${resp} = 01</msg>
<status endtime="20190121 13:04:31.445" status="PASS" starttime="20190121 13:04:31.120"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:31.454" status="PASS" starttime="20190121 13:04:31.448"></status>
</kw>
<status endtime="20190121 13:04:31.456" status="PASS" starttime="20190121 13:04:28.366"></status>
</kw>
<status endtime="20190121 13:04:31.458" status="PASS" starttime="20190121 13:04:28.353"></status>
</kw>
<kw name="digit_out_led2">
<doc>Set pwm for the digital output led2</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output led2</arg>
</arguments>
<status endtime="20190121 13:04:31.472" status="PASS" starttime="20190121 13:04:31.467"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:31.486" status="PASS" starttime="20190121 13:04:31.481"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:31.506">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0020 20</msg>
<status endtime="20190121 13:04:31.507" status="PASS" starttime="20190121 13:04:31.499"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:31.516" status="PASS" starttime="20190121 13:04:31.510"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:31.748">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 05 01 44 3D F5</msg>
<status endtime="20190121 13:04:31.749" status="PASS" starttime="20190121 13:04:31.519"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:31.758" status="PASS" starttime="20190121 13:04:31.752"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:31.766" status="PASS" starttime="20190121 13:04:31.761"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:31.774">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '05', '01', '44', '3D', 'F5']</msg>
<status endtime="20190121 13:04:31.775" status="PASS" starttime="20190121 13:04:31.769"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:31.783">${gpio_id} = 05</msg>
<status endtime="20190121 13:04:31.784" status="PASS" starttime="20190121 13:04:31.778"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:31.802" status="PASS" starttime="20190121 13:04:31.787"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:31.819">${ret_val} = 00</msg>
<status endtime="20190121 13:04:31.826" status="PASS" starttime="20190121 13:04:31.809"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:31.830">${resp} = 00</msg>
<status endtime="20190121 13:04:31.831" status="PASS" starttime="20190121 13:04:31.488"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:31.841" status="PASS" starttime="20190121 13:04:31.836"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:31.850" status="PASS" starttime="20190121 13:04:31.845"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:31.870">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0064 64</msg>
<status endtime="20190121 13:04:31.871" status="PASS" starttime="20190121 13:04:31.863"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:31.884" status="PASS" starttime="20190121 13:04:31.874"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:32.087">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 05 01 45 3D F4</msg>
<status endtime="20190121 13:04:32.088" status="PASS" starttime="20190121 13:04:31.888"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:32.097" status="PASS" starttime="20190121 13:04:32.092"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:32.106" status="PASS" starttime="20190121 13:04:32.100"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:32.114">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '05', '01', '45', '3D', 'F4']</msg>
<status endtime="20190121 13:04:32.114" status="PASS" starttime="20190121 13:04:32.109"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:32.123">${gpio_id} = 05</msg>
<status endtime="20190121 13:04:32.124" status="PASS" starttime="20190121 13:04:32.117"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:32.133" status="PASS" starttime="20190121 13:04:32.127"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:32.141">${ret_val} = 00</msg>
<status endtime="20190121 13:04:32.142" status="PASS" starttime="20190121 13:04:32.135"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:32.146">${resp} = 00</msg>
<status endtime="20190121 13:04:32.146" status="PASS" starttime="20190121 13:04:31.852"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:32.155" status="PASS" starttime="20190121 13:04:32.149"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:32.162" status="PASS" starttime="20190121 13:04:32.158"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:32.182">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0001 01</msg>
<status endtime="20190121 13:04:32.183" status="PASS" starttime="20190121 13:04:32.175"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:32.192" status="PASS" starttime="20190121 13:04:32.187"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:32.427">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 05 01 46 3D F7</msg>
<status endtime="20190121 13:04:32.428" status="PASS" starttime="20190121 13:04:32.195"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:32.437" status="PASS" starttime="20190121 13:04:32.431"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:32.446" status="PASS" starttime="20190121 13:04:32.440"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:32.454">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '05', '01', '46', '3D', 'F7']</msg>
<status endtime="20190121 13:04:32.455" status="PASS" starttime="20190121 13:04:32.449"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:32.463">${gpio_id} = 05</msg>
<status endtime="20190121 13:04:32.464" status="PASS" starttime="20190121 13:04:32.457"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:32.472" status="PASS" starttime="20190121 13:04:32.467"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:32.481">${ret_val} = 00</msg>
<status endtime="20190121 13:04:32.482" status="PASS" starttime="20190121 13:04:32.475"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:32.486">${resp} = 00</msg>
<status endtime="20190121 13:04:32.487" status="PASS" starttime="20190121 13:04:32.165"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:32.496" status="PASS" starttime="20190121 13:04:32.490"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:32.503" status="PASS" starttime="20190121 13:04:32.499"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:32.524">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0065 65</msg>
<status endtime="20190121 13:04:32.525" status="PASS" starttime="20190121 13:04:32.517"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:32.534" status="PASS" starttime="20190121 13:04:32.528"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:32.763">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 47 3C F6</msg>
<status endtime="20190121 13:04:32.763" status="PASS" starttime="20190121 13:04:32.537"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:32.773" status="PASS" starttime="20190121 13:04:32.767"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:32.781" status="PASS" starttime="20190121 13:04:32.776"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:32.789">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '47', '3C', 'F6']</msg>
<status endtime="20190121 13:04:32.790" status="PASS" starttime="20190121 13:04:32.784"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:32.802">${gpio_id} = 05</msg>
<status endtime="20190121 13:04:32.803" status="PASS" starttime="20190121 13:04:32.793"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:32.811" status="PASS" starttime="20190121 13:04:32.806"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:32.820">${ret_val} = 01</msg>
<status endtime="20190121 13:04:32.821" status="PASS" starttime="20190121 13:04:32.814"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:32.825">${resp} = 01</msg>
<status endtime="20190121 13:04:32.826" status="PASS" starttime="20190121 13:04:32.506"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:32.834" status="PASS" starttime="20190121 13:04:32.829"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:32.842" status="PASS" starttime="20190121 13:04:32.837"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:32.862">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0020 65</msg>
<status endtime="20190121 13:04:32.863" status="PASS" starttime="20190121 13:04:32.855"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:32.872" status="PASS" starttime="20190121 13:04:32.866"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:33.106">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 40 3C F1</msg>
<status endtime="20190121 13:04:33.107" status="PASS" starttime="20190121 13:04:32.875"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:33.115" status="PASS" starttime="20190121 13:04:33.110"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:33.126" status="PASS" starttime="20190121 13:04:33.118"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:33.135">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '40', '3C', 'F1']</msg>
<status endtime="20190121 13:04:33.136" status="PASS" starttime="20190121 13:04:33.130"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:33.144">${gpio_id} = 05</msg>
<status endtime="20190121 13:04:33.145" status="PASS" starttime="20190121 13:04:33.139"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:33.155" status="PASS" starttime="20190121 13:04:33.148"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:33.163">${ret_val} = 01</msg>
<status endtime="20190121 13:04:33.164" status="PASS" starttime="20190121 13:04:33.158"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:33.168">${resp} = 01</msg>
<status endtime="20190121 13:04:33.169" status="PASS" starttime="20190121 13:04:32.844"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:33.177" status="PASS" starttime="20190121 13:04:33.171"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:33.185" status="PASS" starttime="20190121 13:04:33.180"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:33.205">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0065 20</msg>
<status endtime="20190121 13:04:33.206" status="PASS" starttime="20190121 13:04:33.198"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:33.215" status="PASS" starttime="20190121 13:04:33.209"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:33.648">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 41 3C F0</msg>
<status endtime="20190121 13:04:33.653" status="PASS" starttime="20190121 13:04:33.218"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:33.717" status="PASS" starttime="20190121 13:04:33.686"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:33.742" status="PASS" starttime="20190121 13:04:33.725"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:33.805">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '41', '3C', 'F0']</msg>
<status endtime="20190121 13:04:33.806" status="PASS" starttime="20190121 13:04:33.750"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:33.847">${gpio_id} = 05</msg>
<status endtime="20190121 13:04:33.869" status="PASS" starttime="20190121 13:04:33.837"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:33.901" status="PASS" starttime="20190121 13:04:33.872"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:33.976">${ret_val} = 01</msg>
<status endtime="20190121 13:04:33.977" status="PASS" starttime="20190121 13:04:33.950"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:34.016">${resp} = 01</msg>
<status endtime="20190121 13:04:34.021" status="PASS" starttime="20190121 13:04:33.187"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:34.073" status="PASS" starttime="20190121 13:04:34.024"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:34.103" status="PASS" starttime="20190121 13:04:34.076"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:34.189">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0020 00</msg>
<status endtime="20190121 13:04:34.190" status="PASS" starttime="20190121 13:04:34.144"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:34.239" status="PASS" starttime="20190121 13:04:34.222"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:34.506">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 42 3C F3</msg>
<status endtime="20190121 13:04:34.507" status="PASS" starttime="20190121 13:04:34.242"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:34.536" status="PASS" starttime="20190121 13:04:34.510"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:34.573" status="PASS" starttime="20190121 13:04:34.539"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:34.611">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '42', '3C', 'F3']</msg>
<status endtime="20190121 13:04:34.612" status="PASS" starttime="20190121 13:04:34.605"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:34.634">${gpio_id} = 05</msg>
<status endtime="20190121 13:04:34.634" status="PASS" starttime="20190121 13:04:34.628"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:34.663" status="PASS" starttime="20190121 13:04:34.657"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:34.680">${ret_val} = 01</msg>
<status endtime="20190121 13:04:34.681" status="PASS" starttime="20190121 13:04:34.674"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:34.706">${resp} = 01</msg>
<status endtime="20190121 13:04:34.707" status="PASS" starttime="20190121 13:04:34.109"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:34.723" status="PASS" starttime="20190121 13:04:34.717"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:34.756" status="PASS" starttime="20190121 13:04:34.727"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:34.806">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0000 20</msg>
<status endtime="20190121 13:04:34.807" status="PASS" starttime="20190121 13:04:34.790"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:34.839" status="PASS" starttime="20190121 13:04:34.811"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:35.087">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 43 3C F2</msg>
<status endtime="20190121 13:04:35.088" status="PASS" starttime="20190121 13:04:34.842"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:35.109" status="PASS" starttime="20190121 13:04:35.091"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:35.130" status="PASS" starttime="20190121 13:04:35.112"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:35.139">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '43', '3C', 'F2']</msg>
<status endtime="20190121 13:04:35.139" status="PASS" starttime="20190121 13:04:35.133"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:35.160">${gpio_id} = 05</msg>
<status endtime="20190121 13:04:35.161" status="PASS" starttime="20190121 13:04:35.155"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:35.196" status="PASS" starttime="20190121 13:04:35.164"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:35.214">${ret_val} = 01</msg>
<status endtime="20190121 13:04:35.215" status="PASS" starttime="20190121 13:04:35.199"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:35.219">${resp} = 01</msg>
<status endtime="20190121 13:04:35.219" status="PASS" starttime="20190121 13:04:34.759"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:35.282" status="PASS" starttime="20190121 13:04:35.244"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:35.318" status="PASS" starttime="20190121 13:04:35.286"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:35.358">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0000 00</msg>
<status endtime="20190121 13:04:35.359" status="PASS" starttime="20190121 13:04:35.349"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:35.371" status="PASS" starttime="20190121 13:04:35.362"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:35.549">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 44 3C F5</msg>
<status endtime="20190121 13:04:35.550" status="PASS" starttime="20190121 13:04:35.374"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:35.559" status="PASS" starttime="20190121 13:04:35.554"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:35.569" status="PASS" starttime="20190121 13:04:35.562"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:35.577">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '44', '3C', 'F5']</msg>
<status endtime="20190121 13:04:35.578" status="PASS" starttime="20190121 13:04:35.572"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:35.588">${gpio_id} = 05</msg>
<status endtime="20190121 13:04:35.589" status="PASS" starttime="20190121 13:04:35.582"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:35.597" status="PASS" starttime="20190121 13:04:35.592"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:35.606">${ret_val} = 01</msg>
<status endtime="20190121 13:04:35.607" status="PASS" starttime="20190121 13:04:35.600"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:35.610">${resp} = 01</msg>
<status endtime="20190121 13:04:35.611" status="PASS" starttime="20190121 13:04:35.323"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:35.619" status="PASS" starttime="20190121 13:04:35.614"></status>
</kw>
<status endtime="20190121 13:04:35.622" status="PASS" starttime="20190121 13:04:31.474"></status>
</kw>
<status endtime="20190121 13:04:35.624" status="PASS" starttime="20190121 13:04:31.461"></status>
</kw>
<kw name="digit_out_crm">
<doc>Set pwm for the digital output crm</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output crm</arg>
</arguments>
<status endtime="20190121 13:04:35.637" status="PASS" starttime="20190121 13:04:35.632"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:35.652" status="PASS" starttime="20190121 13:04:35.647"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:35.672">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0020 20</msg>
<status endtime="20190121 13:04:35.673" status="PASS" starttime="20190121 13:04:35.664"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:35.681" status="PASS" starttime="20190121 13:04:35.675"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:35.858">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 06 01 45 3D F7</msg>
<status endtime="20190121 13:04:35.858" status="PASS" starttime="20190121 13:04:35.684"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:35.867" status="PASS" starttime="20190121 13:04:35.861"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:35.875" status="PASS" starttime="20190121 13:04:35.870"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:35.883">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '06', '01', '45', '3D', 'F7']</msg>
<status endtime="20190121 13:04:35.884" status="PASS" starttime="20190121 13:04:35.878"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:35.893">${gpio_id} = 06</msg>
<status endtime="20190121 13:04:35.893" status="PASS" starttime="20190121 13:04:35.887"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:35.902" status="PASS" starttime="20190121 13:04:35.896"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:35.911">${ret_val} = 00</msg>
<status endtime="20190121 13:04:35.911" status="PASS" starttime="20190121 13:04:35.905"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:35.915">${resp} = 00</msg>
<status endtime="20190121 13:04:35.916" status="PASS" starttime="20190121 13:04:35.654"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:35.924" status="PASS" starttime="20190121 13:04:35.919"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:35.932" status="PASS" starttime="20190121 13:04:35.927"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:35.952">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0064 64</msg>
<status endtime="20190121 13:04:35.954" status="PASS" starttime="20190121 13:04:35.945"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:35.963" status="PASS" starttime="20190121 13:04:35.957"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:36.144">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 06 01 46 3D F4</msg>
<status endtime="20190121 13:04:36.150" status="PASS" starttime="20190121 13:04:35.966"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:36.188" status="PASS" starttime="20190121 13:04:36.153"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:36.232" status="PASS" starttime="20190121 13:04:36.191"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:36.241">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '06', '01', '46', '3D', 'F4']</msg>
<status endtime="20190121 13:04:36.250" status="PASS" starttime="20190121 13:04:36.235"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:36.259">${gpio_id} = 06</msg>
<status endtime="20190121 13:04:36.270" status="PASS" starttime="20190121 13:04:36.253"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:36.279" status="PASS" starttime="20190121 13:04:36.273"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:36.299">${ret_val} = 00</msg>
<status endtime="20190121 13:04:36.300" status="PASS" starttime="20190121 13:04:36.293"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:36.317">${resp} = 00</msg>
<status endtime="20190121 13:04:36.318" status="PASS" starttime="20190121 13:04:35.934"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:36.331" status="PASS" starttime="20190121 13:04:36.321"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status endtime="20190121 13:04:36.339" status="PASS" starttime="20190121 13:04:36.334"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:36.359">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0001 01</msg>
<status endtime="20190121 13:04:36.360" status="PASS" starttime="20190121 13:04:36.352"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:36.368" status="PASS" starttime="20190121 13:04:36.363"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:36.546">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 06 01 47 3D F5</msg>
<status endtime="20190121 13:04:36.547" status="PASS" starttime="20190121 13:04:36.371"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:36.555" status="PASS" starttime="20190121 13:04:36.549"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:36.563" status="PASS" starttime="20190121 13:04:36.558"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:36.571">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '06', '01', '47', '3D', 'F5']</msg>
<status endtime="20190121 13:04:36.572" status="PASS" starttime="20190121 13:04:36.567"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:36.581">${gpio_id} = 06</msg>
<status endtime="20190121 13:04:36.582" status="PASS" starttime="20190121 13:04:36.575"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:36.590" status="PASS" starttime="20190121 13:04:36.584"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:36.598">${ret_val} = 00</msg>
<status endtime="20190121 13:04:36.599" status="PASS" starttime="20190121 13:04:36.593"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:36.603">${resp} = 00</msg>
<status endtime="20190121 13:04:36.604" status="PASS" starttime="20190121 13:04:36.341"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:36.613" status="PASS" starttime="20190121 13:04:36.607"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:36.620" status="PASS" starttime="20190121 13:04:36.615"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:36.642">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0065 65</msg>
<status endtime="20190121 13:04:36.643" status="PASS" starttime="20190121 13:04:36.635"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:36.652" status="PASS" starttime="20190121 13:04:36.647"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:36.829">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 40 3C F2</msg>
<status endtime="20190121 13:04:36.830" status="PASS" starttime="20190121 13:04:36.655"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:36.839" status="PASS" starttime="20190121 13:04:36.833"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:36.848" status="PASS" starttime="20190121 13:04:36.842"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:36.856">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '40', '3C', 'F2']</msg>
<status endtime="20190121 13:04:36.857" status="PASS" starttime="20190121 13:04:36.851"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:36.865">${gpio_id} = 06</msg>
<status endtime="20190121 13:04:36.866" status="PASS" starttime="20190121 13:04:36.860"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:36.878" status="PASS" starttime="20190121 13:04:36.869"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:36.887">${ret_val} = 01</msg>
<status endtime="20190121 13:04:36.888" status="PASS" starttime="20190121 13:04:36.881"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:36.891">${resp} = 01</msg>
<status endtime="20190121 13:04:36.892" status="PASS" starttime="20190121 13:04:36.622"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:36.901" status="PASS" starttime="20190121 13:04:36.895"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:36.908" status="PASS" starttime="20190121 13:04:36.904"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:36.929">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0020 65</msg>
<status endtime="20190121 13:04:36.930" status="PASS" starttime="20190121 13:04:36.921"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:36.939" status="PASS" starttime="20190121 13:04:36.933"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:37.115">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 41 3C F3</msg>
<status endtime="20190121 13:04:37.117" status="PASS" starttime="20190121 13:04:36.942"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:37.125" status="PASS" starttime="20190121 13:04:37.120"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:37.134" status="PASS" starttime="20190121 13:04:37.128"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:37.142">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '41', '3C', 'F3']</msg>
<status endtime="20190121 13:04:37.143" status="PASS" starttime="20190121 13:04:37.137"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:37.151">${gpio_id} = 06</msg>
<status endtime="20190121 13:04:37.152" status="PASS" starttime="20190121 13:04:37.146"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:37.160" status="PASS" starttime="20190121 13:04:37.155"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:37.169">${ret_val} = 01</msg>
<status endtime="20190121 13:04:37.170" status="PASS" starttime="20190121 13:04:37.163"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:37.173">${resp} = 01</msg>
<status endtime="20190121 13:04:37.174" status="PASS" starttime="20190121 13:04:36.911"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:37.184" status="PASS" starttime="20190121 13:04:37.177"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:37.191" status="PASS" starttime="20190121 13:04:37.187"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:37.212">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0065 20</msg>
<status endtime="20190121 13:04:37.213" status="PASS" starttime="20190121 13:04:37.204"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:37.221" status="PASS" starttime="20190121 13:04:37.215"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:37.398">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 42 3C F0</msg>
<status endtime="20190121 13:04:37.399" status="PASS" starttime="20190121 13:04:37.224"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:37.409" status="PASS" starttime="20190121 13:04:37.402"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:37.418" status="PASS" starttime="20190121 13:04:37.412"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:37.426">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '42', '3C', 'F0']</msg>
<status endtime="20190121 13:04:37.427" status="PASS" starttime="20190121 13:04:37.421"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:37.436">${gpio_id} = 06</msg>
<status endtime="20190121 13:04:37.437" status="PASS" starttime="20190121 13:04:37.430"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:37.445" status="PASS" starttime="20190121 13:04:37.439"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:37.454">${ret_val} = 01</msg>
<status endtime="20190121 13:04:37.455" status="PASS" starttime="20190121 13:04:37.448"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:37.458">${resp} = 01</msg>
<status endtime="20190121 13:04:37.459" status="PASS" starttime="20190121 13:04:37.194"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:37.468" status="PASS" starttime="20190121 13:04:37.462"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:37.475" status="PASS" starttime="20190121 13:04:37.471"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:37.500">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0020 00</msg>
<status endtime="20190121 13:04:37.501" status="PASS" starttime="20190121 13:04:37.489"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:37.510" status="PASS" starttime="20190121 13:04:37.504"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:37.686">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 43 3C F1</msg>
<status endtime="20190121 13:04:37.687" status="PASS" starttime="20190121 13:04:37.513"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:37.697" status="PASS" starttime="20190121 13:04:37.691"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:37.706" status="PASS" starttime="20190121 13:04:37.700"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:37.714">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '43', '3C', 'F1']</msg>
<status endtime="20190121 13:04:37.715" status="PASS" starttime="20190121 13:04:37.709"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:37.723">${gpio_id} = 06</msg>
<status endtime="20190121 13:04:37.724" status="PASS" starttime="20190121 13:04:37.718"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:37.732" status="PASS" starttime="20190121 13:04:37.727"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:37.747">${ret_val} = 01</msg>
<status endtime="20190121 13:04:37.748" status="PASS" starttime="20190121 13:04:37.736"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:37.752">${resp} = 01</msg>
<status endtime="20190121 13:04:37.752" status="PASS" starttime="20190121 13:04:37.478"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:37.761" status="PASS" starttime="20190121 13:04:37.755"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:37.769" status="PASS" starttime="20190121 13:04:37.764"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:37.789">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0000 20</msg>
<status endtime="20190121 13:04:37.790" status="PASS" starttime="20190121 13:04:37.782"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:37.799" status="PASS" starttime="20190121 13:04:37.793"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:37.975">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 44 3C F6</msg>
<status endtime="20190121 13:04:37.976" status="PASS" starttime="20190121 13:04:37.802"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:37.985" status="PASS" starttime="20190121 13:04:37.979"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:37.994" status="PASS" starttime="20190121 13:04:37.988"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:38.002">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '44', '3C', 'F6']</msg>
<status endtime="20190121 13:04:38.003" status="PASS" starttime="20190121 13:04:37.997"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:38.011">${gpio_id} = 06</msg>
<status endtime="20190121 13:04:38.012" status="PASS" starttime="20190121 13:04:38.006"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:38.021" status="PASS" starttime="20190121 13:04:38.015"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:38.029">${ret_val} = 01</msg>
<status endtime="20190121 13:04:38.030" status="PASS" starttime="20190121 13:04:38.023"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:38.033">${resp} = 01</msg>
<status endtime="20190121 13:04:38.034" status="PASS" starttime="20190121 13:04:37.771"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:38.043" status="PASS" starttime="20190121 13:04:38.037"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190121 13:04:38.051" status="PASS" starttime="20190121 13:04:38.046"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:38.071">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0000 00</msg>
<status endtime="20190121 13:04:38.072" status="PASS" starttime="20190121 13:04:38.064"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:38.081" status="PASS" starttime="20190121 13:04:38.075"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:38.282">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 45 3C F7</msg>
<status endtime="20190121 13:04:38.283" status="PASS" starttime="20190121 13:04:38.084"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:38.308" status="PASS" starttime="20190121 13:04:38.288"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:38.322" status="PASS" starttime="20190121 13:04:38.311"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:38.344">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '45', '3C', 'F7']</msg>
<status endtime="20190121 13:04:38.345" status="PASS" starttime="20190121 13:04:38.326"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:38.354">${gpio_id} = 06</msg>
<status endtime="20190121 13:04:38.356" status="PASS" starttime="20190121 13:04:38.348"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:38.365" status="PASS" starttime="20190121 13:04:38.359"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:38.373">${ret_val} = 01</msg>
<status endtime="20190121 13:04:38.374" status="PASS" starttime="20190121 13:04:38.368"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:38.378">${resp} = 01</msg>
<status endtime="20190121 13:04:38.379" status="PASS" starttime="20190121 13:04:38.053"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:38.387" status="PASS" starttime="20190121 13:04:38.382"></status>
</kw>
<status endtime="20190121 13:04:38.389" status="PASS" starttime="20190121 13:04:35.639"></status>
</kw>
<status endtime="20190121 13:04:38.392" status="PASS" starttime="20190121 13:04:35.626"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:04:38.439" status="PASS" starttime="20190121 13:04:38.401"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:04:38.479" status="PASS" starttime="20190121 13:04:38.443"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:04:38.518" status="PASS" starttime="20190121 13:04:38.482"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:04:38.557" status="PASS" starttime="20190121 13:04:38.522"></status>
</kw>
<status endtime="20190121 13:04:38.559" status="PASS" starttime="20190121 13:04:38.395"></status>
</kw>
<doc>Implements Test Task SKTB-49357 set pwm on Digital Outputs</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status endtime="20190121 13:04:38.561" critical="yes" status="PASS" starttime="20190121 13:04:10.939"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg level="INFO" timestamp="20190121 13:04:40.031">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190121 13:04:40.096">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190121 13:04:40.098" status="PASS" starttime="20190121 13:04:38.614"></status>
</kw>
<status endtime="20190121 13:04:40.100" status="PASS" starttime="20190121 13:04:38.577"></status>
</kw>
<status endtime="20190121 13:04:40.102" status="PASS" starttime="20190121 13:04:38.571"></status>
</kw>
<doc>Chorus GPIO outputs set pwm</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190121 13:04:40.103" status="PASS" starttime="20190121 13:04:08.123"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-41553.robot" id="s1-s13" name="SKTB-41553">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:04:40.977">Connecting to tnt-server localhost...</msg>
<status endtime="20190121 13:04:40.989" status="PASS" starttime="20190121 13:04:40.966"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:04:41.015">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190121 13:04:41.017">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190121 13:04:43.130">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190121 13:04:43.132" status="PASS" starttime="20190121 13:04:40.992"></status>
</kw>
<status endtime="20190121 13:04:43.134" status="PASS" starttime="20190121 13:04:40.960"></status>
</kw>
<test id="s1-s13-t1" name="SKTB-41553">
<kw type="setup" name="Test_precondition">
<doc>Precondition, Switch power on and set Serial configuration</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Precondition, Switch power on and set Serial configuration</arg>
</arguments>
<status endtime="20190121 13:04:43.209" status="PASS" starttime="20190121 13:04:43.190"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:04:43.310" status="PASS" starttime="20190121 13:04:43.212"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:04:43.386" status="PASS" starttime="20190121 13:04:43.313"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:04:43.526" status="PASS" starttime="20190121 13:04:43.389"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${912600}</arg>
</arguments>
<status endtime="20190121 13:04:43.647" status="PASS" starttime="20190121 13:04:43.529"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190121 13:04:43.788" status="PASS" starttime="20190121 13:04:43.650"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190121 13:04:43.897" status="PASS" starttime="20190121 13:04:43.792"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:04:45.918">Slept 2 seconds</msg>
<status endtime="20190121 13:04:45.921" status="PASS" starttime="20190121 13:04:43.900"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:04:45.952" status="PASS" starttime="20190121 13:04:45.923"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:04:45.982" status="PASS" starttime="20190121 13:04:45.956"></status>
</kw>
<status endtime="20190121 13:04:45.985" status="PASS" starttime="20190121 13:04:43.175"></status>
</kw>
<kw name="TEST_OTP_CARIF_PSN">
<doc>Test PSN value, write default value and read it, then write new value and read it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test PSN value, write and read default value</arg>
</arguments>
<status endtime="20190121 13:04:45.999" status="PASS" starttime="20190121 13:04:45.994"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Read default otp value</arg>
</arguments>
<status endtime="20190121 13:04:46.008" status="PASS" starttime="20190121 13:04:46.002"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_PSN}</arg>
<arg>${PSN_LEN}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:46.025">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FE 00 10</msg>
<status endtime="20190121 13:04:46.026" status="PASS" starttime="20190121 13:04:46.019"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:46.036" status="PASS" starttime="20190121 13:04:46.029"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:46.191">${resp} = 1E 10 54 94 00 1B 00 0B EE 04 FF FE 00 10 00 4C 61 69 72 64 20 50 53 4E 20 30 31 32 33 34 35 01 45 00 69 16</msg>
<status endtime="20190121 13:04:46.192" status="PASS" starttime="20190121 13:04:46.039"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:46.201" status="PASS" starttime="20190121 13:04:46.196"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:46.221">${temp1} = 1E105494001B000BEE04FFFE0010004C616972642050534E203031323334350145006916</msg>
<status endtime="20190121 13:04:46.222" status="PASS" starttime="20190121 13:04:46.215"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:46.230">${temp2} = EE04FFFE001000</msg>
<status endtime="20190121 13:04:46.231" status="PASS" starttime="20190121 13:04:46.225"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:46.249" status="PASS" starttime="20190121 13:04:46.234"></status>
</kw>
<status endtime="20190121 13:04:46.251" status="PASS" starttime="20190121 13:04:46.203"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:46.255">${res} = 1E 10 54 94 00 1B 00 0B EE 04 FF FE 00 10 00 4C 61 69 72 64 20 50 53 4E 20 30 31 32 33 34 35 01 45 00 69 16</msg>
<status endtime="20190121 13:04:46.256" status="PASS" starttime="20190121 13:04:46.010"></status>
</kw>
<status endtime="20190121 13:04:46.258" status="PASS" starttime="20190121 13:04:45.988"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_PART_NO">
<doc>READ_OTP_CARIF_HW_PART_NO</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Read otp_carif_hw_part_no</arg>
</arguments>
<status endtime="20190121 13:04:46.271" status="PASS" starttime="20190121 13:04:46.267"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_PART_NO}</arg>
<arg>${HW_PART_NO_LEN}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:46.289">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FD 00 0A</msg>
<status endtime="20190121 13:04:46.290" status="PASS" starttime="20190121 13:04:46.282"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:46.300" status="PASS" starttime="20190121 13:04:46.293"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:46.484">${resp} = 1E 10 54 94 00 15 00 0B EE 04 FF FD 00 0A 00 4C 61 69 72 64 20 30 31 32 33 01 44 00 2E 2B</msg>
<status endtime="20190121 13:04:46.488" status="PASS" starttime="20190121 13:04:46.303"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:46.506" status="PASS" starttime="20190121 13:04:46.491"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:46.526">${temp1} = 1E1054940015000BEE04FFFD000A004C6169726420303132330144002E2B</msg>
<status endtime="20190121 13:04:46.526" status="PASS" starttime="20190121 13:04:46.519"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:46.535">${temp2} = EE04FFFD000A00</msg>
<status endtime="20190121 13:04:46.536" status="PASS" starttime="20190121 13:04:46.529"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:46.544" status="PASS" starttime="20190121 13:04:46.539"></status>
</kw>
<status endtime="20190121 13:04:46.546" status="PASS" starttime="20190121 13:04:46.508"></status>
</kw>
<status endtime="20190121 13:04:46.550" status="PASS" starttime="20190121 13:04:46.274"></status>
</kw>
<status endtime="20190121 13:04:46.552" status="PASS" starttime="20190121 13:04:46.260"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_VERSION_INFO">
<doc>READ_OTP_CARIF_HW_VERSION_INFO</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>READ_OTP_CARIF_HW_VERSION_INFO</arg>
</arguments>
<status endtime="20190121 13:04:46.565" status="PASS" starttime="20190121 13:04:46.560"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_VERSION_INFO}</arg>
<arg>${HW_VERSION_INFO_LEN}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:46.583">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FC 00 04</msg>
<status endtime="20190121 13:04:46.585" status="PASS" starttime="20190121 13:04:46.576"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:46.594" status="PASS" starttime="20190121 13:04:46.588"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:46.829">${resp} = 1E 10 54 94 00 0F 00 0B EE 04 FF FC 00 04 00 03 01 06 00 01 45 00 1F 78</msg>
<status endtime="20190121 13:04:46.831" status="PASS" starttime="20190121 13:04:46.597"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:46.841" status="PASS" starttime="20190121 13:04:46.834"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:46.863">${temp1} = 1E105494000F000BEE04FFFC000400030106000145001F78</msg>
<status endtime="20190121 13:04:46.863" status="PASS" starttime="20190121 13:04:46.857"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:46.872">${temp2} = EE04FFFC000400</msg>
<status endtime="20190121 13:04:46.873" status="PASS" starttime="20190121 13:04:46.866"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:46.882" status="PASS" starttime="20190121 13:04:46.876"></status>
</kw>
<status endtime="20190121 13:04:46.884" status="PASS" starttime="20190121 13:04:46.843"></status>
</kw>
<status endtime="20190121 13:04:46.887" status="PASS" starttime="20190121 13:04:46.567"></status>
</kw>
<status endtime="20190121 13:04:46.889" status="PASS" starttime="20190121 13:04:46.554"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_SUPPLIER_INFO">
<doc>READ_OTP_CARIF_HW_SUPPLIER_INFO</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>READ_OTP_CARIF_HW_SUPPLIER_INFO</arg>
</arguments>
<status endtime="20190121 13:04:46.902" status="PASS" starttime="20190121 13:04:46.898"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_SUPPLIER_INFO}</arg>
<arg>${HW_SUPPLIER_INFO_LEN}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:46.924">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FB 00 02</msg>
<status endtime="20190121 13:04:46.925" status="PASS" starttime="20190121 13:04:46.914"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:46.934" status="PASS" starttime="20190121 13:04:46.928"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:47.189">${resp} = 1E 10 54 94 00 0D 00 0B EE 04 FF FB 00 02 00 30 31 01 46 00 2C 4E</msg>
<status endtime="20190121 13:04:47.190" status="PASS" starttime="20190121 13:04:46.937"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:47.198" status="PASS" starttime="20190121 13:04:47.193"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:47.217">${temp1} = 1E105494000D000BEE04FFFB00020030310146002C4E</msg>
<status endtime="20190121 13:04:47.218" status="PASS" starttime="20190121 13:04:47.211"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:47.236">${temp2} = EE04FFFB000200</msg>
<status endtime="20190121 13:04:47.237" status="PASS" starttime="20190121 13:04:47.221"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:47.246" status="PASS" starttime="20190121 13:04:47.240"></status>
</kw>
<status endtime="20190121 13:04:47.248" status="PASS" starttime="20190121 13:04:47.200"></status>
</kw>
<status endtime="20190121 13:04:47.251" status="PASS" starttime="20190121 13:04:46.905"></status>
</kw>
<status endtime="20190121 13:04:47.253" status="PASS" starttime="20190121 13:04:46.891"></status>
</kw>
<kw name="TEST_EEPROM_SW_SPARE_PART_NUMBER">
<doc>Write and read the EEPROM_SW_SPARE_PART_NUMBER</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_SW_SPARE_PART_NUMBER</arg>
</arguments>
<status endtime="20190121 13:04:47.267" status="PASS" starttime="20190121 13:04:47.262"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write eeprom sw spare part number with default value</arg>
</arguments>
<status endtime="20190121 13:04:47.274" status="PASS" starttime="20190121 13:04:47.270"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:47.310">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF FA 00 0C 53 70 61 72 65 20 50 61 72 74 20 4e</msg>
<status endtime="20190121 13:04:47.311" status="PASS" starttime="20190121 13:04:47.290"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:47.346">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'FA', '00', '0C', '53', '70', '61', '72', '65', '20', '50', '61', '72', '74', '20', '4e']</msg>
<status endtime="20190121 13:04:47.347" status="PASS" starttime="20190121 13:04:47.333"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:47.354">Length is 26</msg>
<msg level="INFO" timestamp="20190121 13:04:47.356">${length} = 26</msg>
<status endtime="20190121 13:04:47.357" status="PASS" starttime="20190121 13:04:47.350"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190121 13:04:47.365" status="PASS" starttime="20190121 13:04:47.360"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:47.374">${value} = 20</msg>
<status endtime="20190121 13:04:47.375" status="PASS" starttime="20190121 13:04:47.368"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:47.383">${res} = 14</msg>
<status endtime="20190121 13:04:47.384" status="PASS" starttime="20190121 13:04:47.377"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:04:47.392" status="PASS" starttime="20190121 13:04:47.387"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:47.401">${res} = 1E54109400140000EE05FFFA000C53706172652050617274204e</msg>
<status endtime="20190121 13:04:47.402" status="PASS" starttime="20190121 13:04:47.395"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:47.406">${ISI_MSG_NORM} = 1E54109400140000EE05FFFA000C53706172652050617274204e</msg>
<status endtime="20190121 13:04:47.407" status="PASS" starttime="20190121 13:04:47.317"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190121 13:04:47.415" status="PASS" starttime="20190121 13:04:47.410"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:48.071">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF FA 00 00 01 47 5A 3E</msg>
<status endtime="20190121 13:04:48.073" status="PASS" starttime="20190121 13:04:47.418"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:48.082" status="PASS" starttime="20190121 13:04:48.076"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:48.101">${temp1} = 1E105494000A000BEE06FFFA000001475A3E</msg>
<status endtime="20190121 13:04:48.102" status="PASS" starttime="20190121 13:04:48.095"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:48.110">${temp2} = EE06FFFA00</msg>
<status endtime="20190121 13:04:48.111" status="PASS" starttime="20190121 13:04:48.104"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:48.121" status="PASS" starttime="20190121 13:04:48.115"></status>
</kw>
<status endtime="20190121 13:04:48.123" status="PASS" starttime="20190121 13:04:48.084"></status>
</kw>
<status endtime="20190121 13:04:48.125" status="PASS" starttime="20190121 13:04:47.276"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>write eeprom sw spare part number with Different value</arg>
</arguments>
<status endtime="20190121 13:04:48.133" status="PASS" starttime="20190121 13:04:48.128"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:48.157">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF FA 00 0C 53 70 61 72 65 20 50 61 72 74 20 AA</msg>
<status endtime="20190121 13:04:48.158" status="PASS" starttime="20190121 13:04:48.150"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:48.173">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'FA', '00', '0C', '53', '70', '61', '72', '65', '20', '50', '61', '72', '74', '20', 'AA']</msg>
<status endtime="20190121 13:04:48.174" status="PASS" starttime="20190121 13:04:48.168"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:48.181">Length is 26</msg>
<msg level="INFO" timestamp="20190121 13:04:48.183">${length} = 26</msg>
<status endtime="20190121 13:04:48.184" status="PASS" starttime="20190121 13:04:48.177"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190121 13:04:48.192" status="PASS" starttime="20190121 13:04:48.186"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:48.200">${value} = 20</msg>
<status endtime="20190121 13:04:48.201" status="PASS" starttime="20190121 13:04:48.195"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:48.211">${res} = 14</msg>
<status endtime="20190121 13:04:48.212" status="PASS" starttime="20190121 13:04:48.205"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:04:48.220" status="PASS" starttime="20190121 13:04:48.215"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:48.229">${res} = 1E54109400140000EE05FFFA000C5370617265205061727420AA</msg>
<status endtime="20190121 13:04:48.230" status="PASS" starttime="20190121 13:04:48.222"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:48.233">${ISI_MSG_NORM} = 1E54109400140000EE05FFFA000C5370617265205061727420AA</msg>
<status endtime="20190121 13:04:48.234" status="PASS" starttime="20190121 13:04:48.160"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190121 13:04:48.243" status="PASS" starttime="20190121 13:04:48.237"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:48.809">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF FA 00 00 01 40 5A 39</msg>
<status endtime="20190121 13:04:48.810" status="PASS" starttime="20190121 13:04:48.246"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:48.826" status="PASS" starttime="20190121 13:04:48.817"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:48.846">${temp1} = 1E105494000A000BEE06FFFA000001405A39</msg>
<status endtime="20190121 13:04:48.847" status="PASS" starttime="20190121 13:04:48.840"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:48.855">${temp2} = EE06FFFA00</msg>
<status endtime="20190121 13:04:48.856" status="PASS" starttime="20190121 13:04:48.850"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:48.865" status="PASS" starttime="20190121 13:04:48.859"></status>
</kw>
<status endtime="20190121 13:04:48.867" status="PASS" starttime="20190121 13:04:48.828"></status>
</kw>
<status endtime="20190121 13:04:48.869" status="PASS" starttime="20190121 13:04:48.135"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:04:48.925" status="PASS" starttime="20190121 13:04:48.878"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:04:48.996" status="PASS" starttime="20190121 13:04:48.928"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:04:51.013">Slept 2 seconds</msg>
<status endtime="20190121 13:04:51.016" status="PASS" starttime="20190121 13:04:48.999"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:04:51.067" status="PASS" starttime="20190121 13:04:51.018"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:04:51.117" status="PASS" starttime="20190121 13:04:51.070"></status>
</kw>
<status endtime="20190121 13:04:51.119" status="PASS" starttime="20190121 13:04:48.871"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:51.137">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FA 00 0C</msg>
<status endtime="20190121 13:04:51.138" status="PASS" starttime="20190121 13:04:51.131"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:51.146" status="PASS" starttime="20190121 13:04:51.141"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:51.597">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF FA 00 0C 00 53 70 61 72 65 20 50 61 72 74 20 AA 01 43 00 85 3E</msg>
<status endtime="20190121 13:04:51.598" status="PASS" starttime="20190121 13:04:51.150"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:51.615" status="PASS" starttime="20190121 13:04:51.605"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:51.640">${temp1} = 1E1054940017000BEE04FFFA000C005370617265205061727420AA014300853E</msg>
<status endtime="20190121 13:04:51.642" status="PASS" starttime="20190121 13:04:51.630"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:51.650">${temp2} = EE04FFFA000C00</msg>
<status endtime="20190121 13:04:51.651" status="PASS" starttime="20190121 13:04:51.645"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:51.660" status="PASS" starttime="20190121 13:04:51.654"></status>
</kw>
<status endtime="20190121 13:04:51.663" status="PASS" starttime="20190121 13:04:51.617"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:51.667">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF FA 00 0C 00 53 70 61 72 65 20 50 61 72 74 20 AA 01 43 00 85 3E</msg>
<status endtime="20190121 13:04:51.668" status="PASS" starttime="20190121 13:04:51.121"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN} ${EEPROM_APP_OK} ${EEPROM_SW_SPARE_PART_NUMBER_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:51.686">${temp1} = 1E1054940017000BEE04FFFA000C005370617265205061727420AA014300853E</msg>
<status endtime="20190121 13:04:51.687" status="PASS" starttime="20190121 13:04:51.680"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:51.696">${temp2} = 000C005370617265205061727420AA</msg>
<status endtime="20190121 13:04:51.697" status="PASS" starttime="20190121 13:04:51.690"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:51.706" status="PASS" starttime="20190121 13:04:51.699"></status>
</kw>
<status endtime="20190121 13:04:51.708" status="PASS" starttime="20190121 13:04:51.670"></status>
</kw>
<status endtime="20190121 13:04:51.710" status="PASS" starttime="20190121 13:04:47.256"></status>
</kw>
<kw name="TEST_PRODUCT_NAME">
<doc>Write and read the EEPROM_PRODUCT_NAME</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_PRODUCT_NAME</arg>
</arguments>
<status endtime="20190121 13:04:51.723" status="PASS" starttime="20190121 13:04:51.718"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>write default value</arg>
</arguments>
<status endtime="20190121 13:04:51.731" status="PASS" starttime="20190121 13:04:51.726"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
<arg>${EEPROM_PRODUCT_NAME_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:51.751">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F9 00 0C 4f 4c 55 20 43 6f 6e 6e 65 63 74 69</msg>
<status endtime="20190121 13:04:51.751" status="PASS" starttime="20190121 13:04:51.743"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:51.767">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F9', '00', '0C', '4f', '4c', '55', '20', '43', '6f', '6e', '6e', '65', '63', '74', '69']</msg>
<status endtime="20190121 13:04:51.768" status="PASS" starttime="20190121 13:04:51.762"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:51.775">Length is 26</msg>
<msg level="INFO" timestamp="20190121 13:04:51.777">${length} = 26</msg>
<status endtime="20190121 13:04:51.778" status="PASS" starttime="20190121 13:04:51.771"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190121 13:04:51.786" status="PASS" starttime="20190121 13:04:51.780"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:51.794">${value} = 20</msg>
<status endtime="20190121 13:04:51.795" status="PASS" starttime="20190121 13:04:51.789"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:51.804">${res} = 14</msg>
<status endtime="20190121 13:04:51.805" status="PASS" starttime="20190121 13:04:51.798"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:04:51.813" status="PASS" starttime="20190121 13:04:51.807"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:51.823">${res} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e65637469</msg>
<status endtime="20190121 13:04:51.824" status="PASS" starttime="20190121 13:04:51.815"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:51.828">${ISI_MSG_NORM} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e65637469</msg>
<status endtime="20190121 13:04:51.829" status="PASS" starttime="20190121 13:04:51.754"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190121 13:04:51.837" status="PASS" starttime="20190121 13:04:51.831"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:53.358">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F9 00 00 01 44 5A 3E</msg>
<status endtime="20190121 13:04:53.358" status="PASS" starttime="20190121 13:04:51.840"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:53.375" status="PASS" starttime="20190121 13:04:53.362"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:53.393">${temp1} = 1E105494000A000BEE06FFF9000001445A3E</msg>
<status endtime="20190121 13:04:53.394" status="PASS" starttime="20190121 13:04:53.387"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:53.403">${temp2} = EE06FFF900</msg>
<status endtime="20190121 13:04:53.404" status="PASS" starttime="20190121 13:04:53.397"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:53.413" status="PASS" starttime="20190121 13:04:53.407"></status>
</kw>
<status endtime="20190121 13:04:53.415" status="PASS" starttime="20190121 13:04:53.377"></status>
</kw>
<status endtime="20190121 13:04:53.417" status="PASS" starttime="20190121 13:04:51.733"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
<arg>${EEPROM_PRODUCT_NAME_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:53.436">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F9 00 0C 4f 4c 55 20 43 6f 6e 6e 65 63 74 BB</msg>
<status endtime="20190121 13:04:53.437" status="PASS" starttime="20190121 13:04:53.429"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:53.456">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F9', '00', '0C', '4f', '4c', '55', '20', '43', '6f', '6e', '6e', '65', '63', '74', 'BB']</msg>
<status endtime="20190121 13:04:53.457" status="PASS" starttime="20190121 13:04:53.451"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:53.464">Length is 26</msg>
<msg level="INFO" timestamp="20190121 13:04:53.466">${length} = 26</msg>
<status endtime="20190121 13:04:53.467" status="PASS" starttime="20190121 13:04:53.460"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190121 13:04:53.475" status="PASS" starttime="20190121 13:04:53.470"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:53.484">${value} = 20</msg>
<status endtime="20190121 13:04:53.485" status="PASS" starttime="20190121 13:04:53.478"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:53.495">${res} = 14</msg>
<status endtime="20190121 13:04:53.496" status="PASS" starttime="20190121 13:04:53.487"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:04:53.509" status="PASS" starttime="20190121 13:04:53.500"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:53.518">${res} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e656374BB</msg>
<status endtime="20190121 13:04:53.519" status="PASS" starttime="20190121 13:04:53.512"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:53.523">${ISI_MSG_NORM} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e656374BB</msg>
<status endtime="20190121 13:04:53.523" status="PASS" starttime="20190121 13:04:53.439"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190121 13:04:53.533" status="PASS" starttime="20190121 13:04:53.526"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:53.962">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F9 00 00 01 45 5A 3F</msg>
<status endtime="20190121 13:04:53.963" status="PASS" starttime="20190121 13:04:53.536"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:53.973" status="PASS" starttime="20190121 13:04:53.967"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:53.991">${temp1} = 1E105494000A000BEE06FFF9000001455A3F</msg>
<status endtime="20190121 13:04:53.992" status="PASS" starttime="20190121 13:04:53.985"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:54.002">${temp2} = EE06FFF900</msg>
<status endtime="20190121 13:04:54.003" status="PASS" starttime="20190121 13:04:53.995"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:54.011" status="PASS" starttime="20190121 13:04:54.006"></status>
</kw>
<status endtime="20190121 13:04:54.014" status="PASS" starttime="20190121 13:04:53.975"></status>
</kw>
<status endtime="20190121 13:04:54.016" status="PASS" starttime="20190121 13:04:53.419"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:04:54.071" status="PASS" starttime="20190121 13:04:54.024"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:04:54.122" status="PASS" starttime="20190121 13:04:54.075"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:04:56.130">Slept 2 seconds</msg>
<status endtime="20190121 13:04:56.132" status="PASS" starttime="20190121 13:04:54.126"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:04:56.184" status="PASS" starttime="20190121 13:04:56.135"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:04:56.236" status="PASS" starttime="20190121 13:04:56.188"></status>
</kw>
<status endtime="20190121 13:04:56.239" status="PASS" starttime="20190121 13:04:54.018"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:56.257">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F9 00 0C</msg>
<status endtime="20190121 13:04:56.257" status="PASS" starttime="20190121 13:04:56.250"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:04:56.266" status="PASS" starttime="20190121 13:04:56.260"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:56.713">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF F9 00 0C 00 4F 4C 55 20 43 6F 6E 6E 65 63 74 BB 01 43 00 AD 4E</msg>
<status endtime="20190121 13:04:56.714" status="PASS" starttime="20190121 13:04:56.269"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:56.725" status="PASS" starttime="20190121 13:04:56.719"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:56.744">${temp1} = 1E1054940017000BEE04FFF9000C004F4C5520436F6E6E656374BB014300AD4E</msg>
<status endtime="20190121 13:04:56.745" status="PASS" starttime="20190121 13:04:56.738"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:56.753">${temp2} = EE04FFF9000C00</msg>
<status endtime="20190121 13:04:56.754" status="PASS" starttime="20190121 13:04:56.748"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:56.767" status="PASS" starttime="20190121 13:04:56.757"></status>
</kw>
<status endtime="20190121 13:04:56.769" status="PASS" starttime="20190121 13:04:56.727"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:56.773">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF F9 00 0C 00 4F 4C 55 20 43 6F 6E 6E 65 63 74 BB 01 43 00 AD 4E</msg>
<status endtime="20190121 13:04:56.774" status="PASS" starttime="20190121 13:04:56.241"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN} ${EEPROM_APP_OK} ${EEPROM_PRODUCT_NAME_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:56.793">${temp1} = 1E1054940017000BEE04FFF9000C004F4C5520436F6E6E656374BB014300AD4E</msg>
<status endtime="20190121 13:04:56.794" status="PASS" starttime="20190121 13:04:56.787"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:56.802">${temp2} = 000C004f4c5520436f6e6e656374BB</msg>
<status endtime="20190121 13:04:56.803" status="PASS" starttime="20190121 13:04:56.797"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:56.812" status="PASS" starttime="20190121 13:04:56.806"></status>
</kw>
<status endtime="20190121 13:04:56.814" status="PASS" starttime="20190121 13:04:56.776"></status>
</kw>
<status endtime="20190121 13:04:56.816" status="PASS" starttime="20190121 13:04:51.712"></status>
</kw>
<kw name="TEST_LAST_POWER_STATE">
<doc>Write and read the EEPROM_LAST_POWER_STATE</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_LAST_POWER_STATE</arg>
</arguments>
<status endtime="20190121 13:04:56.829" status="PASS" starttime="20190121 13:04:56.824"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
<arg>${EEPROM_LAST_POWER_STATE_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:56.848">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F8 00 01 FF</msg>
<status endtime="20190121 13:04:56.849" status="PASS" starttime="20190121 13:04:56.841"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:56.864">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F8', '00', '01', 'FF']</msg>
<status endtime="20190121 13:04:56.865" status="PASS" starttime="20190121 13:04:56.859"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:56.872">Length is 15</msg>
<msg level="INFO" timestamp="20190121 13:04:56.874">${length} = 15</msg>
<status endtime="20190121 13:04:56.875" status="PASS" starttime="20190121 13:04:56.868"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190121 13:04:56.883" status="PASS" starttime="20190121 13:04:56.878"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:56.892">${value} = 9</msg>
<status endtime="20190121 13:04:56.893" status="PASS" starttime="20190121 13:04:56.886"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:56.903">${res} = 09</msg>
<status endtime="20190121 13:04:56.903" status="PASS" starttime="20190121 13:04:56.897"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:04:56.912" status="PASS" starttime="20190121 13:04:56.906"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:56.921">${res} = 1E54109400090000EE05FFF80001FF</msg>
<status endtime="20190121 13:04:56.922" status="PASS" starttime="20190121 13:04:56.915"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:56.925">${ISI_MSG_NORM} = 1E54109400090000EE05FFF80001FF</msg>
<status endtime="20190121 13:04:56.926" status="PASS" starttime="20190121 13:04:56.851"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190121 13:04:56.935" status="PASS" starttime="20190121 13:04:56.929"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:58.419">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F8 00 00 01 44 5A 3F</msg>
<status endtime="20190121 13:04:58.421" status="PASS" starttime="20190121 13:04:56.938"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:58.432" status="PASS" starttime="20190121 13:04:58.424"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:58.451">${temp1} = 1E105494000A000BEE06FFF8000001445A3F</msg>
<status endtime="20190121 13:04:58.452" status="PASS" starttime="20190121 13:04:58.445"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:58.460">${temp2} = EE06FFF800</msg>
<status endtime="20190121 13:04:58.461" status="PASS" starttime="20190121 13:04:58.454"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:58.471" status="PASS" starttime="20190121 13:04:58.465"></status>
</kw>
<status endtime="20190121 13:04:58.473" status="PASS" starttime="20190121 13:04:58.434"></status>
</kw>
<status endtime="20190121 13:04:58.475" status="PASS" starttime="20190121 13:04:56.831"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
<arg>${EEPROM_LAST_POWER_STATE_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:58.498">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F8 00 01 AA</msg>
<status endtime="20190121 13:04:58.499" status="PASS" starttime="20190121 13:04:58.488"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:58.520">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F8', '00', '01', 'AA']</msg>
<status endtime="20190121 13:04:58.521" status="PASS" starttime="20190121 13:04:58.515"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:58.528">Length is 15</msg>
<msg level="INFO" timestamp="20190121 13:04:58.530">${length} = 15</msg>
<status endtime="20190121 13:04:58.531" status="PASS" starttime="20190121 13:04:58.524"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190121 13:04:58.539" status="PASS" starttime="20190121 13:04:58.533"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:58.559">${value} = 9</msg>
<status endtime="20190121 13:04:58.560" status="PASS" starttime="20190121 13:04:58.549"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:58.577">${res} = 09</msg>
<status endtime="20190121 13:04:58.578" status="PASS" starttime="20190121 13:04:58.567"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:04:58.586" status="PASS" starttime="20190121 13:04:58.581"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:58.595">${res} = 1E54109400090000EE05FFF80001AA</msg>
<status endtime="20190121 13:04:58.596" status="PASS" starttime="20190121 13:04:58.589"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:04:58.599">${ISI_MSG_NORM} = 1E54109400090000EE05FFF80001AA</msg>
<status endtime="20190121 13:04:58.600" status="PASS" starttime="20190121 13:04:58.501"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190121 13:04:58.609" status="PASS" starttime="20190121 13:04:58.603"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:59.136">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F8 00 00 01 45 5A 3E</msg>
<status endtime="20190121 13:04:59.137" status="PASS" starttime="20190121 13:04:58.612"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:04:59.187" status="PASS" starttime="20190121 13:04:59.168"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:59.242">${temp1} = 1E105494000A000BEE06FFF8000001455A3E</msg>
<status endtime="20190121 13:04:59.243" status="PASS" starttime="20190121 13:04:59.222"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:04:59.251">${temp2} = EE06FFF800</msg>
<status endtime="20190121 13:04:59.252" status="PASS" starttime="20190121 13:04:59.245"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:04:59.266" status="PASS" starttime="20190121 13:04:59.260"></status>
</kw>
<status endtime="20190121 13:04:59.290" status="PASS" starttime="20190121 13:04:59.189"></status>
</kw>
<status endtime="20190121 13:04:59.302" status="PASS" starttime="20190121 13:04:58.478"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:04:59.410" status="PASS" starttime="20190121 13:04:59.328"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:04:59.477" status="PASS" starttime="20190121 13:04:59.413"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:01.485">Slept 2 seconds</msg>
<status endtime="20190121 13:05:01.487" status="PASS" starttime="20190121 13:04:59.480"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:05:01.543" status="PASS" starttime="20190121 13:05:01.489"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:05:01.594" status="PASS" starttime="20190121 13:05:01.546"></status>
</kw>
<status endtime="20190121 13:05:01.597" status="PASS" starttime="20190121 13:04:59.308"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:01.615">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F8 00 01</msg>
<status endtime="20190121 13:05:01.616" status="PASS" starttime="20190121 13:05:01.608"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:05:01.624" status="PASS" starttime="20190121 13:05:01.619"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:01.949">${resp} = 1E 10 54 94 00 0C 00 0B EE 04 FF F8 00 01 00 AA 01 43 5A 97</msg>
<status endtime="20190121 13:05:01.950" status="PASS" starttime="20190121 13:05:01.627"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:05:01.959" status="PASS" starttime="20190121 13:05:01.954"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:01.978">${temp1} = 1E105494000C000BEE04FFF8000100AA01435A97</msg>
<status endtime="20190121 13:05:01.979" status="PASS" starttime="20190121 13:05:01.972"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:01.987">${temp2} = EE04FFF8000100</msg>
<status endtime="20190121 13:05:01.988" status="PASS" starttime="20190121 13:05:01.982"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:01.997" status="PASS" starttime="20190121 13:05:01.991"></status>
</kw>
<status endtime="20190121 13:05:01.999" status="PASS" starttime="20190121 13:05:01.961"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:05:02.003">${RESP} = 1E 10 54 94 00 0C 00 0B EE 04 FF F8 00 01 00 AA 01 43 5A 97</msg>
<status endtime="20190121 13:05:02.004" status="PASS" starttime="20190121 13:05:01.599"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN} ${EEPROM_APP_OK} ${EEPROM_LAST_POWER_STATE_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:02.022">${temp1} = 1E105494000C000BEE04FFF8000100AA01435A97</msg>
<status endtime="20190121 13:05:02.023" status="PASS" starttime="20190121 13:05:02.017"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:02.036">${temp2} = 000100AA</msg>
<status endtime="20190121 13:05:02.037" status="PASS" starttime="20190121 13:05:02.026"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:02.057" status="PASS" starttime="20190121 13:05:02.040"></status>
</kw>
<status endtime="20190121 13:05:02.060" status="PASS" starttime="20190121 13:05:02.006"></status>
</kw>
<status endtime="20190121 13:05:02.066" status="PASS" starttime="20190121 13:04:56.818"></status>
</kw>
<kw name="TEST_WAKE_BARRIERS">
<doc>Write and read the EEPROM_WAKE_BARRIERS</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_WAKE_BARRIERS</arg>
</arguments>
<status endtime="20190121 13:05:02.080" status="PASS" starttime="20190121 13:05:02.074"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
<arg>${EEPROM_WAKE_BARRIERS_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:02.099">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F7 00 02 FF FF</msg>
<status endtime="20190121 13:05:02.100" status="PASS" starttime="20190121 13:05:02.092"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:02.115">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F7', '00', '02', 'FF', 'FF']</msg>
<status endtime="20190121 13:05:02.116" status="PASS" starttime="20190121 13:05:02.110"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:02.123">Length is 16</msg>
<msg level="INFO" timestamp="20190121 13:05:02.125">${length} = 16</msg>
<status endtime="20190121 13:05:02.126" status="PASS" starttime="20190121 13:05:02.119"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190121 13:05:02.134" status="PASS" starttime="20190121 13:05:02.128"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:02.142">${value} = 10</msg>
<status endtime="20190121 13:05:02.143" status="PASS" starttime="20190121 13:05:02.136"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:02.151">${res} = 0A</msg>
<status endtime="20190121 13:05:02.152" status="PASS" starttime="20190121 13:05:02.146"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:05:02.160" status="PASS" starttime="20190121 13:05:02.155"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:02.169">${res} = 1E541094000A0000EE05FFF70002FFFF</msg>
<status endtime="20190121 13:05:02.170" status="PASS" starttime="20190121 13:05:02.163"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:05:02.174">${ISI_MSG_NORM} = 1E541094000A0000EE05FFF70002FFFF</msg>
<status endtime="20190121 13:05:02.175" status="PASS" starttime="20190121 13:05:02.102"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190121 13:05:02.183" status="PASS" starttime="20190121 13:05:02.177"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:03.580">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F7 00 00 01 44 5A 30</msg>
<status endtime="20190121 13:05:03.581" status="PASS" starttime="20190121 13:05:02.186"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:05:03.594" status="PASS" starttime="20190121 13:05:03.584"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:03.615">${temp1} = 1E105494000A000BEE06FFF7000001445A30</msg>
<status endtime="20190121 13:05:03.615" status="PASS" starttime="20190121 13:05:03.607"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:03.624">${temp2} = EE06FFF700</msg>
<status endtime="20190121 13:05:03.625" status="PASS" starttime="20190121 13:05:03.618"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:03.633" status="PASS" starttime="20190121 13:05:03.628"></status>
</kw>
<status endtime="20190121 13:05:03.636" status="PASS" starttime="20190121 13:05:03.596"></status>
</kw>
<status endtime="20190121 13:05:03.638" status="PASS" starttime="20190121 13:05:02.082"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
<arg>${EEPROM_WAKE_BARRIERS_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:03.657">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F7 00 02 AA BB</msg>
<status endtime="20190121 13:05:03.658" status="PASS" starttime="20190121 13:05:03.650"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:03.673">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F7', '00', '02', 'AA', 'BB']</msg>
<status endtime="20190121 13:05:03.674" status="PASS" starttime="20190121 13:05:03.668"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:03.681">Length is 16</msg>
<msg level="INFO" timestamp="20190121 13:05:03.683">${length} = 16</msg>
<status endtime="20190121 13:05:03.684" status="PASS" starttime="20190121 13:05:03.677"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190121 13:05:03.698" status="PASS" starttime="20190121 13:05:03.687"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:03.707">${value} = 10</msg>
<status endtime="20190121 13:05:03.707" status="PASS" starttime="20190121 13:05:03.701"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:03.716">${res} = 0A</msg>
<status endtime="20190121 13:05:03.717" status="PASS" starttime="20190121 13:05:03.710"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:05:03.725" status="PASS" starttime="20190121 13:05:03.720"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:03.734">${res} = 1E541094000A0000EE05FFF70002AABB</msg>
<status endtime="20190121 13:05:03.735" status="PASS" starttime="20190121 13:05:03.728"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:05:03.738">${ISI_MSG_NORM} = 1E541094000A0000EE05FFF70002AABB</msg>
<status endtime="20190121 13:05:03.739" status="PASS" starttime="20190121 13:05:03.660"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190121 13:05:03.747" status="PASS" starttime="20190121 13:05:03.742"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:04.098">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F7 00 00 01 45 5A 31</msg>
<status endtime="20190121 13:05:04.099" status="PASS" starttime="20190121 13:05:03.750"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:05:04.107" status="PASS" starttime="20190121 13:05:04.102"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:04.125">${temp1} = 1E105494000A000BEE06FFF7000001455A31</msg>
<status endtime="20190121 13:05:04.126" status="PASS" starttime="20190121 13:05:04.120"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:04.135">${temp2} = EE06FFF700</msg>
<status endtime="20190121 13:05:04.136" status="PASS" starttime="20190121 13:05:04.129"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:04.144" status="PASS" starttime="20190121 13:05:04.139"></status>
</kw>
<status endtime="20190121 13:05:04.146" status="PASS" starttime="20190121 13:05:04.109"></status>
</kw>
<status endtime="20190121 13:05:04.149" status="PASS" starttime="20190121 13:05:03.640"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:04.204" status="PASS" starttime="20190121 13:05:04.157"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:04.255" status="PASS" starttime="20190121 13:05:04.207"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:06.264">Slept 2 seconds</msg>
<status endtime="20190121 13:05:06.266" status="PASS" starttime="20190121 13:05:04.258"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:05:06.336" status="PASS" starttime="20190121 13:05:06.269"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:05:06.410" status="PASS" starttime="20190121 13:05:06.339"></status>
</kw>
<status endtime="20190121 13:05:06.413" status="PASS" starttime="20190121 13:05:04.151"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:06.431">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F7 00 02</msg>
<status endtime="20190121 13:05:06.431" status="PASS" starttime="20190121 13:05:06.424"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:05:06.441" status="PASS" starttime="20190121 13:05:06.435"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:06.750">${resp} = 1E 10 54 94 00 0D 00 0B EE 04 FF F7 00 02 00 AA BB 01 43 00 A3 D8</msg>
<status endtime="20190121 13:05:06.751" status="PASS" starttime="20190121 13:05:06.444"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:05:06.760" status="PASS" starttime="20190121 13:05:06.755"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:06.779">${temp1} = 1E105494000D000BEE04FFF7000200AABB014300A3D8</msg>
<status endtime="20190121 13:05:06.780" status="PASS" starttime="20190121 13:05:06.773"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:06.789">${temp2} = EE04FFF7000200</msg>
<status endtime="20190121 13:05:06.790" status="PASS" starttime="20190121 13:05:06.783"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:06.799" status="PASS" starttime="20190121 13:05:06.793"></status>
</kw>
<status endtime="20190121 13:05:06.801" status="PASS" starttime="20190121 13:05:06.762"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:05:06.805">${RESP} = 1E 10 54 94 00 0D 00 0B EE 04 FF F7 00 02 00 AA BB 01 43 00 A3 D8</msg>
<status endtime="20190121 13:05:06.805" status="PASS" starttime="20190121 13:05:06.415"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN} ${EEPROM_APP_OK} ${EEPROM_WAKE_BARRIERS_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:06.823">${temp1} = 1E105494000D000BEE04FFF7000200AABB014300A3D8</msg>
<status endtime="20190121 13:05:06.824" status="PASS" starttime="20190121 13:05:06.818"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:06.833">${temp2} = 000200AABB</msg>
<status endtime="20190121 13:05:06.834" status="PASS" starttime="20190121 13:05:06.827"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:06.847" status="PASS" starttime="20190121 13:05:06.837"></status>
</kw>
<status endtime="20190121 13:05:06.849" status="PASS" starttime="20190121 13:05:06.807"></status>
</kw>
<status endtime="20190121 13:05:06.852" status="PASS" starttime="20190121 13:05:02.068"></status>
</kw>
<kw name="TEST_DIAG_CODING">
<doc>Write and read the EEPROM_DIAG_CODING</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_DIAG_CODING</arg>
</arguments>
<status endtime="20190121 13:05:06.865" status="PASS" starttime="20190121 13:05:06.860"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
<arg>${EEPROM_DIAG_CODING_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:06.884">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F6 00 0C 11 15 05 15 01 FF 00 01 7C FF 00 00</msg>
<status endtime="20190121 13:05:06.885" status="PASS" starttime="20190121 13:05:06.877"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:06.900">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F6', '00', '0C', '11', '15', '05', '15', '01', 'FF', '00', '01', '7C', 'FF', '00', '00']</msg>
<status endtime="20190121 13:05:06.901" status="PASS" starttime="20190121 13:05:06.895"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:06.908">Length is 26</msg>
<msg level="INFO" timestamp="20190121 13:05:06.910">${length} = 26</msg>
<status endtime="20190121 13:05:06.911" status="PASS" starttime="20190121 13:05:06.904"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190121 13:05:06.919" status="PASS" starttime="20190121 13:05:06.914"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:06.928">${value} = 20</msg>
<status endtime="20190121 13:05:06.929" status="PASS" starttime="20190121 13:05:06.922"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:06.937">${res} = 14</msg>
<status endtime="20190121 13:05:06.938" status="PASS" starttime="20190121 13:05:06.932"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:05:06.946" status="PASS" starttime="20190121 13:05:06.941"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:06.955">${res} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF0000</msg>
<status endtime="20190121 13:05:06.956" status="PASS" starttime="20190121 13:05:06.949"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:05:06.960">${ISI_MSG_NORM} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF0000</msg>
<status endtime="20190121 13:05:06.961" status="PASS" starttime="20190121 13:05:06.887"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190121 13:05:06.970" status="PASS" starttime="20190121 13:05:06.964"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:08.432">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F6 00 00 01 44 5A 31</msg>
<status endtime="20190121 13:05:08.433" status="PASS" starttime="20190121 13:05:06.973"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:05:08.446" status="PASS" starttime="20190121 13:05:08.436"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:08.466">${temp1} = 1E105494000A000BEE06FFF6000001445A31</msg>
<status endtime="20190121 13:05:08.466" status="PASS" starttime="20190121 13:05:08.459"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:08.475">${temp2} = EE06FFF600</msg>
<status endtime="20190121 13:05:08.476" status="PASS" starttime="20190121 13:05:08.469"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:08.484" status="PASS" starttime="20190121 13:05:08.479"></status>
</kw>
<status endtime="20190121 13:05:08.487" status="PASS" starttime="20190121 13:05:08.448"></status>
</kw>
<status endtime="20190121 13:05:08.489" status="PASS" starttime="20190121 13:05:06.867"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
<arg>${EEPROM_DIAG_CODING_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:08.510">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F6 00 0C 11 15 05 15 01 FF 00 01 7C FF 00 CC</msg>
<status endtime="20190121 13:05:08.511" status="PASS" starttime="20190121 13:05:08.503"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:08.527">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F6', '00', '0C', '11', '15', '05', '15', '01', 'FF', '00', '01', '7C', 'FF', '00', 'CC']</msg>
<status endtime="20190121 13:05:08.527" status="PASS" starttime="20190121 13:05:08.522"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:08.534">Length is 26</msg>
<msg level="INFO" timestamp="20190121 13:05:08.536">${length} = 26</msg>
<status endtime="20190121 13:05:08.537" status="PASS" starttime="20190121 13:05:08.530"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190121 13:05:08.549" status="PASS" starttime="20190121 13:05:08.540"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:08.558">${value} = 20</msg>
<status endtime="20190121 13:05:08.558" status="PASS" starttime="20190121 13:05:08.552"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:08.567">${res} = 14</msg>
<status endtime="20190121 13:05:08.568" status="PASS" starttime="20190121 13:05:08.561"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:05:08.576" status="PASS" starttime="20190121 13:05:08.571"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:08.586">${res} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF00CC</msg>
<status endtime="20190121 13:05:08.587" status="PASS" starttime="20190121 13:05:08.579"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:05:08.591">${ISI_MSG_NORM} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF00CC</msg>
<status endtime="20190121 13:05:08.592" status="PASS" starttime="20190121 13:05:08.513"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190121 13:05:08.601" status="PASS" starttime="20190121 13:05:08.595"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:09.049">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F6 00 00 01 45 5A 30</msg>
<status endtime="20190121 13:05:09.050" status="PASS" starttime="20190121 13:05:08.603"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:05:09.059" status="PASS" starttime="20190121 13:05:09.053"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:09.078">${temp1} = 1E105494000A000BEE06FFF6000001455A30</msg>
<status endtime="20190121 13:05:09.079" status="PASS" starttime="20190121 13:05:09.072"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:09.089">${temp2} = EE06FFF600</msg>
<status endtime="20190121 13:05:09.090" status="PASS" starttime="20190121 13:05:09.083"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:09.098" status="PASS" starttime="20190121 13:05:09.093"></status>
</kw>
<status endtime="20190121 13:05:09.101" status="PASS" starttime="20190121 13:05:09.061"></status>
</kw>
<status endtime="20190121 13:05:09.103" status="PASS" starttime="20190121 13:05:08.491"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:09.173" status="PASS" starttime="20190121 13:05:09.111"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:09.230" status="PASS" starttime="20190121 13:05:09.176"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:11.238">Slept 2 seconds</msg>
<status endtime="20190121 13:05:11.241" status="PASS" starttime="20190121 13:05:09.234"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:05:11.318" status="PASS" starttime="20190121 13:05:11.244"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:05:11.543" status="PASS" starttime="20190121 13:05:11.333"></status>
</kw>
<status endtime="20190121 13:05:11.554" status="PASS" starttime="20190121 13:05:09.105"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:11.665">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F6 00 0C</msg>
<status endtime="20190121 13:05:11.666" status="PASS" starttime="20190121 13:05:11.614"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:05:11.699" status="PASS" starttime="20190121 13:05:11.673"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:13.399">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF F6 00 0C 00 11 15 05 15 01 FF 00 01 7C FF 00 CC 01 43 00 D5 0E</msg>
<status endtime="20190121 13:05:13.400" status="PASS" starttime="20190121 13:05:11.707"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:05:13.420" status="PASS" starttime="20190121 13:05:13.403"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:13.452">${temp1} = 1E1054940017000BEE04FFF6000C001115051501FF00017CFF00CC014300D50E</msg>
<status endtime="20190121 13:05:13.453" status="PASS" starttime="20190121 13:05:13.446"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:13.487">${temp2} = EE04FFF6000C00</msg>
<status endtime="20190121 13:05:13.488" status="PASS" starttime="20190121 13:05:13.469"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:13.496" status="PASS" starttime="20190121 13:05:13.491"></status>
</kw>
<status endtime="20190121 13:05:13.515" status="PASS" starttime="20190121 13:05:13.422"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:05:13.528">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF F6 00 0C 00 11 15 05 15 01 FF 00 01 7C FF 00 CC 01 43 00 D5 0E</msg>
<status endtime="20190121 13:05:13.529" status="PASS" starttime="20190121 13:05:11.580"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_DIAG_CODING_LEN} ${EEPROM_APP_OK} ${EEPROM_DIAG_CODING_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:13.578">${temp1} = 1E1054940017000BEE04FFF6000C001115051501FF00017CFF00CC014300D50E</msg>
<status endtime="20190121 13:05:13.579" status="PASS" starttime="20190121 13:05:13.559"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:13.602">${temp2} = 000C001115051501FF00017CFF00CC</msg>
<status endtime="20190121 13:05:13.603" status="PASS" starttime="20190121 13:05:13.582"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:13.624" status="PASS" starttime="20190121 13:05:13.606"></status>
</kw>
<status endtime="20190121 13:05:13.627" status="PASS" starttime="20190121 13:05:13.531"></status>
</kw>
<status endtime="20190121 13:05:13.629" status="PASS" starttime="20190121 13:05:06.854"></status>
</kw>
<kw name="TEST_RESET_BUFFER">
<doc>Write and read the EEPROM_RESET_BUFFER</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_RESET_BUFFER</arg>
</arguments>
<status endtime="20190121 13:05:13.666" status="PASS" starttime="20190121 13:05:13.654"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
<arg>${EEPROM_RESET_BUFFER_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:13.718">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F5 00 42 00000000 00000000 00000000 000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status endtime="20190121 13:05:13.719" status="PASS" starttime="20190121 13:05:13.699"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:13.761">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F5', '00', '42', '00000000', '00000000', '00000000', '000000000000000000000000060000000000000600000000000006000000000000060000000000...</msg>
<status endtime="20190121 13:05:13.762" status="PASS" starttime="20190121 13:05:13.740"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:13.782">Length is 18</msg>
<msg level="INFO" timestamp="20190121 13:05:13.785">${length} = 18</msg>
<status endtime="20190121 13:05:13.785" status="PASS" starttime="20190121 13:05:13.766"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190121 13:05:13.830" status="PASS" starttime="20190121 13:05:13.788"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:13.845">${value} = 12</msg>
<status endtime="20190121 13:05:13.846" status="PASS" starttime="20190121 13:05:13.833"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:13.863">${res} = 0C</msg>
<status endtime="20190121 13:05:13.864" status="PASS" starttime="20190121 13:05:13.849"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:05:13.877" status="PASS" starttime="20190121 13:05:13.867"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:13.886">${res} = 1E541094000C0000EE05FFF50042000000000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status endtime="20190121 13:05:13.887" status="PASS" starttime="20190121 13:05:13.880"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:05:13.890">${ISI_MSG_NORM} = 1E541094000C0000EE05FFF50042000000000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status endtime="20190121 13:05:13.891" status="PASS" starttime="20190121 13:05:13.722"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190121 13:05:13.900" status="PASS" starttime="20190121 13:05:13.894"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:14.250">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F5 00 00 01 44 5A 32</msg>
<status endtime="20190121 13:05:14.251" status="PASS" starttime="20190121 13:05:13.903"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:05:14.260" status="PASS" starttime="20190121 13:05:14.255"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:14.278">${temp1} = 1E105494000A000BEE06FFF5000001445A32</msg>
<status endtime="20190121 13:05:14.279" status="PASS" starttime="20190121 13:05:14.273"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:14.288">${temp2} = EE06FFF500</msg>
<status endtime="20190121 13:05:14.289" status="PASS" starttime="20190121 13:05:14.282"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:14.297" status="PASS" starttime="20190121 13:05:14.291"></status>
</kw>
<status endtime="20190121 13:05:14.299" status="PASS" starttime="20190121 13:05:14.262"></status>
</kw>
<status endtime="20190121 13:05:14.301" status="PASS" starttime="20190121 13:05:13.668"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
<arg>${EEPROM_RESET_BUFFER_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:14.320">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F5 00 42 AABB0000 00000000 00000000 000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status endtime="20190121 13:05:14.321" status="PASS" starttime="20190121 13:05:14.313"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:14.336">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F5', '00', '42', 'AABB0000', '00000000', '00000000', '000000000000000000000000060000000000000600000000000006000000000000060000000000...</msg>
<status endtime="20190121 13:05:14.337" status="PASS" starttime="20190121 13:05:14.331"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:14.344">Length is 18</msg>
<msg level="INFO" timestamp="20190121 13:05:14.347">${length} = 18</msg>
<status endtime="20190121 13:05:14.347" status="PASS" starttime="20190121 13:05:14.340"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190121 13:05:14.356" status="PASS" starttime="20190121 13:05:14.350"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:14.364">${value} = 12</msg>
<status endtime="20190121 13:05:14.365" status="PASS" starttime="20190121 13:05:14.358"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:14.384">${res} = 0C</msg>
<status endtime="20190121 13:05:14.385" status="PASS" starttime="20190121 13:05:14.368"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:05:14.392" status="PASS" starttime="20190121 13:05:14.387"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:14.403">${res} = 1E541094000C0000EE05FFF50042AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status endtime="20190121 13:05:14.403" status="PASS" starttime="20190121 13:05:14.395"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:05:14.407">${ISI_MSG_NORM} = 1E541094000C0000EE05FFF50042AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status endtime="20190121 13:05:14.408" status="PASS" starttime="20190121 13:05:14.323"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190121 13:05:14.417" status="PASS" starttime="20190121 13:05:14.411"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:14.865">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F5 00 00 01 47 5A 31</msg>
<status endtime="20190121 13:05:14.866" status="PASS" starttime="20190121 13:05:14.419"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:05:14.875" status="PASS" starttime="20190121 13:05:14.870"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:14.893">${temp1} = 1E105494000A000BEE06FFF5000001475A31</msg>
<status endtime="20190121 13:05:14.894" status="PASS" starttime="20190121 13:05:14.887"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:14.903">${temp2} = EE06FFF500</msg>
<status endtime="20190121 13:05:14.904" status="PASS" starttime="20190121 13:05:14.897"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:14.912" status="PASS" starttime="20190121 13:05:14.907"></status>
</kw>
<status endtime="20190121 13:05:14.914" status="PASS" starttime="20190121 13:05:14.877"></status>
</kw>
<status endtime="20190121 13:05:14.917" status="PASS" starttime="20190121 13:05:14.303"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:14.981" status="PASS" starttime="20190121 13:05:14.925"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:15.061" status="PASS" starttime="20190121 13:05:14.983"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:17.089">Slept 2 seconds</msg>
<status endtime="20190121 13:05:17.091" status="PASS" starttime="20190121 13:05:15.064"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:05:17.141" status="PASS" starttime="20190121 13:05:17.093"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:05:17.190" status="PASS" starttime="20190121 13:05:17.144"></status>
</kw>
<status endtime="20190121 13:05:17.193" status="PASS" starttime="20190121 13:05:14.919"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:17.211">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F5 00 42</msg>
<status endtime="20190121 13:05:17.212" status="PASS" starttime="20190121 13:05:17.205"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190121 13:05:17.220" status="PASS" starttime="20190121 13:05:17.215"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:17.545">${resp} = 1E 10 54 94 00 4D 00 0B EE 04 FF F5 00 42 00 AA BB 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00...</msg>
<status endtime="20190121 13:05:17.546" status="PASS" starttime="20190121 13:05:17.223"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190121 13:05:17.554" status="PASS" starttime="20190121 13:05:17.549"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:17.573">${temp1} = 1E105494004D000BEE04FFF5004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000014300A5DC</msg>
<status endtime="20190121 13:05:17.574" status="PASS" starttime="20190121 13:05:17.568"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:17.583">${temp2} = EE04FFF5004200</msg>
<status endtime="20190121 13:05:17.584" status="PASS" starttime="20190121 13:05:17.577"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:17.593" status="PASS" starttime="20190121 13:05:17.587"></status>
</kw>
<status endtime="20190121 13:05:17.595" status="PASS" starttime="20190121 13:05:17.557"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:05:17.599">${RESP} = 1E 10 54 94 00 4D 00 0B EE 04 FF F5 00 42 00 AA BB 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00...</msg>
<status endtime="20190121 13:05:17.599" status="PASS" starttime="20190121 13:05:17.195"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN} ${EEPROM_APP_OK} ${EEPROM_RESET_BUFFER_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:17.619">${temp1} = 1E105494004D000BEE04FFF5004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000014300A5DC</msg>
<status endtime="20190121 13:05:17.620" status="PASS" starttime="20190121 13:05:17.613"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:17.629">${temp2} = 004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status endtime="20190121 13:05:17.630" status="PASS" starttime="20190121 13:05:17.623"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:17.638" status="PASS" starttime="20190121 13:05:17.633"></status>
</kw>
<status endtime="20190121 13:05:17.641" status="PASS" starttime="20190121 13:05:17.602"></status>
</kw>
<status endtime="20190121 13:05:17.643" status="PASS" starttime="20190121 13:05:13.631"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<doc>Teardown, Switch power off and close the Serial port, Switch off the CanController</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Teardown call</arg>
</arguments>
<status endtime="20190121 13:05:17.658" status="PASS" starttime="20190121 13:05:17.653"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:17.733" status="PASS" starttime="20190121 13:05:17.661"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:17.789" status="PASS" starttime="20190121 13:05:17.736"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:05:17.838" status="PASS" starttime="20190121 13:05:17.793"></status>
</kw>
<status endtime="20190121 13:05:17.841" status="PASS" starttime="20190121 13:05:17.647"></status>
</kw>
<doc>Implements Test Task SKTB-41553</doc>
<tags>
<tag>EEPROM</tag>
</tags>
<status endtime="20190121 13:05:17.842" critical="yes" status="PASS" starttime="20190121 13:04:43.136"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg level="INFO" timestamp="20190121 13:05:19.357">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190121 13:05:19.383">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190121 13:05:19.415" status="PASS" starttime="20190121 13:05:17.897"></status>
</kw>
<status endtime="20190121 13:05:19.416" status="PASS" starttime="20190121 13:05:17.858"></status>
</kw>
<status endtime="20190121 13:05:19.418" status="PASS" starttime="20190121 13:05:17.852"></status>
</kw>
<doc>EEPROM write read test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190121 13:05:19.419" status="PASS" starttime="20190121 13:04:40.227"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56663.robot" id="s1-s14" name="SKTB-56663">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:20.021">Connecting to tnt-server localhost...</msg>
<status endtime="20190121 13:05:20.035" status="PASS" starttime="20190121 13:05:20.017"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:20.062">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190121 13:05:20.064">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190121 13:05:22.265">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190121 13:05:22.267" status="PASS" starttime="20190121 13:05:20.037"></status>
</kw>
<status endtime="20190121 13:05:22.297" status="PASS" starttime="20190121 13:05:19.998"></status>
</kw>
<test id="s1-s14-t1" name="SKTB-56663">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:22.430" status="PASS" starttime="20190121 13:05:22.333"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:22.597" status="PASS" starttime="20190121 13:05:22.433"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:22.734" status="PASS" starttime="20190121 13:05:22.599"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:24.762">Slept 2 seconds</msg>
<status endtime="20190121 13:05:24.764" status="PASS" starttime="20190121 13:05:22.737"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:05:24.813" status="PASS" starttime="20190121 13:05:24.767"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:05:24.865" status="PASS" starttime="20190121 13:05:24.817"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:05:24.913" status="PASS" starttime="20190121 13:05:24.868"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190121 13:05:24.962" status="PASS" starttime="20190121 13:05:24.916"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190121 13:05:25.014" status="PASS" starttime="20190121 13:05:24.966"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Set State">
<arguments>
<arg>timeout</arg>
<arg>${10000}</arg>
</arguments>
<status endtime="20190121 13:05:25.105" status="PASS" starttime="20190121 13:05:25.018"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:27.112">Slept 2 seconds</msg>
<status endtime="20190121 13:05:27.114" status="PASS" starttime="20190121 13:05:25.108"></status>
</kw>
<status endtime="20190121 13:05:27.118" status="PASS" starttime="20190121 13:05:22.319"></status>
</kw>
<kw name="Step_1">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_GET_REQ} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:27.329">${resp} = 1E 14 54 8E 00 0A 00 0D 01 02 00 01 2F DE 01 43 65 03</msg>
<status endtime="20190121 13:05:27.330" status="PASS" starttime="20190121 13:05:27.127"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:27.345">1E 14 54 8E 00 0A 00 0D 01 02 00 01 2F DE 01 43 65 03</msg>
<status endtime="20190121 13:05:27.359" status="PASS" starttime="20190121 13:05:27.334"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_VOLTAGE_GET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:27.379" status="PASS" starttime="20190121 13:05:27.362"></status>
</kw>
<status endtime="20190121 13:05:27.382" status="PASS" starttime="20190121 13:05:27.121"></status>
</kw>
<kw name="Step_2">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_GET_REQ} 00</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:27.639">${resp} = 1E 14 54 8E 00 0A 00 0D 01 02 01 00 FF FF 01 44 B4 24</msg>
<status endtime="20190121 13:05:27.641" status="PASS" starttime="20190121 13:05:27.402"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:27.648">1E 14 54 8E 00 0A 00 0D 01 02 01 00 FF FF 01 44 B4 24</msg>
<status endtime="20190121 13:05:27.650" status="PASS" starttime="20190121 13:05:27.644"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_VOLTAGE_GET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:27.660" status="PASS" starttime="20190121 13:05:27.653"></status>
</kw>
<status endtime="20190121 13:05:27.662" status="PASS" starttime="20190121 13:05:27.384"></status>
</kw>
<kw name="Step_3">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_FALL_BELOW} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:27.906">${info} = 1E 14 54 8E 00 08 00 0D 01 04 00 01 01 45 4A DF</msg>
<status endtime="20190121 13:05:27.906" status="PASS" starttime="20190121 13:05:27.671"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:27.914">1E 14 54 8E 00 08 00 0D 01 04 00 01 01 45 4A DF</msg>
<status endtime="20190121 13:05:27.916" status="PASS" starttime="20190121 13:05:27.909"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:27.927" status="PASS" starttime="20190121 13:05:27.919"></status>
</kw>
<status endtime="20190121 13:05:27.929" status="PASS" starttime="20190121 13:05:27.664"></status>
</kw>
<kw name="Step_4">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_EXCEED} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:28.171">${info} = 1E 14 54 8E 00 08 00 0D 01 04 00 01 01 40 4A DA</msg>
<status endtime="20190121 13:05:28.173" status="PASS" starttime="20190121 13:05:27.937"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:28.180">1E 14 54 8E 00 08 00 0D 01 04 00 01 01 40 4A DA</msg>
<status endtime="20190121 13:05:28.183" status="PASS" starttime="20190121 13:05:28.176"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:28.193" status="PASS" starttime="20190121 13:05:28.186"></status>
</kw>
<status endtime="20190121 13:05:28.195" status="PASS" starttime="20190121 13:05:27.931"></status>
</kw>
<kw name="Step_5">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_INVALID} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:28.441">${info} = 1E 14 54 8E 00 08 00 0D 01 04 01 01 01 41 4B DB</msg>
<status endtime="20190121 13:05:28.442" status="PASS" starttime="20190121 13:05:28.207"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:28.449">1E 14 54 8E 00 08 00 0D 01 04 01 01 01 41 4B DB</msg>
<status endtime="20190121 13:05:28.452" status="PASS" starttime="20190121 13:05:28.445"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:28.461" status="PASS" starttime="20190121 13:05:28.455"></status>
</kw>
<status endtime="20190121 13:05:28.464" status="PASS" starttime="20190121 13:05:28.197"></status>
</kw>
<kw name="Step_6">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} 00 ${SCA_THRESHOLD_FALL_BELOW} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:28.709">${info} = 1E 14 54 8E 00 08 00 0D 01 04 01 00 01 42 4B D9</msg>
<status endtime="20190121 13:05:28.710" status="PASS" starttime="20190121 13:05:28.472"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:28.718">1E 14 54 8E 00 08 00 0D 01 04 01 00 01 42 4B D9</msg>
<status endtime="20190121 13:05:28.721" status="PASS" starttime="20190121 13:05:28.714"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:28.730" status="PASS" starttime="20190121 13:05:28.723"></status>
</kw>
<status endtime="20190121 13:05:28.735" status="PASS" starttime="20190121 13:05:28.466"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:28.817" status="PASS" starttime="20190121 13:05:28.745"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:28.877" status="PASS" starttime="20190121 13:05:28.820"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:28.948" status="PASS" starttime="20190121 13:05:28.880"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:30.956">Slept 2 seconds</msg>
<status endtime="20190121 13:05:30.958" status="PASS" starttime="20190121 13:05:28.951"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190121 13:05:31.008" status="PASS" starttime="20190121 13:05:30.961"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:05:31.055" status="PASS" starttime="20190121 13:05:31.011"></status>
</kw>
<status endtime="20190121 13:05:31.058" status="PASS" starttime="20190121 13:05:28.738"></status>
</kw>
<doc>Implements SW Test Case SKTB-56663</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status endtime="20190121 13:05:31.059" critical="yes" status="PASS" starttime="20190121 13:05:22.299"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg level="INFO" timestamp="20190121 13:05:32.526">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190121 13:05:32.601">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190121 13:05:32.606" status="PASS" starttime="20190121 13:05:31.101"></status>
</kw>
<status endtime="20190121 13:05:32.607" status="PASS" starttime="20190121 13:05:31.075"></status>
</kw>
<status endtime="20190121 13:05:32.612" status="PASS" starttime="20190121 13:05:31.069"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190121 13:05:32.613" status="PASS" starttime="20190121 13:05:19.564"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56067.robot" id="s1-s15" name="SKTB-56067">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:33.313">Connecting to tnt-server localhost...</msg>
<status endtime="20190121 13:05:33.326" status="PASS" starttime="20190121 13:05:33.306"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:33.335">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190121 13:05:33.347">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190121 13:05:35.536">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190121 13:05:35.538" status="PASS" starttime="20190121 13:05:33.329"></status>
</kw>
<status endtime="20190121 13:05:35.540" status="PASS" starttime="20190121 13:05:33.293"></status>
</kw>
<test id="s1-s15-t1" name="SKTB-SKTB-56067">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:35.686" status="PASS" starttime="20190121 13:05:35.585"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:35.800" status="PASS" starttime="20190121 13:05:35.689"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:35.958" status="PASS" starttime="20190121 13:05:35.819"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:37.972">Slept 2 seconds</msg>
<status endtime="20190121 13:05:37.974" status="PASS" starttime="20190121 13:05:35.963"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:05:38.024" status="PASS" starttime="20190121 13:05:37.977"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:39.032">Slept 1 second</msg>
<status endtime="20190121 13:05:39.034" status="PASS" starttime="20190121 13:05:38.027"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:05:39.083" status="PASS" starttime="20190121 13:05:39.037"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:41.096">Slept 2 seconds</msg>
<status endtime="20190121 13:05:41.098" status="PASS" starttime="20190121 13:05:39.086"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:05:41.161" status="PASS" starttime="20190121 13:05:41.101"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190121 13:05:41.209" status="PASS" starttime="20190121 13:05:41.164"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190121 13:05:41.258" status="PASS" starttime="20190121 13:05:41.213"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190121 13:05:41.307" status="PASS" starttime="20190121 13:05:41.262"></status>
</kw>
<status endtime="20190121 13:05:41.310" status="PASS" starttime="20190121 13:05:35.568"></status>
</kw>
<kw name="TEST_SERIAL_COMMUNICATION">
<doc>Test serial communication and change baudrate</doc>
<kw name="Step_alive">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:41.394">${res_dict} = {'data': '', 'result': '4153', 'status': True, 'request': '41'}</msg>
<status endtime="20190121 13:05:41.395" status="PASS" starttime="20190121 13:05:41.324"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:41.448">${value} = True</msg>
<status endtime="20190121 13:05:41.453" status="PASS" starttime="20190121 13:05:41.409"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190121 13:05:41.475" status="PASS" starttime="20190121 13:05:41.456"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:42.483">Slept 1 second</msg>
<status endtime="20190121 13:05:42.485" status="PASS" starttime="20190121 13:05:41.478"></status>
</kw>
<status endtime="20190121 13:05:42.487" status="PASS" starttime="20190121 13:05:41.318"></status>
</kw>
<kw name="Step_alive_retry">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:42.555">${res_dict} = {'data': '', 'result': '4153', 'status': True, 'request': '41'}</msg>
<status endtime="20190121 13:05:42.557" status="PASS" starttime="20190121 13:05:42.495"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:42.581">${value} = True</msg>
<status endtime="20190121 13:05:42.582" status="PASS" starttime="20190121 13:05:42.560"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:05:42.589" status="PASS" starttime="20190121 13:05:42.585"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:43.596">Slept 1 second</msg>
<status endtime="20190121 13:05:43.599" status="PASS" starttime="20190121 13:05:42.592"></status>
</kw>
<status endtime="20190121 13:05:43.601" status="PASS" starttime="20190121 13:05:42.489"></status>
</kw>
<status endtime="20190121 13:05:43.604" status="PASS" starttime="20190121 13:05:41.313"></status>
</kw>
<kw name="POWER_ON_NAD">
<doc>Test the POWER_ON_NAD functionality</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the POWER_ON_NAD</arg>
<arg>functionality</arg>
</arguments>
<status endtime="20190121 13:05:43.620" status="PASS" starttime="20190121 13:05:43.616"></status>
</kw>
<kw name="POWERCYCLE">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:43.678" status="PASS" starttime="20190121 13:05:43.631"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:43.741" status="PASS" starttime="20190121 13:05:43.681"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:05:43.803" status="PASS" starttime="20190121 13:05:43.744"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:45.812">Slept 2 seconds</msg>
<status endtime="20190121 13:05:45.814" status="PASS" starttime="20190121 13:05:43.808"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:05:45.863" status="PASS" starttime="20190121 13:05:45.817"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:46.871">Slept 1 second</msg>
<status endtime="20190121 13:05:46.873" status="PASS" starttime="20190121 13:05:45.866"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:05:46.922" status="PASS" starttime="20190121 13:05:46.876"></status>
</kw>
<status endtime="20190121 13:05:46.925" status="PASS" starttime="20190121 13:05:43.622"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:46.951">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg level="INFO" timestamp="20190121 13:05:46.981">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:05:46.996">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:05:46.999">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:05:47.000" status="PASS" starttime="20190121 13:05:46.946"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:47.010">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190121 13:05:47.010" status="PASS" starttime="20190121 13:05:47.004"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:47.018">1 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:05:47.020">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status endtime="20190121 13:05:47.021" status="PASS" starttime="20190121 13:05:47.014"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:47.028">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190121 13:05:47.029" status="PASS" starttime="20190121 13:05:47.023"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status endtime="20190121 13:05:47.037" status="PASS" starttime="20190121 13:05:47.032"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:47.044" html="yes">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status endtime="20190121 13:05:47.046" status="PASS" starttime="20190121 13:05:47.040"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:05:47.050">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190121 13:05:47.051" status="PASS" starttime="20190121 13:05:46.938"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:47.214">${res_dict} = {'result': '5453', 'flowctrl': '', 'data': '2002e7cf', 'status': True, 'response': 'TS', 'request': ''}</msg>
<status endtime="20190121 13:05:47.215" status="PASS" starttime="20190121 13:05:47.054"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:47.234">{'result': '5453', 'flowctrl': '', 'data': '2002e7cf', 'status': True, 'response': 'TS', 'request': ''}</msg>
<status endtime="20190121 13:05:47.245" status="PASS" starttime="20190121 13:05:47.223"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:49.252">Slept 2 seconds</msg>
<status endtime="20190121 13:05:49.254" status="PASS" starttime="20190121 13:05:47.248"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:49.282">${value} = 5453</msg>
<status endtime="20190121 13:05:49.283" status="PASS" starttime="20190121 13:05:49.257"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:05:49.292" status="PASS" starttime="20190121 13:05:49.286"></status>
</kw>
<status endtime="20190121 13:05:49.294" status="PASS" starttime="20190121 13:05:46.933"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:49.364">${res_dict} = {'data': '', 'result': '4953', 'status': True, 'request': '49'}</msg>
<status endtime="20190121 13:05:49.365" status="PASS" starttime="20190121 13:05:49.302"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:49.389">${value} = True</msg>
<status endtime="20190121 13:05:49.390" status="PASS" starttime="20190121 13:05:49.368"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:05:49.397" status="PASS" starttime="20190121 13:05:49.393"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:50.404">Slept 1 second</msg>
<status endtime="20190121 13:05:50.407" status="PASS" starttime="20190121 13:05:49.400"></status>
</kw>
<status endtime="20190121 13:05:50.409" status="PASS" starttime="20190121 13:05:49.296"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:50.514">${res_dict} = {'data': '0100', 'result': '475653', 'status': True, 'request': '4756'}</msg>
<status endtime="20190121 13:05:50.515" status="PASS" starttime="20190121 13:05:50.417"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status endtime="20190121 13:05:50.531" status="PASS" starttime="20190121 13:05:50.518"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:05:51.539">Slept 1 second</msg>
<status endtime="20190121 13:05:51.541" status="PASS" starttime="20190121 13:05:50.534"></status>
</kw>
<status endtime="20190121 13:05:51.543" status="PASS" starttime="20190121 13:05:50.411"></status>
</kw>
<status endtime="20190121 13:05:51.546" status="PASS" starttime="20190121 13:05:46.927"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_POWERONNAD}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:51.616">${res_dict} = {'data': '', 'result': '520153', 'status': True, 'request': '5201'}</msg>
<status endtime="20190121 13:05:51.617" status="PASS" starttime="20190121 13:05:51.555"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190121 13:05:51.626" status="PASS" starttime="20190121 13:05:51.621"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:05:51.650">${value} = True</msg>
<status endtime="20190121 13:05:51.651" status="PASS" starttime="20190121 13:05:51.629"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:05:51.655">${value} = True</msg>
<status endtime="20190121 13:05:51.656" status="PASS" starttime="20190121 13:05:51.548"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:05:51.663" status="PASS" starttime="20190121 13:05:51.658"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:01.669">Slept 10 seconds</msg>
<status endtime="20190121 13:06:01.671" status="PASS" starttime="20190121 13:05:51.665"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:01.730">${KLEMME30} = [[12225, 128], [12300, 136]]</msg>
<status endtime="20190121 13:06:01.731" status="PASS" starttime="20190121 13:06:01.680"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:01.758">${CURR_VCARBAT} = 128</msg>
<status endtime="20190121 13:06:01.758" status="PASS" starttime="20190121 13:06:01.734"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:01.784">${CURR_KL30} = 136</msg>
<status endtime="20190121 13:06:01.785" status="PASS" starttime="20190121 13:06:01.761"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:01.792">${TIMENOW} = 1548075961</msg>
<status endtime="20190121 13:06:01.793" status="PASS" starttime="20190121 13:06:01.788"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status endtime="20190121 13:06:01.803" status="PASS" starttime="20190121 13:06:01.796"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:06:01.808">${TIMENOW} = 1548075961</msg>
<msg level="INFO" timestamp="20190121 13:06:01.809">${CURR_VCARBAT} = 128</msg>
<msg level="INFO" timestamp="20190121 13:06:01.810">${CURR_KL30} = 136</msg>
<status endtime="20190121 13:06:01.812" status="PASS" starttime="20190121 13:06:01.674"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &gt; 50</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &gt; 50</arg>
</arguments>
<status endtime="20190121 13:06:01.827" status="PASS" starttime="20190121 13:06:01.821"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:06:01.828">${fbus_resp} = None</msg>
<status endtime="20190121 13:06:01.829" status="PASS" starttime="20190121 13:06:01.815"></status>
</kw>
<status endtime="20190121 13:06:01.831" status="PASS" starttime="20190121 13:05:43.606"></status>
</kw>
<kw name="SHUTDOWNSYSTEM">
<doc>Test the shutdownsystem functionality</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the shutdownsystem functionality</arg>
</arguments>
<status endtime="20190121 13:06:01.844" status="PASS" starttime="20190121 13:06:01.840"></status>
</kw>
<kw name="POWERCYCLE">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:06:01.903" status="PASS" starttime="20190121 13:06:01.852"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:06:01.969" status="PASS" starttime="20190121 13:06:01.907"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:06:02.033" status="PASS" starttime="20190121 13:06:01.971"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:04.041">Slept 2 seconds</msg>
<status endtime="20190121 13:06:04.043" status="PASS" starttime="20190121 13:06:02.036"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:06:04.093" status="PASS" starttime="20190121 13:06:04.046"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:05.101">Slept 1 second</msg>
<status endtime="20190121 13:06:05.103" status="PASS" starttime="20190121 13:06:04.096"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:06:05.155" status="PASS" starttime="20190121 13:06:05.105"></status>
</kw>
<status endtime="20190121 13:06:05.159" status="PASS" starttime="20190121 13:06:01.846"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:05.185">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg level="INFO" timestamp="20190121 13:06:05.214">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:06:05.229">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:06:05.232">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:06:05.233" status="PASS" starttime="20190121 13:06:05.180"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:05.244">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190121 13:06:05.245" status="PASS" starttime="20190121 13:06:05.236"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:05.253">1 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:06:05.255">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status endtime="20190121 13:06:05.255" status="PASS" starttime="20190121 13:06:05.248"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:05.263">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190121 13:06:05.264" status="PASS" starttime="20190121 13:06:05.258"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status endtime="20190121 13:06:05.272" status="PASS" starttime="20190121 13:06:05.267"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:05.280" html="yes">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status endtime="20190121 13:06:05.282" status="PASS" starttime="20190121 13:06:05.275"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:06:05.286">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190121 13:06:05.286" status="PASS" starttime="20190121 13:06:05.171"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:05.699">${res_dict} = {'result': '5453', 'flowctrl': '', 'data': '2002e7cf', 'status': True, 'response': 'TS', 'request': ''}</msg>
<status endtime="20190121 13:06:05.702" status="PASS" starttime="20190121 13:06:05.289"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:05.720">{'result': '5453', 'flowctrl': '', 'data': '2002e7cf', 'status': True, 'response': 'TS', 'request': ''}</msg>
<status endtime="20190121 13:06:05.734" status="PASS" starttime="20190121 13:06:05.705"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:07.742">Slept 2 seconds</msg>
<status endtime="20190121 13:06:07.744" status="PASS" starttime="20190121 13:06:05.737"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:07.770">${value} = 5453</msg>
<status endtime="20190121 13:06:07.770" status="PASS" starttime="20190121 13:06:07.747"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:06:07.788" status="PASS" starttime="20190121 13:06:07.773"></status>
</kw>
<status endtime="20190121 13:06:07.791" status="PASS" starttime="20190121 13:06:05.166"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:07.907">${res_dict} = {'data': '', 'result': '4953', 'status': True, 'request': '49'}</msg>
<status endtime="20190121 13:06:07.908" status="PASS" starttime="20190121 13:06:07.799"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:07.944">${value} = True</msg>
<status endtime="20190121 13:06:07.944" status="PASS" starttime="20190121 13:06:07.911"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:06:07.951" status="PASS" starttime="20190121 13:06:07.947"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:08.959">Slept 1 second</msg>
<status endtime="20190121 13:06:08.961" status="PASS" starttime="20190121 13:06:07.954"></status>
</kw>
<status endtime="20190121 13:06:08.963" status="PASS" starttime="20190121 13:06:07.793"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:09.037">${res_dict} = {'data': '0100', 'result': '475653', 'status': True, 'request': '4756'}</msg>
<status endtime="20190121 13:06:09.038" status="PASS" starttime="20190121 13:06:08.973"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status endtime="20190121 13:06:09.047" status="PASS" starttime="20190121 13:06:09.041"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:10.054">Slept 1 second</msg>
<status endtime="20190121 13:06:10.056" status="PASS" starttime="20190121 13:06:09.049"></status>
</kw>
<status endtime="20190121 13:06:10.059" status="PASS" starttime="20190121 13:06:08.965"></status>
</kw>
<status endtime="20190121 13:06:10.061" status="PASS" starttime="20190121 13:06:05.161"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_SHUTDOWNSYSTEM}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:10.143">${res_dict} = {'data': '', 'result': '520246', 'status': False, 'request': '5202'}</msg>
<status endtime="20190121 13:06:10.144" status="PASS" starttime="20190121 13:06:10.070"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190121 13:06:10.153" status="PASS" starttime="20190121 13:06:10.147"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:10.178">${value} = False</msg>
<status endtime="20190121 13:06:10.178" status="PASS" starttime="20190121 13:06:10.156"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:06:10.182">${value} = False</msg>
<status endtime="20190121 13:06:10.183" status="PASS" starttime="20190121 13:06:10.063"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be True">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:06:10.190" status="PASS" starttime="20190121 13:06:10.186"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:15.196">Slept 5 seconds</msg>
<status endtime="20190121 13:06:15.199" status="PASS" starttime="20190121 13:06:10.193"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:15.257">${KLEMME30} = [[12225, 123], [12300, 3265]]</msg>
<status endtime="20190121 13:06:15.258" status="PASS" starttime="20190121 13:06:15.207"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:15.283">${CURR_VCARBAT} = 123</msg>
<status endtime="20190121 13:06:15.284" status="PASS" starttime="20190121 13:06:15.261"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:15.309">${CURR_KL30} = 3265</msg>
<status endtime="20190121 13:06:15.310" status="PASS" starttime="20190121 13:06:15.287"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:15.317">${TIMENOW} = 1548075975</msg>
<status endtime="20190121 13:06:15.318" status="PASS" starttime="20190121 13:06:15.313"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status endtime="20190121 13:06:15.328" status="PASS" starttime="20190121 13:06:15.321"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:06:15.333">${TIMENOW} = 1548075975</msg>
<msg level="INFO" timestamp="20190121 13:06:15.334">${CURR_VCARBAT} = 123</msg>
<msg level="INFO" timestamp="20190121 13:06:15.335">${CURR_KL30} = 3265</msg>
<status endtime="20190121 13:06:15.336" status="PASS" starttime="20190121 13:06:15.201"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:06:15.351">'123 &lt; 5' should be true.</msg>
<status endtime="20190121 13:06:15.352" status="FAIL" starttime="20190121 13:06:15.344"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:06:15.354">${fbus_resp} = None</msg>
<status endtime="20190121 13:06:15.355" status="FAIL" starttime="20190121 13:06:15.339"></status>
</kw>
<status endtime="20190121 13:06:15.358" status="FAIL" starttime="20190121 13:06:01.833"></status>
</kw>
<kw name="MCUSTANDBY">
<doc>Test the mcu stanby functionality</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the mcu stanby functionality</arg>
</arguments>
<status endtime="20190121 13:06:15.372" status="PASS" starttime="20190121 13:06:15.367"></status>
</kw>
<kw name="POWERCYCLE">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:06:15.429" status="PASS" starttime="20190121 13:06:15.380"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:06:15.493" status="PASS" starttime="20190121 13:06:15.431"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:06:15.555" status="PASS" starttime="20190121 13:06:15.496"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:17.569">Slept 2 seconds</msg>
<status endtime="20190121 13:06:17.577" status="PASS" starttime="20190121 13:06:15.559"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:06:17.756" status="PASS" starttime="20190121 13:06:17.580"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:18.776">Slept 1 second</msg>
<status endtime="20190121 13:06:18.778" status="PASS" starttime="20190121 13:06:17.759"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:06:18.827" status="PASS" starttime="20190121 13:06:18.781"></status>
</kw>
<status endtime="20190121 13:06:18.830" status="PASS" starttime="20190121 13:06:15.374"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:18.857">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg level="INFO" timestamp="20190121 13:06:18.885">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:06:18.900">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:06:18.903">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:06:18.904" status="PASS" starttime="20190121 13:06:18.851"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:18.914">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190121 13:06:18.915" status="PASS" starttime="20190121 13:06:18.908"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:18.922">1 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:06:18.927">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status endtime="20190121 13:06:18.928" status="PASS" starttime="20190121 13:06:18.918"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:18.936">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190121 13:06:18.937" status="PASS" starttime="20190121 13:06:18.931"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status endtime="20190121 13:06:18.945" status="PASS" starttime="20190121 13:06:18.940"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:18.953" html="yes">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status endtime="20190121 13:06:18.954" status="PASS" starttime="20190121 13:06:18.948"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:06:18.958">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190121 13:06:18.959" status="PASS" starttime="20190121 13:06:18.844"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:19.126">${res_dict} = {'result': '5453', 'flowctrl': '', 'data': '2002e7cf', 'status': True, 'response': 'TS', 'request': ''}</msg>
<status endtime="20190121 13:06:19.127" status="PASS" starttime="20190121 13:06:18.962"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:19.149">{'result': '5453', 'flowctrl': '', 'data': '2002e7cf', 'status': True, 'response': 'TS', 'request': ''}</msg>
<status endtime="20190121 13:06:19.152" status="PASS" starttime="20190121 13:06:19.143"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:21.159">Slept 2 seconds</msg>
<status endtime="20190121 13:06:21.161" status="PASS" starttime="20190121 13:06:19.154"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:21.186">${value} = 5453</msg>
<status endtime="20190121 13:06:21.187" status="PASS" starttime="20190121 13:06:21.164"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:06:21.196" status="PASS" starttime="20190121 13:06:21.190"></status>
</kw>
<status endtime="20190121 13:06:21.198" status="PASS" starttime="20190121 13:06:18.838"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:21.266">${res_dict} = {'data': '', 'result': '4953', 'status': True, 'request': '49'}</msg>
<status endtime="20190121 13:06:21.266" status="PASS" starttime="20190121 13:06:21.206"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:21.291">${value} = True</msg>
<status endtime="20190121 13:06:21.293" status="PASS" starttime="20190121 13:06:21.270"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:06:21.301" status="PASS" starttime="20190121 13:06:21.297"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:22.308">Slept 1 second</msg>
<status endtime="20190121 13:06:22.310" status="PASS" starttime="20190121 13:06:21.304"></status>
</kw>
<status endtime="20190121 13:06:22.313" status="PASS" starttime="20190121 13:06:21.200"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:22.470">${res_dict} = {'data': '0100', 'result': '475653', 'status': True, 'request': '4756'}</msg>
<status endtime="20190121 13:06:22.471" status="PASS" starttime="20190121 13:06:22.321"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status endtime="20190121 13:06:22.489" status="PASS" starttime="20190121 13:06:22.474"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:23.508">Slept 1 second</msg>
<status endtime="20190121 13:06:23.514" status="PASS" starttime="20190121 13:06:22.492"></status>
</kw>
<status endtime="20190121 13:06:23.516" status="PASS" starttime="20190121 13:06:22.315"></status>
</kw>
<status endtime="20190121 13:06:23.518" status="PASS" starttime="20190121 13:06:18.833"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_MCUSTANDBY}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:23.617">${res_dict} = {'data': '', 'result': '520346', 'status': False, 'request': '5203'}</msg>
<status endtime="20190121 13:06:23.618" status="PASS" starttime="20190121 13:06:23.531"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190121 13:06:23.626" status="PASS" starttime="20190121 13:06:23.621"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:23.651">${value} = False</msg>
<status endtime="20190121 13:06:23.652" status="PASS" starttime="20190121 13:06:23.629"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:06:23.656">${value} = False</msg>
<status endtime="20190121 13:06:23.656" status="PASS" starttime="20190121 13:06:23.520"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be True">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:06:23.663" status="PASS" starttime="20190121 13:06:23.659"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:28.670">Slept 5 seconds</msg>
<status endtime="20190121 13:06:28.672" status="PASS" starttime="20190121 13:06:23.666"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:28.730">${KLEMME30} = [[12250, 80], [12300, 80]]</msg>
<status endtime="20190121 13:06:28.731" status="PASS" starttime="20190121 13:06:28.681"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:28.756">${CURR_VCARBAT} = 80</msg>
<status endtime="20190121 13:06:28.757" status="PASS" starttime="20190121 13:06:28.734"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:28.782">${CURR_KL30} = 80</msg>
<status endtime="20190121 13:06:28.783" status="PASS" starttime="20190121 13:06:28.760"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:28.790">${TIMENOW} = 1548075988</msg>
<status endtime="20190121 13:06:28.791" status="PASS" starttime="20190121 13:06:28.786"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status endtime="20190121 13:06:28.801" status="PASS" starttime="20190121 13:06:28.794"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:06:28.806">${TIMENOW} = 1548075988</msg>
<msg level="INFO" timestamp="20190121 13:06:28.807">${CURR_VCARBAT} = 80</msg>
<msg level="INFO" timestamp="20190121 13:06:28.808">${CURR_KL30} = 80</msg>
<status endtime="20190121 13:06:28.809" status="PASS" starttime="20190121 13:06:28.674"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<msg level="FAIL" timestamp="20190121 13:06:28.824">'80 &lt; 5' should be true.</msg>
<status endtime="20190121 13:06:28.825" status="FAIL" starttime="20190121 13:06:28.817"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:06:28.827">${fbus_resp} = None</msg>
<status endtime="20190121 13:06:28.828" status="FAIL" starttime="20190121 13:06:28.812"></status>
</kw>
<status endtime="20190121 13:06:28.831" status="FAIL" starttime="20190121 13:06:15.360"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:06:28.906" status="PASS" starttime="20190121 13:06:28.844"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:06:28.969" status="PASS" starttime="20190121 13:06:28.909"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:06:29.039" status="PASS" starttime="20190121 13:06:28.976"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:30.049">Slept 1 second</msg>
<status endtime="20190121 13:06:30.051" status="PASS" starttime="20190121 13:06:29.042"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:06:30.101" status="PASS" starttime="20190121 13:06:30.054"></status>
</kw>
<status endtime="20190121 13:06:30.104" status="PASS" starttime="20190121 13:06:28.838"></status>
</kw>
<doc>Implements Test Task SKTB-SKTB-56067 Power testroutine</doc>
<tags>
<tag>Power testroutine</tag>
</tags>
<status endtime="20190121 13:06:30.105" critical="yes" status="FAIL" starttime="20190121 13:05:35.550">Several failures occurred:

1) '123 &lt; 5' should be true.

2) '80 &lt; 5' should be true.</status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg level="INFO" timestamp="20190121 13:06:31.622">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190121 13:06:31.647">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190121 13:06:31.673" status="PASS" starttime="20190121 13:06:30.145"></status>
</kw>
<status endtime="20190121 13:06:31.675" status="PASS" starttime="20190121 13:06:30.122"></status>
</kw>
<status endtime="20190121 13:06:31.677" status="PASS" starttime="20190121 13:06:30.116"></status>
</kw>
<doc>Power testroutine testcase</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190121 13:06:31.678" status="FAIL" starttime="20190121 13:05:32.765"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56094.robot" id="s1-s16" name="SKTB-56094">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:32.413">Connecting to tnt-server localhost...</msg>
<status endtime="20190121 13:06:32.423" status="PASS" starttime="20190121 13:06:32.408"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:32.432">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190121 13:06:32.457">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190121 13:06:34.643">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190121 13:06:34.645" status="PASS" starttime="20190121 13:06:32.426"></status>
</kw>
<status endtime="20190121 13:06:34.648" status="PASS" starttime="20190121 13:06:32.393"></status>
</kw>
<test id="s1-s16-t1" name="SKTB-SKTB-56094">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:06:34.846" status="PASS" starttime="20190121 13:06:34.722"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:06:34.935" status="PASS" starttime="20190121 13:06:34.849"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:06:35.102" status="PASS" starttime="20190121 13:06:34.938"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:37.120">Slept 2 seconds</msg>
<status endtime="20190121 13:06:37.122" status="PASS" starttime="20190121 13:06:35.105"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:06:37.225" status="PASS" starttime="20190121 13:06:37.128"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:38.245">Slept 1 second</msg>
<status endtime="20190121 13:06:38.247" status="PASS" starttime="20190121 13:06:37.228"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190121 13:06:38.297" status="PASS" starttime="20190121 13:06:38.250"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:40.304">Slept 2 seconds</msg>
<status endtime="20190121 13:06:40.307" status="PASS" starttime="20190121 13:06:38.300"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:06:40.354" status="PASS" starttime="20190121 13:06:40.309"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190121 13:06:40.404" status="PASS" starttime="20190121 13:06:40.357"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190121 13:06:40.453" status="PASS" starttime="20190121 13:06:40.407"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190121 13:06:40.501" status="PASS" starttime="20190121 13:06:40.456"></status>
</kw>
<status endtime="20190121 13:06:40.504" status="PASS" starttime="20190121 13:06:34.701"></status>
</kw>
<kw name="TEST_SERIAL_COMMUNICATION">
<doc>Test serial communication and change baudrate if necessary</doc>
<kw name="Step_alive">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:40.597">${res_dict} = {'data': '', 'result': '4153', 'status': True, 'request': '41'}</msg>
<status endtime="20190121 13:06:40.598" status="PASS" starttime="20190121 13:06:40.519"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:40.661">${value} = True</msg>
<status endtime="20190121 13:06:40.662" status="PASS" starttime="20190121 13:06:40.609"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190121 13:06:40.677" status="PASS" starttime="20190121 13:06:40.668"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:41.684">Slept 1 second</msg>
<status endtime="20190121 13:06:41.686" status="PASS" starttime="20190121 13:06:40.679"></status>
</kw>
<status endtime="20190121 13:06:41.688" status="PASS" starttime="20190121 13:06:40.512"></status>
</kw>
<kw name="Step_alive_retry">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:41.757">${res_dict} = {'data': '', 'result': '4153', 'status': True, 'request': '41'}</msg>
<status endtime="20190121 13:06:41.758" status="PASS" starttime="20190121 13:06:41.696"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:41.786">${value} = True</msg>
<status endtime="20190121 13:06:41.786" status="PASS" starttime="20190121 13:06:41.761"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:06:41.793" status="PASS" starttime="20190121 13:06:41.789"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:42.814">Slept 1 second</msg>
<status endtime="20190121 13:06:42.816" status="PASS" starttime="20190121 13:06:41.796"></status>
</kw>
<status endtime="20190121 13:06:42.818" status="PASS" starttime="20190121 13:06:41.690"></status>
</kw>
<status endtime="20190121 13:06:42.821" status="PASS" starttime="20190121 13:06:40.507"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the rtestroutine and init it</doc>
<kw name="Step_load">
<arguments>
<arg>${VEHICLE_TR_PATH}</arg>
</arguments>
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${TESTROUTINE_FILEPATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:42.898">Starting process:
find /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_*.bin</msg>
<msg level="INFO" timestamp="20190121 13:06:42.974">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:06:43.007">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:06:43.011">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:06:43.012" status="PASS" starttime="20190121 13:06:42.880"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:43.033">${stdout_path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status endtime="20190121 13:06:43.034" status="PASS" starttime="20190121 13:06:43.028"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:43.049">1 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:06:43.051">${temp} = ['/home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin']</msg>
<status endtime="20190121 13:06:43.052" status="PASS" starttime="20190121 13:06:43.039"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:43.060">${path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status endtime="20190121 13:06:43.061" status="PASS" starttime="20190121 13:06:43.055"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status endtime="20190121 13:06:43.069" status="PASS" starttime="20190121 13:06:43.064"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:43.077" html="yes">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status endtime="20190121 13:06:43.079" status="PASS" starttime="20190121 13:06:43.072"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:06:43.083">${matched_path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status endtime="20190121 13:06:43.084" status="PASS" starttime="20190121 13:06:42.851"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:44.020">${res_dict} = {'result': '5453', 'flowctrl': '', 'data': 'd8dd0dd1', 'status': True, 'response': 'TS', 'request': ''}</msg>
<status endtime="20190121 13:06:44.029" status="PASS" starttime="20190121 13:06:43.087"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:44.067">{'result': '5453', 'flowctrl': '', 'data': 'd8dd0dd1', 'status': True, 'response': 'TS', 'request': ''}</msg>
<status endtime="20190121 13:06:44.073" status="PASS" starttime="20190121 13:06:44.032"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:46.120">Slept 2 seconds</msg>
<status endtime="20190121 13:06:46.122" status="PASS" starttime="20190121 13:06:44.099"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:46.151">${value} = 5453</msg>
<status endtime="20190121 13:06:46.152" status="PASS" starttime="20190121 13:06:46.125"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:06:46.160" status="PASS" starttime="20190121 13:06:46.154"></status>
</kw>
<status endtime="20190121 13:06:46.162" status="PASS" starttime="20190121 13:06:42.835"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:46.229">${res_dict} = {'data': '', 'result': '4953', 'status': True, 'request': '49'}</msg>
<status endtime="20190121 13:06:46.230" status="PASS" starttime="20190121 13:06:46.170"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:46.258">${value} = True</msg>
<status endtime="20190121 13:06:46.259" status="PASS" starttime="20190121 13:06:46.234"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190121 13:06:46.266" status="PASS" starttime="20190121 13:06:46.262"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:47.273">Slept 1 second</msg>
<status endtime="20190121 13:06:47.276" status="PASS" starttime="20190121 13:06:46.269"></status>
</kw>
<status endtime="20190121 13:06:47.278" status="PASS" starttime="20190121 13:06:46.164"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:47.354">${res_dict} = {'data': '0101', 'result': '475653', 'status': True, 'request': '4756'}</msg>
<status endtime="20190121 13:06:47.355" status="PASS" starttime="20190121 13:06:47.286"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status endtime="20190121 13:06:47.364" status="PASS" starttime="20190121 13:06:47.358"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:48.372">Slept 1 second</msg>
<status endtime="20190121 13:06:48.374" status="PASS" starttime="20190121 13:06:47.367"></status>
</kw>
<status endtime="20190121 13:06:48.377" status="PASS" starttime="20190121 13:06:47.280"></status>
</kw>
<status endtime="20190121 13:06:48.379" status="PASS" starttime="20190121 13:06:42.823"></status>
</kw>
<kw name="CAN_SENDDATA_CAN1_TEST">
<doc>Test can send and receive data can 1</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test can send and receive data can 1</arg>
</arguments>
<status endtime="20190121 13:06:48.392" status="PASS" starttime="20190121 13:06:48.387"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_0}</arg>
<arg>${250000}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190121 13:06:48.413" status="PASS" starttime="20190121 13:06:48.404"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:48.422">Starting process:
sudo ip link set can0 down</msg>
<msg level="INFO" timestamp="20190121 13:06:48.450">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:06:48.522">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:06:48.525">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:06:48.526" status="PASS" starttime="20190121 13:06:48.416"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:06:48.538" status="PASS" starttime="20190121 13:06:48.529"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:48.548">Starting process:
sudo ip link set can0 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190121 13:06:48.576">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:06:48.634">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:06:48.637">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:06:48.638" status="PASS" starttime="20190121 13:06:48.541"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:06:48.650" status="PASS" starttime="20190121 13:06:48.641"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:48.659">Starting process:
sudo ip link set can0 up</msg>
<msg level="INFO" timestamp="20190121 13:06:48.687">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:06:48.775">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:06:48.778">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:06:48.779" status="PASS" starttime="20190121 13:06:48.653"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:06:48.811" status="PASS" starttime="20190121 13:06:48.787"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190121 13:06:48.814" status="PASS" starttime="20190121 13:06:48.395"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${CAN_MSG_ID_RX}:${MASK},${CAN_MSG_ID_TX}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:48.826">Starting process:
candump -t a can0,767:7FF,768:7FF</msg>
<msg level="INFO" timestamp="20190121 13:06:48.863">${candump_ID} = 198</msg>
<status endtime="20190121 13:06:48.864" status="PASS" starttime="20190121 13:06:48.818"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>cangen ${${CAN_0}} -g ${CYCLE_TIME} -I ${CAN_MSG_ID_TX} -L ${DLC} -D ${CAN_MESSAGE} -n ${MSG_NUMBER}</arg>
<arg>shell=True</arg>
<arg>alias=CANGEN</arg>
</arguments>
<assign>
<var>${cangen_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:48.889">Starting process:
cangen can0 -g 500 -I 768 -L 8 -D AABBCCDD11223344 -n 3</msg>
<msg level="INFO" timestamp="20190121 13:06:48.920">${cangen_ID} = 199</msg>
<status endtime="20190121 13:06:48.924" status="PASS" starttime="20190121 13:06:48.874"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${CAN_SENDDATA_CAN1}</arg>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${data}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setbuffer</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:49.004">${res_dict} = {'data': '', 'result': '534253', 'status': True, 'request': '53420008aabbccdd11223344'}</msg>
<status endtime="20190121 13:06:49.005" status="PASS" starttime="20190121 13:06:48.942"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190121 13:06:49.014" status="PASS" starttime="20190121 13:06:49.008"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:49.052">${value} = True</msg>
<status endtime="20190121 13:06:49.053" status="PASS" starttime="20190121 13:06:49.017"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status setbuffer: ${value}</arg>
</arguments>
<status endtime="20190121 13:06:49.072" status="PASS" starttime="20190121 13:06:49.056"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${FUNC}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:49.154">${res_dict} = {'data': '', 'result': '520153', 'status': True, 'request': '5201'}</msg>
<status endtime="20190121 13:06:49.155" status="PASS" starttime="20190121 13:06:49.082"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190121 13:06:49.164" status="PASS" starttime="20190121 13:06:49.159"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:49.193">${value} = True</msg>
<status endtime="20190121 13:06:49.194" status="PASS" starttime="20190121 13:06:49.168"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status exec: ${value}</arg>
</arguments>
<status endtime="20190121 13:06:49.202" status="PASS" starttime="20190121 13:06:49.197"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>getbuffer</arg>
<arg>some</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:49.289">${res_dict} = {'data': 'aabbccdd11223344', 'result': '474253', 'status': True, 'request': '4742'}</msg>
<status endtime="20190121 13:06:49.290" status="PASS" starttime="20190121 13:06:49.205"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190121 13:06:49.324" status="PASS" starttime="20190121 13:06:49.297"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:49.403">${status} = True</msg>
<status endtime="20190121 13:06:49.404" status="PASS" starttime="20190121 13:06:49.327"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status getbuffer: ${value}</arg>
</arguments>
<status endtime="20190121 13:06:49.423" status="PASS" starttime="20190121 13:06:49.407"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:49.474">${data} = aabbccdd11223344</msg>
<status endtime="20190121 13:06:49.475" status="PASS" starttime="20190121 13:06:49.425"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:06:49.491">${status} = True</msg>
<msg level="INFO" timestamp="20190121 13:06:49.493">${data} = aabbccdd11223344</msg>
<status endtime="20190121 13:06:49.493" status="PASS" starttime="20190121 13:06:48.927"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<status endtime="20190121 13:06:49.501" status="PASS" starttime="20190121 13:06:49.496"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data}</arg>
<arg>${CAN_MESSAGE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:06:49.523" status="PASS" starttime="20190121 13:06:49.516"></status>
</kw>
<kw name="Check_test_result">
<arguments>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=0.5 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:49.590">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:06:50.128">Process did not complete in 500 milliseconds.</msg>
<msg level="INFO" timestamp="20190121 13:06:50.132">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190121 13:06:50.146">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:06:50.149">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190121 13:06:50.150" status="PASS" starttime="20190121 13:06:49.578"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.162">4 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:06:50.164">${temp} = [' (1548076008.932027)  can0  768   [8]  AA BB CC DD 11 22 33 44', ' (1548076009.121404)  can0  767   [8]  AA BB CC DD 11 22 33 44', ' (1548076009.432245)  can0  768   [8]  AA BB CC DD 11 22 33 44', '...</msg>
<status endtime="20190121 13:06:50.165" status="PASS" starttime="20190121 13:06:50.153"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>withoutfilter</arg>
</arguments>
<assign>
<var>${FILTER}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.172">${FILTER} = ['withoutfilter']</msg>
<status endtime="20190121 13:06:50.173" status="PASS" starttime="20190121 13:06:50.168"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Set Canid Status And Filter">
<doc>Set  pass and stop ID filter for</doc>
<arguments>
<arg>status</arg>
<arg>${FILTER}</arg>
</arguments>
<status endtime="20190121 13:06:50.180" status="PASS" starttime="20190121 13:06:50.176"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.188">(1548076008.932027)  can0  768   [8]  AA BB CC DD 11 22 33 44
 (1548076009.121404)  can0  767   [8]  AA BB CC DD 11 22 33 44
 (1548076009.432245)  can0  768   [8]  AA BB CC DD 11 22 33 44
 (1548076009.932394)  can0  768   [8]  AA BB CC DD 11 22 33 44</msg>
<msg level="INFO" timestamp="20190121 13:06:50.190">${ret_list} = [{'timestamp': '1548076008.932027', 'id': '768', 'channel': 'can0', 'payload': 'AABBCCDD11223344'}, {'timestamp': '1548076009.121404', 'id': '767', 'channel': 'can0', 'payload': 'AABBCCDD11223344'}, {...</msg>
<status endtime="20190121 13:06:50.191" status="PASS" starttime="20190121 13:06:50.183"></status>
</kw>
<kw name="CHECK_EXISTENS_OF_CAN_MESSAGES_WITH_CANID">
<doc>This keyword Check CAN_Messages if payload with canID exist and return TRUE if exist</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${CAN_MSG_ID_RX}</arg>
<arg>${can_msg}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.208">${RESULT} = False</msg>
<status endtime="20190121 13:06:50.209" status="PASS" starttime="20190121 13:06:50.203"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.216">Length is 4</msg>
<msg level="INFO" timestamp="20190121 13:06:50.218">${count} = 4</msg>
<status endtime="20190121 13:06:50.218" status="PASS" starttime="20190121 13:06:50.212"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:06:50.226" status="PASS" starttime="20190121 13:06:50.221"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.234">${msgcount} = 0</msg>
<status endtime="20190121 13:06:50.235" status="PASS" starttime="20190121 13:06:50.229"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'timestamp': '1548076008.932027', 'id': '768', 'channel': 'can0', 'payload': 'AABBCCDD11223344'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.248">${payload} = AABBCCDD11223344</msg>
<status endtime="20190121 13:06:50.249" status="PASS" starttime="20190121 13:06:50.243"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.260">${can_id} = 768</msg>
<status endtime="20190121 13:06:50.261" status="PASS" starttime="20190121 13:06:50.252"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.272">${count_msg} = 1</msg>
<status endtime="20190121 13:06:50.273" status="PASS" starttime="20190121 13:06:50.264"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.283">${count_id} = 0</msg>
<status endtime="20190121 13:06:50.284" status="PASS" starttime="20190121 13:06:50.276"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.293">${msgcount} = 1</msg>
<status endtime="20190121 13:06:50.294" status="PASS" starttime="20190121 13:06:50.287"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.304">${RESULT} = False</msg>
<status endtime="20190121 13:06:50.305" status="PASS" starttime="20190121 13:06:50.297"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<status endtime="20190121 13:06:50.314" status="PASS" starttime="20190121 13:06:50.308"></status>
</kw>
<status endtime="20190121 13:06:50.315" status="PASS" starttime="20190121 13:06:50.240"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '1548076009.121404', 'id': '767', 'channel': 'can0', 'payload': 'AABBCCDD11223344'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.325">${payload} = AABBCCDD11223344</msg>
<status endtime="20190121 13:06:50.325" status="PASS" starttime="20190121 13:06:50.320"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.333">${can_id} = 767</msg>
<status endtime="20190121 13:06:50.334" status="PASS" starttime="20190121 13:06:50.328"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.344">${count_msg} = 1</msg>
<status endtime="20190121 13:06:50.345" status="PASS" starttime="20190121 13:06:50.337"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.355">${count_id} = 1</msg>
<status endtime="20190121 13:06:50.356" status="PASS" starttime="20190121 13:06:50.348"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.365">${msgcount} = 2</msg>
<status endtime="20190121 13:06:50.366" status="PASS" starttime="20190121 13:06:50.359"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:50.376">${RESULT} = True</msg>
<status endtime="20190121 13:06:50.377" status="PASS" starttime="20190121 13:06:50.369"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:50.385">Exiting for loop altogether.</msg>
<status endtime="20190121 13:06:50.387" status="PASS" starttime="20190121 13:06:50.379"></status>
</kw>
<status endtime="20190121 13:06:50.388" status="PASS" starttime="20190121 13:06:50.317"></status>
</kw>
<status endtime="20190121 13:06:50.389" status="PASS" starttime="20190121 13:06:50.236"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:06:50.393">${res} = True</msg>
<status endtime="20190121 13:06:50.394" status="PASS" starttime="20190121 13:06:50.194"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Liste: ${ret_list}</arg>
</arguments>
<status endtime="20190121 13:06:50.403" status="PASS" starttime="20190121 13:06:50.396"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:06:50.407">${res} = True</msg>
<status endtime="20190121 13:06:50.407" status="PASS" starttime="20190121 13:06:49.525"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:06:50.414" status="PASS" starttime="20190121 13:06:50.410"></status>
</kw>
<status endtime="20190121 13:06:50.417" status="PASS" starttime="20190121 13:06:48.381"></status>
</kw>
<kw name="CAN_SENDDATA_CAN3_TEST">
<doc>Test can send and receive data can 2</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test can send and receive data can 2</arg>
</arguments>
<status endtime="20190121 13:06:50.430" status="PASS" starttime="20190121 13:06:50.425"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:52.438">Slept 2 seconds</msg>
<status endtime="20190121 13:06:52.440" status="PASS" starttime="20190121 13:06:50.434"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190121 13:06:52.461" status="PASS" starttime="20190121 13:06:52.452"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:52.470">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190121 13:06:52.499">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:06:52.570">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:06:52.573">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:06:52.574" status="PASS" starttime="20190121 13:06:52.464"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:06:52.586" status="PASS" starttime="20190121 13:06:52.578"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:52.597">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190121 13:06:52.637">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:06:52.715">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:06:52.722">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:06:52.724" status="PASS" starttime="20190121 13:06:52.590"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:06:52.745" status="PASS" starttime="20190121 13:06:52.730"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:52.758">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190121 13:06:52.786">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:06:52.893">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:06:52.896">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190121 13:06:52.897" status="PASS" starttime="20190121 13:06:52.751"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190121 13:06:52.909" status="PASS" starttime="20190121 13:06:52.901"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190121 13:06:52.912" status="PASS" starttime="20190121 13:06:52.443"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_2},${CAN_MSG_ID_RX}:${MASK},${CAN_MSG_ID_TX}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:52.923">Starting process:
candump -t a can2,767:7FF,768:7FF</msg>
<msg level="INFO" timestamp="20190121 13:06:52.955">${candump_ID} = 203</msg>
<status endtime="20190121 13:06:52.959" status="PASS" starttime="20190121 13:06:52.915"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>cangen ${${CAN_2}} -g ${CYCLE_TIME} -I ${CAN_MSG_ID_TX} -L ${DLC} -D ${CAN_MESSAGE} -n ${MSG_NUMBER}</arg>
<arg>shell=True</arg>
<arg>alias=CANGEN</arg>
</arguments>
<assign>
<var>${cangen_ID}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:52.985">Starting process:
cangen can2 -g 500 -I 768 -L 8 -D AABBCCDD11223344 -n 3</msg>
<msg level="INFO" timestamp="20190121 13:06:53.015">${cangen_ID} = 204</msg>
<status endtime="20190121 13:06:53.020" status="PASS" starttime="20190121 13:06:52.963"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${CAN_SENDDATA_CAN3}</arg>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${data}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setbuffer</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:53.151">${res_dict} = {'data': '', 'result': '1efd54', 'status': False, 'request': '53420008aabbccdd11223344'}</msg>
<status endtime="20190121 13:06:53.152" status="PASS" starttime="20190121 13:06:53.038"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190121 13:06:53.185" status="PASS" starttime="20190121 13:06:53.167"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:53.226">${value} = False</msg>
<status endtime="20190121 13:06:53.227" status="PASS" starttime="20190121 13:06:53.193"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status setbuffer: ${value}</arg>
</arguments>
<status endtime="20190121 13:06:53.235" status="PASS" starttime="20190121 13:06:53.230"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${FUNC}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:53.302">${res_dict} = {'data': '', 'result': '520353', 'status': True, 'request': '5203'}</msg>
<status endtime="20190121 13:06:53.303" status="PASS" starttime="20190121 13:06:53.238"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190121 13:06:53.312" status="PASS" starttime="20190121 13:06:53.307"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:53.340">${value} = True</msg>
<status endtime="20190121 13:06:53.341" status="PASS" starttime="20190121 13:06:53.315"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status exec: ${value}</arg>
</arguments>
<status endtime="20190121 13:06:53.349" status="PASS" starttime="20190121 13:06:53.344"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>getbuffer</arg>
<arg>some</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:53.466">${res_dict} = {'data': 'aabbccdd11223344', 'result': '474253', 'status': True, 'request': '4742'}</msg>
<status endtime="20190121 13:06:53.467" status="PASS" starttime="20190121 13:06:53.352"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190121 13:06:53.479" status="PASS" starttime="20190121 13:06:53.472"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:53.510">${status} = True</msg>
<status endtime="20190121 13:06:53.512" status="PASS" starttime="20190121 13:06:53.482"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status getbuffer: ${value}</arg>
</arguments>
<status endtime="20190121 13:06:53.521" status="PASS" starttime="20190121 13:06:53.515"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:53.550">${data} = aabbccdd11223344</msg>
<status endtime="20190121 13:06:53.551" status="PASS" starttime="20190121 13:06:53.523"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:06:53.555">${status} = True</msg>
<msg level="INFO" timestamp="20190121 13:06:53.556">${data} = aabbccdd11223344</msg>
<status endtime="20190121 13:06:53.557" status="PASS" starttime="20190121 13:06:53.023"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<status endtime="20190121 13:06:53.565" status="PASS" starttime="20190121 13:06:53.560"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data}</arg>
<arg>${CAN_MESSAGE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190121 13:06:53.574" status="PASS" starttime="20190121 13:06:53.567"></status>
</kw>
<kw name="Check_test_result">
<arguments>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=0.5 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:53.589">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:06:54.099">Process did not complete in 500 milliseconds.</msg>
<msg level="INFO" timestamp="20190121 13:06:54.101">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190121 13:06:54.105">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:06:54.108">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190121 13:06:54.109" status="PASS" starttime="20190121 13:06:53.583"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.117">4 lines returned</msg>
<msg level="INFO" timestamp="20190121 13:06:54.119">${temp} = [' (1548076013.028151)  can2  768   [8]  AA BB CC DD 11 22 33 44', ' (1548076013.270207)  can2  767   [8]  AA BB CC DD 11 22 33 44', ' (1548076013.528613)  can2  768   [8]  AA BB CC DD 11 22 33 44', '...</msg>
<status endtime="20190121 13:06:54.119" status="PASS" starttime="20190121 13:06:54.111"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>withoutfilter</arg>
</arguments>
<assign>
<var>${FILTER}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.126">${FILTER} = ['withoutfilter']</msg>
<status endtime="20190121 13:06:54.127" status="PASS" starttime="20190121 13:06:54.122"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Set Canid Status And Filter">
<doc>Set  pass and stop ID filter for</doc>
<arguments>
<arg>status</arg>
<arg>${FILTER}</arg>
</arguments>
<status endtime="20190121 13:06:54.134" status="PASS" starttime="20190121 13:06:54.130"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.142">(1548076013.028151)  can2  768   [8]  AA BB CC DD 11 22 33 44
 (1548076013.270207)  can2  767   [8]  AA BB CC DD 11 22 33 44
 (1548076013.528613)  can2  768   [8]  AA BB CC DD 11 22 33 44
 (1548076014.028719)  can2  768   [8]  AA BB CC DD 11 22 33 44</msg>
<msg level="INFO" timestamp="20190121 13:06:54.144">${ret_list} = [{'timestamp': '1548076013.028151', 'id': '768', 'channel': 'can2', 'payload': 'AABBCCDD11223344'}, {'timestamp': '1548076013.270207', 'id': '767', 'channel': 'can2', 'payload': 'AABBCCDD11223344'}, {...</msg>
<status endtime="20190121 13:06:54.145" status="PASS" starttime="20190121 13:06:54.137"></status>
</kw>
<kw name="CHECK_EXISTENS_OF_CAN_MESSAGES_WITH_CANID">
<doc>This keyword Check CAN_Messages if payload with canID exist and return TRUE if exist</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${CAN_MSG_ID_RX}</arg>
<arg>${can_msg}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.162">${RESULT} = False</msg>
<status endtime="20190121 13:06:54.162" status="PASS" starttime="20190121 13:06:54.157"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.170">Length is 4</msg>
<msg level="INFO" timestamp="20190121 13:06:54.172">${count} = 4</msg>
<status endtime="20190121 13:06:54.172" status="PASS" starttime="20190121 13:06:54.166"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status endtime="20190121 13:06:54.181" status="PASS" starttime="20190121 13:06:54.175"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.189">${msgcount} = 0</msg>
<status endtime="20190121 13:06:54.190" status="PASS" starttime="20190121 13:06:54.184"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'timestamp': '1548076013.028151', 'id': '768', 'channel': 'can2', 'payload': 'AABBCCDD11223344'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.202">${payload} = AABBCCDD11223344</msg>
<status endtime="20190121 13:06:54.203" status="PASS" starttime="20190121 13:06:54.197"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.213">${can_id} = 768</msg>
<status endtime="20190121 13:06:54.214" status="PASS" starttime="20190121 13:06:54.207"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.225">${count_msg} = 1</msg>
<status endtime="20190121 13:06:54.226" status="PASS" starttime="20190121 13:06:54.217"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.247">${count_id} = 0</msg>
<status endtime="20190121 13:06:54.248" status="PASS" starttime="20190121 13:06:54.229"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.258">${msgcount} = 1</msg>
<status endtime="20190121 13:06:54.259" status="PASS" starttime="20190121 13:06:54.252"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.273">${RESULT} = False</msg>
<status endtime="20190121 13:06:54.274" status="PASS" starttime="20190121 13:06:54.262"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<status endtime="20190121 13:06:54.283" status="PASS" starttime="20190121 13:06:54.277"></status>
</kw>
<status endtime="20190121 13:06:54.284" status="PASS" starttime="20190121 13:06:54.194"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '1548076013.270207', 'id': '767', 'channel': 'can2', 'payload': 'AABBCCDD11223344'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.294">${payload} = AABBCCDD11223344</msg>
<status endtime="20190121 13:06:54.294" status="PASS" starttime="20190121 13:06:54.289"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.303">${can_id} = 767</msg>
<status endtime="20190121 13:06:54.304" status="PASS" starttime="20190121 13:06:54.297"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.315">${count_msg} = 1</msg>
<status endtime="20190121 13:06:54.315" status="PASS" starttime="20190121 13:06:54.307"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.326">${count_id} = 1</msg>
<status endtime="20190121 13:06:54.327" status="PASS" starttime="20190121 13:06:54.319"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.336">${msgcount} = 2</msg>
<status endtime="20190121 13:06:54.337" status="PASS" starttime="20190121 13:06:54.330"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:54.348">${RESULT} = True</msg>
<status endtime="20190121 13:06:54.349" status="PASS" starttime="20190121 13:06:54.340"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:54.358">Exiting for loop altogether.</msg>
<status endtime="20190121 13:06:54.360" status="PASS" starttime="20190121 13:06:54.352"></status>
</kw>
<status endtime="20190121 13:06:54.361" status="PASS" starttime="20190121 13:06:54.286"></status>
</kw>
<status endtime="20190121 13:06:54.362" status="PASS" starttime="20190121 13:06:54.191"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:06:54.366">${res} = True</msg>
<status endtime="20190121 13:06:54.366" status="PASS" starttime="20190121 13:06:54.147"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Liste: ${ret_list}</arg>
</arguments>
<status endtime="20190121 13:06:54.375" status="PASS" starttime="20190121 13:06:54.369"></status>
</kw>
<msg level="INFO" timestamp="20190121 13:06:54.379">${res} = True</msg>
<status endtime="20190121 13:06:54.380" status="PASS" starttime="20190121 13:06:53.576"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status endtime="20190121 13:06:54.387" status="PASS" starttime="20190121 13:06:54.382"></status>
</kw>
<status endtime="20190121 13:06:54.389" status="PASS" starttime="20190121 13:06:50.419"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:06:54.447" status="PASS" starttime="20190121 13:06:54.399"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:06:54.497" status="PASS" starttime="20190121 13:06:54.450"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190121 13:06:54.547" status="PASS" starttime="20190121 13:06:54.500"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190121 13:06:55.555">Slept 1 second</msg>
<status endtime="20190121 13:06:55.557" status="PASS" starttime="20190121 13:06:54.551"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190121 13:06:55.605" status="PASS" starttime="20190121 13:06:55.560"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>pkill candump</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${rm_res}</var>
</assign>
<msg level="INFO" timestamp="20190121 13:06:55.613">Starting process:
pkill candump</msg>
<msg level="INFO" timestamp="20190121 13:06:55.642">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190121 13:06:55.675">Process completed.</msg>
<msg level="INFO" timestamp="20190121 13:06:55.678">${rm_res} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190121 13:06:55.679" status="PASS" starttime="20190121 13:06:55.609"></status>
</kw>
<status endtime="20190121 13:06:55.682" status="PASS" starttime="20190121 13:06:54.393"></status>
</kw>
<doc>Implements Test Task SKTB-56094 Vehicle buses testroutine</doc>
<tags>
<tag>Vehicle buses testroutine</tag>
</tags>
<status endtime="20190121 13:06:55.683" critical="yes" status="PASS" starttime="20190121 13:06:34.666"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg level="INFO" timestamp="20190121 13:06:57.187">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190121 13:06:57.262">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190121 13:06:57.264" status="PASS" starttime="20190121 13:06:55.729"></status>
</kw>
<status endtime="20190121 13:06:57.275" status="PASS" starttime="20190121 13:06:55.701"></status>
</kw>
<status endtime="20190121 13:06:57.278" status="PASS" starttime="20190121 13:06:55.695"></status>
</kw>
<doc>Vehicle buses testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190121 13:06:57.278" status="PASS" starttime="20190121 13:06:31.845"></status>
</suite>
<status endtime="20190121 13:06:57.569" status="FAIL" starttime="20190121 12:57:13.889"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="4">Critical Tests</stat>
<stat pass="12" fail="4">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">CAN 1 diagnose test</stat>
<stat pass="1" fail="0">CAN 3 test</stat>
<stat pass="1" fail="0">CAN 3 test TX</stat>
<stat pass="1" fail="0">EEPROM</stat>
<stat pass="4" fail="0">FBUS</stat>
<stat pass="1" fail="0">Flashing</stat>
<stat pass="0" fail="2">GpioAdc testroutine</stat>
<stat pass="2" fail="1">GPIO Test</stat>
<stat pass="0" fail="1">Power testroutine</stat>
<stat pass="1" fail="0">Vehicle buses testroutine</stat>
</tag>
<suite>
<stat pass="12" fail="4" id="s1" name="Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094</stat>
<stat pass="1" fail="0" id="s1-s1" name="Update-Nad">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.Update-Nad</stat>
<stat pass="1" fail="0" id="s1-s2" name="CI update chorus">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.CI update chorus</stat>
<stat pass="0" fail="1" id="s1-s3" name="SKTB-31405">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-31405</stat>
<stat pass="0" fail="1" id="s1-s4" name="SKTB-33244">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-33244</stat>
<stat pass="1" fail="0" id="s1-s5" name="SKTB-13351">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-13351</stat>
<stat pass="1" fail="0" id="s1-s6" name="SKTB-34994">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-34994</stat>
<stat pass="1" fail="0" id="s1-s7" name="SKTB-41635">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-41635</stat>
<stat pass="1" fail="0" id="s1-s8" name="SKTB-46886">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-46886</stat>
<stat pass="1" fail="0" id="s1-s9" name="SKTB-47669">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-47669</stat>
<stat pass="1" fail="0" id="s1-s10" name="SKTB-48413">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-48413</stat>
<stat pass="0" fail="1" id="s1-s11" name="SKTB-49038">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-49038</stat>
<stat pass="1" fail="0" id="s1-s12" name="SKTB-49357">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-49357</stat>
<stat pass="1" fail="0" id="s1-s13" name="SKTB-41553">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-41553</stat>
<stat pass="1" fail="0" id="s1-s14" name="SKTB-56663">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-56663</stat>
<stat pass="0" fail="1" id="s1-s15" name="SKTB-56067">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-56067</stat>
<stat pass="1" fail="0" id="s1-s16" name="SKTB-56094">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-56094</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
